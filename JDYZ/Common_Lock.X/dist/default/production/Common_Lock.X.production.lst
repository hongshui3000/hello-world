

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jan 18 11:18:48 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F15354
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 2.00
    71                           ; Generated 27/05/2018 GMT
    72                           ; 
    73                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F15354 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  0010                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0016                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0119                     	;# 
   134  0119                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011A                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011C                     	;# 
   145  011C                     	;# 
   146  011C                     	;# 
   147  011D                     	;# 
   148  011D                     	;# 
   149  011D                     	;# 
   150  011E                     	;# 
   151  011E                     	;# 
   152  011E                     	;# 
   153  011F                     	;# 
   154  011F                     	;# 
   155  011F                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  018E                     	;# 
   161  018F                     	;# 
   162  0190                     	;# 
   163  0191                     	;# 
   164  0192                     	;# 
   165  0196                     	;# 
   166  0197                     	;# 
   167  0198                     	;# 
   168  0199                     	;# 
   169  019A                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  020C                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  020F                     	;# 
   177  020F                     	;# 
   178  0210                     	;# 
   179  0210                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  028C                     	;# 
   183  028C                     	;# 
   184  028D                     	;# 
   185  028D                     	;# 
   186  028E                     	;# 
   187  028F                     	;# 
   188  0290                     	;# 
   189  0291                     	;# 
   190  030C                     	;# 
   191  030C                     	;# 
   192  030D                     	;# 
   193  030E                     	;# 
   194  030F                     	;# 
   195  0310                     	;# 
   196  0310                     	;# 
   197  0311                     	;# 
   198  0312                     	;# 
   199  0313                     	;# 
   200  0314                     	;# 
   201  0314                     	;# 
   202  0315                     	;# 
   203  0316                     	;# 
   204  0318                     	;# 
   205  0318                     	;# 
   206  0319                     	;# 
   207  031A                     	;# 
   208  031C                     	;# 
   209  031C                     	;# 
   210  031D                     	;# 
   211  031E                     	;# 
   212  038C                     	;# 
   213  038C                     	;# 
   214  038D                     	;# 
   215  038E                     	;# 
   216  058C                     	;# 
   217  058C                     	;# 
   218  058D                     	;# 
   219  058E                     	;# 
   220  058F                     	;# 
   221  058F                     	;# 
   222  0590                     	;# 
   223  0591                     	;# 
   224  0592                     	;# 
   225  0593                     	;# 
   226  059C                     	;# 
   227  059C                     	;# 
   228  059D                     	;# 
   229  059D                     	;# 
   230  059E                     	;# 
   231  059F                     	;# 
   232  060C                     	;# 
   233  060D                     	;# 
   234  060E                     	;# 
   235  060F                     	;# 
   236  0610                     	;# 
   237  0611                     	;# 
   238  0612                     	;# 
   239  0613                     	;# 
   240  0614                     	;# 
   241  070C                     	;# 
   242  070D                     	;# 
   243  070E                     	;# 
   244  070F                     	;# 
   245  0710                     	;# 
   246  0711                     	;# 
   247  0712                     	;# 
   248  0713                     	;# 
   249  0716                     	;# 
   250  0717                     	;# 
   251  0718                     	;# 
   252  0719                     	;# 
   253  071A                     	;# 
   254  071B                     	;# 
   255  071C                     	;# 
   256  071D                     	;# 
   257  0796                     	;# 
   258  0797                     	;# 
   259  0798                     	;# 
   260  0799                     	;# 
   261  079A                     	;# 
   262  079B                     	;# 
   263  080C                     	;# 
   264  080D                     	;# 
   265  080E                     	;# 
   266  080F                     	;# 
   267  0810                     	;# 
   268  0811                     	;# 
   269  0812                     	;# 
   270  0813                     	;# 
   271  0814                     	;# 
   272  081A                     	;# 
   273  081A                     	;# 
   274  081B                     	;# 
   275  081C                     	;# 
   276  081C                     	;# 
   277  081D                     	;# 
   278  081E                     	;# 
   279  081F                     	;# 
   280  088C                     	;# 
   281  088D                     	;# 
   282  088E                     	;# 
   283  088F                     	;# 
   284  0890                     	;# 
   285  0891                     	;# 
   286  0892                     	;# 
   287  0893                     	;# 
   288  0895                     	;# 
   289  0896                     	;# 
   290  090C                     	;# 
   291  090E                     	;# 
   292  090F                     	;# 
   293  091F                     	;# 
   294  098F                     	;# 
   295  098F                     	;# 
   296  0990                     	;# 
   297  0991                     	;# 
   298  0992                     	;# 
   299  0993                     	;# 
   300  0994                     	;# 
   301  0995                     	;# 
   302  0996                     	;# 
   303  0997                     	;# 
   304  0A19                     	;# 
   305  0A19                     	;# 
   306  0A1A                     	;# 
   307  0A1A                     	;# 
   308  0A1B                     	;# 
   309  0A1B                     	;# 
   310  0A1B                     	;# 
   311  0A1C                     	;# 
   312  0A1C                     	;# 
   313  0A1D                     	;# 
   314  0A1D                     	;# 
   315  0A1E                     	;# 
   316  0A1E                     	;# 
   317  0A1F                     	;# 
   318  0A1F                     	;# 
   319  0A1F                     	;# 
   320  1E0F                     	;# 
   321  1E10                     	;# 
   322  1E11                     	;# 
   323  1E12                     	;# 
   324  1E13                     	;# 
   325  1E14                     	;# 
   326  1E15                     	;# 
   327  1E16                     	;# 
   328  1E17                     	;# 
   329  1E18                     	;# 
   330  1E19                     	;# 
   331  1E1A                     	;# 
   332  1E1B                     	;# 
   333  1E1C                     	;# 
   334  1E1D                     	;# 
   335  1E1E                     	;# 
   336  1E1F                     	;# 
   337  1E20                     	;# 
   338  1E21                     	;# 
   339  1E22                     	;# 
   340  1E23                     	;# 
   341  1E24                     	;# 
   342  1E25                     	;# 
   343  1E26                     	;# 
   344  1E27                     	;# 
   345  1E28                     	;# 
   346  1E29                     	;# 
   347  1E2A                     	;# 
   348  1E2B                     	;# 
   349  1E2C                     	;# 
   350  1E2D                     	;# 
   351  1E2E                     	;# 
   352  1E2F                     	;# 
   353  1E30                     	;# 
   354  1E31                     	;# 
   355  1E32                     	;# 
   356  1E33                     	;# 
   357  1E34                     	;# 
   358  1E35                     	;# 
   359  1E36                     	;# 
   360  1E37                     	;# 
   361  1E8F                     	;# 
   362  1E90                     	;# 
   363  1E91                     	;# 
   364  1E92                     	;# 
   365  1E93                     	;# 
   366  1E9C                     	;# 
   367  1EA1                     	;# 
   368  1EA2                     	;# 
   369  1EB1                     	;# 
   370  1EBB                     	;# 
   371  1EBC                     	;# 
   372  1EBD                     	;# 
   373  1EBE                     	;# 
   374  1EC3                     	;# 
   375  1EC5                     	;# 
   376  1EC6                     	;# 
   377  1EC7                     	;# 
   378  1EC8                     	;# 
   379  1EC9                     	;# 
   380  1ECA                     	;# 
   381  1ECB                     	;# 
   382  1ECC                     	;# 
   383  1ECD                     	;# 
   384  1ECE                     	;# 
   385  1F10                     	;# 
   386  1F11                     	;# 
   387  1F12                     	;# 
   388  1F13                     	;# 
   389  1F14                     	;# 
   390  1F15                     	;# 
   391  1F16                     	;# 
   392  1F17                     	;# 
   393  1F18                     	;# 
   394  1F19                     	;# 
   395  1F1A                     	;# 
   396  1F1B                     	;# 
   397  1F1C                     	;# 
   398  1F1D                     	;# 
   399  1F1E                     	;# 
   400  1F1F                     	;# 
   401  1F20                     	;# 
   402  1F21                     	;# 
   403  1F22                     	;# 
   404  1F23                     	;# 
   405  1F24                     	;# 
   406  1F25                     	;# 
   407  1F26                     	;# 
   408  1F27                     	;# 
   409  1F38                     	;# 
   410  1F39                     	;# 
   411  1F3A                     	;# 
   412  1F3B                     	;# 
   413  1F3C                     	;# 
   414  1F3D                     	;# 
   415  1F3E                     	;# 
   416  1F3F                     	;# 
   417  1F43                     	;# 
   418  1F44                     	;# 
   419  1F45                     	;# 
   420  1F46                     	;# 
   421  1F47                     	;# 
   422  1F48                     	;# 
   423  1F49                     	;# 
   424  1F4A                     	;# 
   425  1F4E                     	;# 
   426  1F4F                     	;# 
   427  1F50                     	;# 
   428  1F51                     	;# 
   429  1F52                     	;# 
   430  1F53                     	;# 
   431  1F54                     	;# 
   432  1F55                     	;# 
   433  1F65                     	;# 
   434  1F68                     	;# 
   435  1F69                     	;# 
   436  1F6A                     	;# 
   437  1F6B                     	;# 
   438  1FE4                     	;# 
   439  1FE5                     	;# 
   440  1FE6                     	;# 
   441  1FE7                     	;# 
   442  1FE8                     	;# 
   443  1FE8                     	;# 
   444  1FE9                     	;# 
   445  1FEA                     	;# 
   446  1FEA                     	;# 
   447  1FEB                     	;# 
   448  1FED                     	;# 
   449  1FEE                     	;# 
   450  1FEF                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  0010                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0016                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  009B                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  0119                     	;# 
   481  0119                     	;# 
   482  0119                     	;# 
   483  011A                     	;# 
   484  011A                     	;# 
   485  011A                     	;# 
   486  011B                     	;# 
   487  011B                     	;# 
   488  011B                     	;# 
   489  011B                     	;# 
   490  011B                     	;# 
   491  011C                     	;# 
   492  011C                     	;# 
   493  011C                     	;# 
   494  011D                     	;# 
   495  011D                     	;# 
   496  011D                     	;# 
   497  011E                     	;# 
   498  011E                     	;# 
   499  011E                     	;# 
   500  011F                     	;# 
   501  011F                     	;# 
   502  011F                     	;# 
   503  011F                     	;# 
   504  011F                     	;# 
   505  018C                     	;# 
   506  018D                     	;# 
   507  018E                     	;# 
   508  018F                     	;# 
   509  0190                     	;# 
   510  0191                     	;# 
   511  0192                     	;# 
   512  0196                     	;# 
   513  0197                     	;# 
   514  0198                     	;# 
   515  0199                     	;# 
   516  019A                     	;# 
   517  019B                     	;# 
   518  019C                     	;# 
   519  020C                     	;# 
   520  020C                     	;# 
   521  020D                     	;# 
   522  020E                     	;# 
   523  020F                     	;# 
   524  020F                     	;# 
   525  0210                     	;# 
   526  0210                     	;# 
   527  0211                     	;# 
   528  0211                     	;# 
   529  028C                     	;# 
   530  028C                     	;# 
   531  028D                     	;# 
   532  028D                     	;# 
   533  028E                     	;# 
   534  028F                     	;# 
   535  0290                     	;# 
   536  0291                     	;# 
   537  030C                     	;# 
   538  030C                     	;# 
   539  030D                     	;# 
   540  030E                     	;# 
   541  030F                     	;# 
   542  0310                     	;# 
   543  0310                     	;# 
   544  0311                     	;# 
   545  0312                     	;# 
   546  0313                     	;# 
   547  0314                     	;# 
   548  0314                     	;# 
   549  0315                     	;# 
   550  0316                     	;# 
   551  0318                     	;# 
   552  0318                     	;# 
   553  0319                     	;# 
   554  031A                     	;# 
   555  031C                     	;# 
   556  031C                     	;# 
   557  031D                     	;# 
   558  031E                     	;# 
   559  038C                     	;# 
   560  038C                     	;# 
   561  038D                     	;# 
   562  038E                     	;# 
   563  058C                     	;# 
   564  058C                     	;# 
   565  058D                     	;# 
   566  058E                     	;# 
   567  058F                     	;# 
   568  058F                     	;# 
   569  0590                     	;# 
   570  0591                     	;# 
   571  0592                     	;# 
   572  0593                     	;# 
   573  059C                     	;# 
   574  059C                     	;# 
   575  059D                     	;# 
   576  059D                     	;# 
   577  059E                     	;# 
   578  059F                     	;# 
   579  060C                     	;# 
   580  060D                     	;# 
   581  060E                     	;# 
   582  060F                     	;# 
   583  0610                     	;# 
   584  0611                     	;# 
   585  0612                     	;# 
   586  0613                     	;# 
   587  0614                     	;# 
   588  070C                     	;# 
   589  070D                     	;# 
   590  070E                     	;# 
   591  070F                     	;# 
   592  0710                     	;# 
   593  0711                     	;# 
   594  0712                     	;# 
   595  0713                     	;# 
   596  0716                     	;# 
   597  0717                     	;# 
   598  0718                     	;# 
   599  0719                     	;# 
   600  071A                     	;# 
   601  071B                     	;# 
   602  071C                     	;# 
   603  071D                     	;# 
   604  0796                     	;# 
   605  0797                     	;# 
   606  0798                     	;# 
   607  0799                     	;# 
   608  079A                     	;# 
   609  079B                     	;# 
   610  080C                     	;# 
   611  080D                     	;# 
   612  080E                     	;# 
   613  080F                     	;# 
   614  0810                     	;# 
   615  0811                     	;# 
   616  0812                     	;# 
   617  0813                     	;# 
   618  0814                     	;# 
   619  081A                     	;# 
   620  081A                     	;# 
   621  081B                     	;# 
   622  081C                     	;# 
   623  081C                     	;# 
   624  081D                     	;# 
   625  081E                     	;# 
   626  081F                     	;# 
   627  088C                     	;# 
   628  088D                     	;# 
   629  088E                     	;# 
   630  088F                     	;# 
   631  0890                     	;# 
   632  0891                     	;# 
   633  0892                     	;# 
   634  0893                     	;# 
   635  0895                     	;# 
   636  0896                     	;# 
   637  090C                     	;# 
   638  090E                     	;# 
   639  090F                     	;# 
   640  091F                     	;# 
   641  098F                     	;# 
   642  098F                     	;# 
   643  0990                     	;# 
   644  0991                     	;# 
   645  0992                     	;# 
   646  0993                     	;# 
   647  0994                     	;# 
   648  0995                     	;# 
   649  0996                     	;# 
   650  0997                     	;# 
   651  0A19                     	;# 
   652  0A19                     	;# 
   653  0A1A                     	;# 
   654  0A1A                     	;# 
   655  0A1B                     	;# 
   656  0A1B                     	;# 
   657  0A1B                     	;# 
   658  0A1C                     	;# 
   659  0A1C                     	;# 
   660  0A1D                     	;# 
   661  0A1D                     	;# 
   662  0A1E                     	;# 
   663  0A1E                     	;# 
   664  0A1F                     	;# 
   665  0A1F                     	;# 
   666  0A1F                     	;# 
   667  1E0F                     	;# 
   668  1E10                     	;# 
   669  1E11                     	;# 
   670  1E12                     	;# 
   671  1E13                     	;# 
   672  1E14                     	;# 
   673  1E15                     	;# 
   674  1E16                     	;# 
   675  1E17                     	;# 
   676  1E18                     	;# 
   677  1E19                     	;# 
   678  1E1A                     	;# 
   679  1E1B                     	;# 
   680  1E1C                     	;# 
   681  1E1D                     	;# 
   682  1E1E                     	;# 
   683  1E1F                     	;# 
   684  1E20                     	;# 
   685  1E21                     	;# 
   686  1E22                     	;# 
   687  1E23                     	;# 
   688  1E24                     	;# 
   689  1E25                     	;# 
   690  1E26                     	;# 
   691  1E27                     	;# 
   692  1E28                     	;# 
   693  1E29                     	;# 
   694  1E2A                     	;# 
   695  1E2B                     	;# 
   696  1E2C                     	;# 
   697  1E2D                     	;# 
   698  1E2E                     	;# 
   699  1E2F                     	;# 
   700  1E30                     	;# 
   701  1E31                     	;# 
   702  1E32                     	;# 
   703  1E33                     	;# 
   704  1E34                     	;# 
   705  1E35                     	;# 
   706  1E36                     	;# 
   707  1E37                     	;# 
   708  1E8F                     	;# 
   709  1E90                     	;# 
   710  1E91                     	;# 
   711  1E92                     	;# 
   712  1E93                     	;# 
   713  1E9C                     	;# 
   714  1EA1                     	;# 
   715  1EA2                     	;# 
   716  1EB1                     	;# 
   717  1EBB                     	;# 
   718  1EBC                     	;# 
   719  1EBD                     	;# 
   720  1EBE                     	;# 
   721  1EC3                     	;# 
   722  1EC5                     	;# 
   723  1EC6                     	;# 
   724  1EC7                     	;# 
   725  1EC8                     	;# 
   726  1EC9                     	;# 
   727  1ECA                     	;# 
   728  1ECB                     	;# 
   729  1ECC                     	;# 
   730  1ECD                     	;# 
   731  1ECE                     	;# 
   732  1F10                     	;# 
   733  1F11                     	;# 
   734  1F12                     	;# 
   735  1F13                     	;# 
   736  1F14                     	;# 
   737  1F15                     	;# 
   738  1F16                     	;# 
   739  1F17                     	;# 
   740  1F18                     	;# 
   741  1F19                     	;# 
   742  1F1A                     	;# 
   743  1F1B                     	;# 
   744  1F1C                     	;# 
   745  1F1D                     	;# 
   746  1F1E                     	;# 
   747  1F1F                     	;# 
   748  1F20                     	;# 
   749  1F21                     	;# 
   750  1F22                     	;# 
   751  1F23                     	;# 
   752  1F24                     	;# 
   753  1F25                     	;# 
   754  1F26                     	;# 
   755  1F27                     	;# 
   756  1F38                     	;# 
   757  1F39                     	;# 
   758  1F3A                     	;# 
   759  1F3B                     	;# 
   760  1F3C                     	;# 
   761  1F3D                     	;# 
   762  1F3E                     	;# 
   763  1F3F                     	;# 
   764  1F43                     	;# 
   765  1F44                     	;# 
   766  1F45                     	;# 
   767  1F46                     	;# 
   768  1F47                     	;# 
   769  1F48                     	;# 
   770  1F49                     	;# 
   771  1F4A                     	;# 
   772  1F4E                     	;# 
   773  1F4F                     	;# 
   774  1F50                     	;# 
   775  1F51                     	;# 
   776  1F52                     	;# 
   777  1F53                     	;# 
   778  1F54                     	;# 
   779  1F55                     	;# 
   780  1F65                     	;# 
   781  1F68                     	;# 
   782  1F69                     	;# 
   783  1F6A                     	;# 
   784  1F6B                     	;# 
   785  1FE4                     	;# 
   786  1FE5                     	;# 
   787  1FE6                     	;# 
   788  1FE7                     	;# 
   789  1FE8                     	;# 
   790  1FE8                     	;# 
   791  1FE9                     	;# 
   792  1FEA                     	;# 
   793  1FEA                     	;# 
   794  1FEB                     	;# 
   795  1FED                     	;# 
   796  1FEE                     	;# 
   797  1FEF                     	;# 
   798  0000                     	;# 
   799  0001                     	;# 
   800  0002                     	;# 
   801  0003                     	;# 
   802  0004                     	;# 
   803  0005                     	;# 
   804  0006                     	;# 
   805  0007                     	;# 
   806  0008                     	;# 
   807  0009                     	;# 
   808  000A                     	;# 
   809  000B                     	;# 
   810  000C                     	;# 
   811  000D                     	;# 
   812  000E                     	;# 
   813  0010                     	;# 
   814  0012                     	;# 
   815  0013                     	;# 
   816  0014                     	;# 
   817  0016                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  009B                     	;# 
   822  009B                     	;# 
   823  009C                     	;# 
   824  009D                     	;# 
   825  009E                     	;# 
   826  009F                     	;# 
   827  0119                     	;# 
   828  0119                     	;# 
   829  0119                     	;# 
   830  011A                     	;# 
   831  011A                     	;# 
   832  011A                     	;# 
   833  011B                     	;# 
   834  011B                     	;# 
   835  011B                     	;# 
   836  011B                     	;# 
   837  011B                     	;# 
   838  011C                     	;# 
   839  011C                     	;# 
   840  011C                     	;# 
   841  011D                     	;# 
   842  011D                     	;# 
   843  011D                     	;# 
   844  011E                     	;# 
   845  011E                     	;# 
   846  011E                     	;# 
   847  011F                     	;# 
   848  011F                     	;# 
   849  011F                     	;# 
   850  011F                     	;# 
   851  011F                     	;# 
   852  018C                     	;# 
   853  018D                     	;# 
   854  018E                     	;# 
   855  018F                     	;# 
   856  0190                     	;# 
   857  0191                     	;# 
   858  0192                     	;# 
   859  0196                     	;# 
   860  0197                     	;# 
   861  0198                     	;# 
   862  0199                     	;# 
   863  019A                     	;# 
   864  019B                     	;# 
   865  019C                     	;# 
   866  020C                     	;# 
   867  020C                     	;# 
   868  020D                     	;# 
   869  020E                     	;# 
   870  020F                     	;# 
   871  020F                     	;# 
   872  0210                     	;# 
   873  0210                     	;# 
   874  0211                     	;# 
   875  0211                     	;# 
   876  028C                     	;# 
   877  028C                     	;# 
   878  028D                     	;# 
   879  028D                     	;# 
   880  028E                     	;# 
   881  028F                     	;# 
   882  0290                     	;# 
   883  0291                     	;# 
   884  030C                     	;# 
   885  030C                     	;# 
   886  030D                     	;# 
   887  030E                     	;# 
   888  030F                     	;# 
   889  0310                     	;# 
   890  0310                     	;# 
   891  0311                     	;# 
   892  0312                     	;# 
   893  0313                     	;# 
   894  0314                     	;# 
   895  0314                     	;# 
   896  0315                     	;# 
   897  0316                     	;# 
   898  0318                     	;# 
   899  0318                     	;# 
   900  0319                     	;# 
   901  031A                     	;# 
   902  031C                     	;# 
   903  031C                     	;# 
   904  031D                     	;# 
   905  031E                     	;# 
   906  038C                     	;# 
   907  038C                     	;# 
   908  038D                     	;# 
   909  038E                     	;# 
   910  058C                     	;# 
   911  058C                     	;# 
   912  058D                     	;# 
   913  058E                     	;# 
   914  058F                     	;# 
   915  058F                     	;# 
   916  0590                     	;# 
   917  0591                     	;# 
   918  0592                     	;# 
   919  0593                     	;# 
   920  059C                     	;# 
   921  059C                     	;# 
   922  059D                     	;# 
   923  059D                     	;# 
   924  059E                     	;# 
   925  059F                     	;# 
   926  060C                     	;# 
   927  060D                     	;# 
   928  060E                     	;# 
   929  060F                     	;# 
   930  0610                     	;# 
   931  0611                     	;# 
   932  0612                     	;# 
   933  0613                     	;# 
   934  0614                     	;# 
   935  070C                     	;# 
   936  070D                     	;# 
   937  070E                     	;# 
   938  070F                     	;# 
   939  0710                     	;# 
   940  0711                     	;# 
   941  0712                     	;# 
   942  0713                     	;# 
   943  0716                     	;# 
   944  0717                     	;# 
   945  0718                     	;# 
   946  0719                     	;# 
   947  071A                     	;# 
   948  071B                     	;# 
   949  071C                     	;# 
   950  071D                     	;# 
   951  0796                     	;# 
   952  0797                     	;# 
   953  0798                     	;# 
   954  0799                     	;# 
   955  079A                     	;# 
   956  079B                     	;# 
   957  080C                     	;# 
   958  080D                     	;# 
   959  080E                     	;# 
   960  080F                     	;# 
   961  0810                     	;# 
   962  0811                     	;# 
   963  0812                     	;# 
   964  0813                     	;# 
   965  0814                     	;# 
   966  081A                     	;# 
   967  081A                     	;# 
   968  081B                     	;# 
   969  081C                     	;# 
   970  081C                     	;# 
   971  081D                     	;# 
   972  081E                     	;# 
   973  081F                     	;# 
   974  088C                     	;# 
   975  088D                     	;# 
   976  088E                     	;# 
   977  088F                     	;# 
   978  0890                     	;# 
   979  0891                     	;# 
   980  0892                     	;# 
   981  0893                     	;# 
   982  0895                     	;# 
   983  0896                     	;# 
   984  090C                     	;# 
   985  090E                     	;# 
   986  090F                     	;# 
   987  091F                     	;# 
   988  098F                     	;# 
   989  098F                     	;# 
   990  0990                     	;# 
   991  0991                     	;# 
   992  0992                     	;# 
   993  0993                     	;# 
   994  0994                     	;# 
   995  0995                     	;# 
   996  0996                     	;# 
   997  0997                     	;# 
   998  0A19                     	;# 
   999  0A19                     	;# 
  1000  0A1A                     	;# 
  1001  0A1A                     	;# 
  1002  0A1B                     	;# 
  1003  0A1B                     	;# 
  1004  0A1B                     	;# 
  1005  0A1C                     	;# 
  1006  0A1C                     	;# 
  1007  0A1D                     	;# 
  1008  0A1D                     	;# 
  1009  0A1E                     	;# 
  1010  0A1E                     	;# 
  1011  0A1F                     	;# 
  1012  0A1F                     	;# 
  1013  0A1F                     	;# 
  1014  1E0F                     	;# 
  1015  1E10                     	;# 
  1016  1E11                     	;# 
  1017  1E12                     	;# 
  1018  1E13                     	;# 
  1019  1E14                     	;# 
  1020  1E15                     	;# 
  1021  1E16                     	;# 
  1022  1E17                     	;# 
  1023  1E18                     	;# 
  1024  1E19                     	;# 
  1025  1E1A                     	;# 
  1026  1E1B                     	;# 
  1027  1E1C                     	;# 
  1028  1E1D                     	;# 
  1029  1E1E                     	;# 
  1030  1E1F                     	;# 
  1031  1E20                     	;# 
  1032  1E21                     	;# 
  1033  1E22                     	;# 
  1034  1E23                     	;# 
  1035  1E24                     	;# 
  1036  1E25                     	;# 
  1037  1E26                     	;# 
  1038  1E27                     	;# 
  1039  1E28                     	;# 
  1040  1E29                     	;# 
  1041  1E2A                     	;# 
  1042  1E2B                     	;# 
  1043  1E2C                     	;# 
  1044  1E2D                     	;# 
  1045  1E2E                     	;# 
  1046  1E2F                     	;# 
  1047  1E30                     	;# 
  1048  1E31                     	;# 
  1049  1E32                     	;# 
  1050  1E33                     	;# 
  1051  1E34                     	;# 
  1052  1E35                     	;# 
  1053  1E36                     	;# 
  1054  1E37                     	;# 
  1055  1E8F                     	;# 
  1056  1E90                     	;# 
  1057  1E91                     	;# 
  1058  1E92                     	;# 
  1059  1E93                     	;# 
  1060  1E9C                     	;# 
  1061  1EA1                     	;# 
  1062  1EA2                     	;# 
  1063  1EB1                     	;# 
  1064  1EBB                     	;# 
  1065  1EBC                     	;# 
  1066  1EBD                     	;# 
  1067  1EBE                     	;# 
  1068  1EC3                     	;# 
  1069  1EC5                     	;# 
  1070  1EC6                     	;# 
  1071  1EC7                     	;# 
  1072  1EC8                     	;# 
  1073  1EC9                     	;# 
  1074  1ECA                     	;# 
  1075  1ECB                     	;# 
  1076  1ECC                     	;# 
  1077  1ECD                     	;# 
  1078  1ECE                     	;# 
  1079  1F10                     	;# 
  1080  1F11                     	;# 
  1081  1F12                     	;# 
  1082  1F13                     	;# 
  1083  1F14                     	;# 
  1084  1F15                     	;# 
  1085  1F16                     	;# 
  1086  1F17                     	;# 
  1087  1F18                     	;# 
  1088  1F19                     	;# 
  1089  1F1A                     	;# 
  1090  1F1B                     	;# 
  1091  1F1C                     	;# 
  1092  1F1D                     	;# 
  1093  1F1E                     	;# 
  1094  1F1F                     	;# 
  1095  1F20                     	;# 
  1096  1F21                     	;# 
  1097  1F22                     	;# 
  1098  1F23                     	;# 
  1099  1F24                     	;# 
  1100  1F25                     	;# 
  1101  1F26                     	;# 
  1102  1F27                     	;# 
  1103  1F38                     	;# 
  1104  1F39                     	;# 
  1105  1F3A                     	;# 
  1106  1F3B                     	;# 
  1107  1F3C                     	;# 
  1108  1F3D                     	;# 
  1109  1F3E                     	;# 
  1110  1F3F                     	;# 
  1111  1F43                     	;# 
  1112  1F44                     	;# 
  1113  1F45                     	;# 
  1114  1F46                     	;# 
  1115  1F47                     	;# 
  1116  1F48                     	;# 
  1117  1F49                     	;# 
  1118  1F4A                     	;# 
  1119  1F4E                     	;# 
  1120  1F4F                     	;# 
  1121  1F50                     	;# 
  1122  1F51                     	;# 
  1123  1F52                     	;# 
  1124  1F53                     	;# 
  1125  1F54                     	;# 
  1126  1F55                     	;# 
  1127  1F65                     	;# 
  1128  1F68                     	;# 
  1129  1F69                     	;# 
  1130  1F6A                     	;# 
  1131  1F6B                     	;# 
  1132  1FE4                     	;# 
  1133  1FE5                     	;# 
  1134  1FE6                     	;# 
  1135  1FE7                     	;# 
  1136  1FE8                     	;# 
  1137  1FE8                     	;# 
  1138  1FE9                     	;# 
  1139  1FEA                     	;# 
  1140  1FEA                     	;# 
  1141  1FEB                     	;# 
  1142  1FED                     	;# 
  1143  1FEE                     	;# 
  1144  1FEF                     	;# 
  1145  0000                     	;# 
  1146  0001                     	;# 
  1147  0002                     	;# 
  1148  0003                     	;# 
  1149  0004                     	;# 
  1150  0005                     	;# 
  1151  0006                     	;# 
  1152  0007                     	;# 
  1153  0008                     	;# 
  1154  0009                     	;# 
  1155  000A                     	;# 
  1156  000B                     	;# 
  1157  000C                     	;# 
  1158  000D                     	;# 
  1159  000E                     	;# 
  1160  0010                     	;# 
  1161  0012                     	;# 
  1162  0013                     	;# 
  1163  0014                     	;# 
  1164  0016                     	;# 
  1165  0018                     	;# 
  1166  0019                     	;# 
  1167  001A                     	;# 
  1168  009B                     	;# 
  1169  009B                     	;# 
  1170  009C                     	;# 
  1171  009D                     	;# 
  1172  009E                     	;# 
  1173  009F                     	;# 
  1174  0119                     	;# 
  1175  0119                     	;# 
  1176  0119                     	;# 
  1177  011A                     	;# 
  1178  011A                     	;# 
  1179  011A                     	;# 
  1180  011B                     	;# 
  1181  011B                     	;# 
  1182  011B                     	;# 
  1183  011B                     	;# 
  1184  011B                     	;# 
  1185  011C                     	;# 
  1186  011C                     	;# 
  1187  011C                     	;# 
  1188  011D                     	;# 
  1189  011D                     	;# 
  1190  011D                     	;# 
  1191  011E                     	;# 
  1192  011E                     	;# 
  1193  011E                     	;# 
  1194  011F                     	;# 
  1195  011F                     	;# 
  1196  011F                     	;# 
  1197  011F                     	;# 
  1198  011F                     	;# 
  1199  018C                     	;# 
  1200  018D                     	;# 
  1201  018E                     	;# 
  1202  018F                     	;# 
  1203  0190                     	;# 
  1204  0191                     	;# 
  1205  0192                     	;# 
  1206  0196                     	;# 
  1207  0197                     	;# 
  1208  0198                     	;# 
  1209  0199                     	;# 
  1210  019A                     	;# 
  1211  019B                     	;# 
  1212  019C                     	;# 
  1213  020C                     	;# 
  1214  020C                     	;# 
  1215  020D                     	;# 
  1216  020E                     	;# 
  1217  020F                     	;# 
  1218  020F                     	;# 
  1219  0210                     	;# 
  1220  0210                     	;# 
  1221  0211                     	;# 
  1222  0211                     	;# 
  1223  028C                     	;# 
  1224  028C                     	;# 
  1225  028D                     	;# 
  1226  028D                     	;# 
  1227  028E                     	;# 
  1228  028F                     	;# 
  1229  0290                     	;# 
  1230  0291                     	;# 
  1231  030C                     	;# 
  1232  030C                     	;# 
  1233  030D                     	;# 
  1234  030E                     	;# 
  1235  030F                     	;# 
  1236  0310                     	;# 
  1237  0310                     	;# 
  1238  0311                     	;# 
  1239  0312                     	;# 
  1240  0313                     	;# 
  1241  0314                     	;# 
  1242  0314                     	;# 
  1243  0315                     	;# 
  1244  0316                     	;# 
  1245  0318                     	;# 
  1246  0318                     	;# 
  1247  0319                     	;# 
  1248  031A                     	;# 
  1249  031C                     	;# 
  1250  031C                     	;# 
  1251  031D                     	;# 
  1252  031E                     	;# 
  1253  038C                     	;# 
  1254  038C                     	;# 
  1255  038D                     	;# 
  1256  038E                     	;# 
  1257  058C                     	;# 
  1258  058C                     	;# 
  1259  058D                     	;# 
  1260  058E                     	;# 
  1261  058F                     	;# 
  1262  058F                     	;# 
  1263  0590                     	;# 
  1264  0591                     	;# 
  1265  0592                     	;# 
  1266  0593                     	;# 
  1267  059C                     	;# 
  1268  059C                     	;# 
  1269  059D                     	;# 
  1270  059D                     	;# 
  1271  059E                     	;# 
  1272  059F                     	;# 
  1273  060C                     	;# 
  1274  060D                     	;# 
  1275  060E                     	;# 
  1276  060F                     	;# 
  1277  0610                     	;# 
  1278  0611                     	;# 
  1279  0612                     	;# 
  1280  0613                     	;# 
  1281  0614                     	;# 
  1282  070C                     	;# 
  1283  070D                     	;# 
  1284  070E                     	;# 
  1285  070F                     	;# 
  1286  0710                     	;# 
  1287  0711                     	;# 
  1288  0712                     	;# 
  1289  0713                     	;# 
  1290  0716                     	;# 
  1291  0717                     	;# 
  1292  0718                     	;# 
  1293  0719                     	;# 
  1294  071A                     	;# 
  1295  071B                     	;# 
  1296  071C                     	;# 
  1297  071D                     	;# 
  1298  0796                     	;# 
  1299  0797                     	;# 
  1300  0798                     	;# 
  1301  0799                     	;# 
  1302  079A                     	;# 
  1303  079B                     	;# 
  1304  080C                     	;# 
  1305  080D                     	;# 
  1306  080E                     	;# 
  1307  080F                     	;# 
  1308  0810                     	;# 
  1309  0811                     	;# 
  1310  0812                     	;# 
  1311  0813                     	;# 
  1312  0814                     	;# 
  1313  081A                     	;# 
  1314  081A                     	;# 
  1315  081B                     	;# 
  1316  081C                     	;# 
  1317  081C                     	;# 
  1318  081D                     	;# 
  1319  081E                     	;# 
  1320  081F                     	;# 
  1321  088C                     	;# 
  1322  088D                     	;# 
  1323  088E                     	;# 
  1324  088F                     	;# 
  1325  0890                     	;# 
  1326  0891                     	;# 
  1327  0892                     	;# 
  1328  0893                     	;# 
  1329  0895                     	;# 
  1330  0896                     	;# 
  1331  090C                     	;# 
  1332  090E                     	;# 
  1333  090F                     	;# 
  1334  091F                     	;# 
  1335  098F                     	;# 
  1336  098F                     	;# 
  1337  0990                     	;# 
  1338  0991                     	;# 
  1339  0992                     	;# 
  1340  0993                     	;# 
  1341  0994                     	;# 
  1342  0995                     	;# 
  1343  0996                     	;# 
  1344  0997                     	;# 
  1345  0A19                     	;# 
  1346  0A19                     	;# 
  1347  0A1A                     	;# 
  1348  0A1A                     	;# 
  1349  0A1B                     	;# 
  1350  0A1B                     	;# 
  1351  0A1B                     	;# 
  1352  0A1C                     	;# 
  1353  0A1C                     	;# 
  1354  0A1D                     	;# 
  1355  0A1D                     	;# 
  1356  0A1E                     	;# 
  1357  0A1E                     	;# 
  1358  0A1F                     	;# 
  1359  0A1F                     	;# 
  1360  0A1F                     	;# 
  1361  1E0F                     	;# 
  1362  1E10                     	;# 
  1363  1E11                     	;# 
  1364  1E12                     	;# 
  1365  1E13                     	;# 
  1366  1E14                     	;# 
  1367  1E15                     	;# 
  1368  1E16                     	;# 
  1369  1E17                     	;# 
  1370  1E18                     	;# 
  1371  1E19                     	;# 
  1372  1E1A                     	;# 
  1373  1E1B                     	;# 
  1374  1E1C                     	;# 
  1375  1E1D                     	;# 
  1376  1E1E                     	;# 
  1377  1E1F                     	;# 
  1378  1E20                     	;# 
  1379  1E21                     	;# 
  1380  1E22                     	;# 
  1381  1E23                     	;# 
  1382  1E24                     	;# 
  1383  1E25                     	;# 
  1384  1E26                     	;# 
  1385  1E27                     	;# 
  1386  1E28                     	;# 
  1387  1E29                     	;# 
  1388  1E2A                     	;# 
  1389  1E2B                     	;# 
  1390  1E2C                     	;# 
  1391  1E2D                     	;# 
  1392  1E2E                     	;# 
  1393  1E2F                     	;# 
  1394  1E30                     	;# 
  1395  1E31                     	;# 
  1396  1E32                     	;# 
  1397  1E33                     	;# 
  1398  1E34                     	;# 
  1399  1E35                     	;# 
  1400  1E36                     	;# 
  1401  1E37                     	;# 
  1402  1E8F                     	;# 
  1403  1E90                     	;# 
  1404  1E91                     	;# 
  1405  1E92                     	;# 
  1406  1E93                     	;# 
  1407  1E9C                     	;# 
  1408  1EA1                     	;# 
  1409  1EA2                     	;# 
  1410  1EB1                     	;# 
  1411  1EBB                     	;# 
  1412  1EBC                     	;# 
  1413  1EBD                     	;# 
  1414  1EBE                     	;# 
  1415  1EC3                     	;# 
  1416  1EC5                     	;# 
  1417  1EC6                     	;# 
  1418  1EC7                     	;# 
  1419  1EC8                     	;# 
  1420  1EC9                     	;# 
  1421  1ECA                     	;# 
  1422  1ECB                     	;# 
  1423  1ECC                     	;# 
  1424  1ECD                     	;# 
  1425  1ECE                     	;# 
  1426  1F10                     	;# 
  1427  1F11                     	;# 
  1428  1F12                     	;# 
  1429  1F13                     	;# 
  1430  1F14                     	;# 
  1431  1F15                     	;# 
  1432  1F16                     	;# 
  1433  1F17                     	;# 
  1434  1F18                     	;# 
  1435  1F19                     	;# 
  1436  1F1A                     	;# 
  1437  1F1B                     	;# 
  1438  1F1C                     	;# 
  1439  1F1D                     	;# 
  1440  1F1E                     	;# 
  1441  1F1F                     	;# 
  1442  1F20                     	;# 
  1443  1F21                     	;# 
  1444  1F22                     	;# 
  1445  1F23                     	;# 
  1446  1F24                     	;# 
  1447  1F25                     	;# 
  1448  1F26                     	;# 
  1449  1F27                     	;# 
  1450  1F38                     	;# 
  1451  1F39                     	;# 
  1452  1F3A                     	;# 
  1453  1F3B                     	;# 
  1454  1F3C                     	;# 
  1455  1F3D                     	;# 
  1456  1F3E                     	;# 
  1457  1F3F                     	;# 
  1458  1F43                     	;# 
  1459  1F44                     	;# 
  1460  1F45                     	;# 
  1461  1F46                     	;# 
  1462  1F47                     	;# 
  1463  1F48                     	;# 
  1464  1F49                     	;# 
  1465  1F4A                     	;# 
  1466  1F4E                     	;# 
  1467  1F4F                     	;# 
  1468  1F50                     	;# 
  1469  1F51                     	;# 
  1470  1F52                     	;# 
  1471  1F53                     	;# 
  1472  1F54                     	;# 
  1473  1F55                     	;# 
  1474  1F65                     	;# 
  1475  1F68                     	;# 
  1476  1F69                     	;# 
  1477  1F6A                     	;# 
  1478  1F6B                     	;# 
  1479  1FE4                     	;# 
  1480  1FE5                     	;# 
  1481  1FE6                     	;# 
  1482  1FE7                     	;# 
  1483  1FE8                     	;# 
  1484  1FE8                     	;# 
  1485  1FE9                     	;# 
  1486  1FEA                     	;# 
  1487  1FEA                     	;# 
  1488  1FEB                     	;# 
  1489  1FED                     	;# 
  1490  1FEE                     	;# 
  1491  1FEF                     	;# 
  1492  0000                     	;# 
  1493  0001                     	;# 
  1494  0002                     	;# 
  1495  0003                     	;# 
  1496  0004                     	;# 
  1497  0005                     	;# 
  1498  0006                     	;# 
  1499  0007                     	;# 
  1500  0008                     	;# 
  1501  0009                     	;# 
  1502  000A                     	;# 
  1503  000B                     	;# 
  1504  000C                     	;# 
  1505  000D                     	;# 
  1506  000E                     	;# 
  1507  0010                     	;# 
  1508  0012                     	;# 
  1509  0013                     	;# 
  1510  0014                     	;# 
  1511  0016                     	;# 
  1512  0018                     	;# 
  1513  0019                     	;# 
  1514  001A                     	;# 
  1515  009B                     	;# 
  1516  009B                     	;# 
  1517  009C                     	;# 
  1518  009D                     	;# 
  1519  009E                     	;# 
  1520  009F                     	;# 
  1521  0119                     	;# 
  1522  0119                     	;# 
  1523  0119                     	;# 
  1524  011A                     	;# 
  1525  011A                     	;# 
  1526  011A                     	;# 
  1527  011B                     	;# 
  1528  011B                     	;# 
  1529  011B                     	;# 
  1530  011B                     	;# 
  1531  011B                     	;# 
  1532  011C                     	;# 
  1533  011C                     	;# 
  1534  011C                     	;# 
  1535  011D                     	;# 
  1536  011D                     	;# 
  1537  011D                     	;# 
  1538  011E                     	;# 
  1539  011E                     	;# 
  1540  011E                     	;# 
  1541  011F                     	;# 
  1542  011F                     	;# 
  1543  011F                     	;# 
  1544  011F                     	;# 
  1545  011F                     	;# 
  1546  018C                     	;# 
  1547  018D                     	;# 
  1548  018E                     	;# 
  1549  018F                     	;# 
  1550  0190                     	;# 
  1551  0191                     	;# 
  1552  0192                     	;# 
  1553  0196                     	;# 
  1554  0197                     	;# 
  1555  0198                     	;# 
  1556  0199                     	;# 
  1557  019A                     	;# 
  1558  019B                     	;# 
  1559  019C                     	;# 
  1560  020C                     	;# 
  1561  020C                     	;# 
  1562  020D                     	;# 
  1563  020E                     	;# 
  1564  020F                     	;# 
  1565  020F                     	;# 
  1566  0210                     	;# 
  1567  0210                     	;# 
  1568  0211                     	;# 
  1569  0211                     	;# 
  1570  028C                     	;# 
  1571  028C                     	;# 
  1572  028D                     	;# 
  1573  028D                     	;# 
  1574  028E                     	;# 
  1575  028F                     	;# 
  1576  0290                     	;# 
  1577  0291                     	;# 
  1578  030C                     	;# 
  1579  030C                     	;# 
  1580  030D                     	;# 
  1581  030E                     	;# 
  1582  030F                     	;# 
  1583  0310                     	;# 
  1584  0310                     	;# 
  1585  0311                     	;# 
  1586  0312                     	;# 
  1587  0313                     	;# 
  1588  0314                     	;# 
  1589  0314                     	;# 
  1590  0315                     	;# 
  1591  0316                     	;# 
  1592  0318                     	;# 
  1593  0318                     	;# 
  1594  0319                     	;# 
  1595  031A                     	;# 
  1596  031C                     	;# 
  1597  031C                     	;# 
  1598  031D                     	;# 
  1599  031E                     	;# 
  1600  038C                     	;# 
  1601  038C                     	;# 
  1602  038D                     	;# 
  1603  038E                     	;# 
  1604  058C                     	;# 
  1605  058C                     	;# 
  1606  058D                     	;# 
  1607  058E                     	;# 
  1608  058F                     	;# 
  1609  058F                     	;# 
  1610  0590                     	;# 
  1611  0591                     	;# 
  1612  0592                     	;# 
  1613  0593                     	;# 
  1614  059C                     	;# 
  1615  059C                     	;# 
  1616  059D                     	;# 
  1617  059D                     	;# 
  1618  059E                     	;# 
  1619  059F                     	;# 
  1620  060C                     	;# 
  1621  060D                     	;# 
  1622  060E                     	;# 
  1623  060F                     	;# 
  1624  0610                     	;# 
  1625  0611                     	;# 
  1626  0612                     	;# 
  1627  0613                     	;# 
  1628  0614                     	;# 
  1629  070C                     	;# 
  1630  070D                     	;# 
  1631  070E                     	;# 
  1632  070F                     	;# 
  1633  0710                     	;# 
  1634  0711                     	;# 
  1635  0712                     	;# 
  1636  0713                     	;# 
  1637  0716                     	;# 
  1638  0717                     	;# 
  1639  0718                     	;# 
  1640  0719                     	;# 
  1641  071A                     	;# 
  1642  071B                     	;# 
  1643  071C                     	;# 
  1644  071D                     	;# 
  1645  0796                     	;# 
  1646  0797                     	;# 
  1647  0798                     	;# 
  1648  0799                     	;# 
  1649  079A                     	;# 
  1650  079B                     	;# 
  1651  080C                     	;# 
  1652  080D                     	;# 
  1653  080E                     	;# 
  1654  080F                     	;# 
  1655  0810                     	;# 
  1656  0811                     	;# 
  1657  0812                     	;# 
  1658  0813                     	;# 
  1659  0814                     	;# 
  1660  081A                     	;# 
  1661  081A                     	;# 
  1662  081B                     	;# 
  1663  081C                     	;# 
  1664  081C                     	;# 
  1665  081D                     	;# 
  1666  081E                     	;# 
  1667  081F                     	;# 
  1668  088C                     	;# 
  1669  088D                     	;# 
  1670  088E                     	;# 
  1671  088F                     	;# 
  1672  0890                     	;# 
  1673  0891                     	;# 
  1674  0892                     	;# 
  1675  0893                     	;# 
  1676  0895                     	;# 
  1677  0896                     	;# 
  1678  090C                     	;# 
  1679  090E                     	;# 
  1680  090F                     	;# 
  1681  091F                     	;# 
  1682  098F                     	;# 
  1683  098F                     	;# 
  1684  0990                     	;# 
  1685  0991                     	;# 
  1686  0992                     	;# 
  1687  0993                     	;# 
  1688  0994                     	;# 
  1689  0995                     	;# 
  1690  0996                     	;# 
  1691  0997                     	;# 
  1692  0A19                     	;# 
  1693  0A19                     	;# 
  1694  0A1A                     	;# 
  1695  0A1A                     	;# 
  1696  0A1B                     	;# 
  1697  0A1B                     	;# 
  1698  0A1B                     	;# 
  1699  0A1C                     	;# 
  1700  0A1C                     	;# 
  1701  0A1D                     	;# 
  1702  0A1D                     	;# 
  1703  0A1E                     	;# 
  1704  0A1E                     	;# 
  1705  0A1F                     	;# 
  1706  0A1F                     	;# 
  1707  0A1F                     	;# 
  1708  1E0F                     	;# 
  1709  1E10                     	;# 
  1710  1E11                     	;# 
  1711  1E12                     	;# 
  1712  1E13                     	;# 
  1713  1E14                     	;# 
  1714  1E15                     	;# 
  1715  1E16                     	;# 
  1716  1E17                     	;# 
  1717  1E18                     	;# 
  1718  1E19                     	;# 
  1719  1E1A                     	;# 
  1720  1E1B                     	;# 
  1721  1E1C                     	;# 
  1722  1E1D                     	;# 
  1723  1E1E                     	;# 
  1724  1E1F                     	;# 
  1725  1E20                     	;# 
  1726  1E21                     	;# 
  1727  1E22                     	;# 
  1728  1E23                     	;# 
  1729  1E24                     	;# 
  1730  1E25                     	;# 
  1731  1E26                     	;# 
  1732  1E27                     	;# 
  1733  1E28                     	;# 
  1734  1E29                     	;# 
  1735  1E2A                     	;# 
  1736  1E2B                     	;# 
  1737  1E2C                     	;# 
  1738  1E2D                     	;# 
  1739  1E2E                     	;# 
  1740  1E2F                     	;# 
  1741  1E30                     	;# 
  1742  1E31                     	;# 
  1743  1E32                     	;# 
  1744  1E33                     	;# 
  1745  1E34                     	;# 
  1746  1E35                     	;# 
  1747  1E36                     	;# 
  1748  1E37                     	;# 
  1749  1E8F                     	;# 
  1750  1E90                     	;# 
  1751  1E91                     	;# 
  1752  1E92                     	;# 
  1753  1E93                     	;# 
  1754  1E9C                     	;# 
  1755  1EA1                     	;# 
  1756  1EA2                     	;# 
  1757  1EB1                     	;# 
  1758  1EBB                     	;# 
  1759  1EBC                     	;# 
  1760  1EBD                     	;# 
  1761  1EBE                     	;# 
  1762  1EC3                     	;# 
  1763  1EC5                     	;# 
  1764  1EC6                     	;# 
  1765  1EC7                     	;# 
  1766  1EC8                     	;# 
  1767  1EC9                     	;# 
  1768  1ECA                     	;# 
  1769  1ECB                     	;# 
  1770  1ECC                     	;# 
  1771  1ECD                     	;# 
  1772  1ECE                     	;# 
  1773  1F10                     	;# 
  1774  1F11                     	;# 
  1775  1F12                     	;# 
  1776  1F13                     	;# 
  1777  1F14                     	;# 
  1778  1F15                     	;# 
  1779  1F16                     	;# 
  1780  1F17                     	;# 
  1781  1F18                     	;# 
  1782  1F19                     	;# 
  1783  1F1A                     	;# 
  1784  1F1B                     	;# 
  1785  1F1C                     	;# 
  1786  1F1D                     	;# 
  1787  1F1E                     	;# 
  1788  1F1F                     	;# 
  1789  1F20                     	;# 
  1790  1F21                     	;# 
  1791  1F22                     	;# 
  1792  1F23                     	;# 
  1793  1F24                     	;# 
  1794  1F25                     	;# 
  1795  1F26                     	;# 
  1796  1F27                     	;# 
  1797  1F38                     	;# 
  1798  1F39                     	;# 
  1799  1F3A                     	;# 
  1800  1F3B                     	;# 
  1801  1F3C                     	;# 
  1802  1F3D                     	;# 
  1803  1F3E                     	;# 
  1804  1F3F                     	;# 
  1805  1F43                     	;# 
  1806  1F44                     	;# 
  1807  1F45                     	;# 
  1808  1F46                     	;# 
  1809  1F47                     	;# 
  1810  1F48                     	;# 
  1811  1F49                     	;# 
  1812  1F4A                     	;# 
  1813  1F4E                     	;# 
  1814  1F4F                     	;# 
  1815  1F50                     	;# 
  1816  1F51                     	;# 
  1817  1F52                     	;# 
  1818  1F53                     	;# 
  1819  1F54                     	;# 
  1820  1F55                     	;# 
  1821  1F65                     	;# 
  1822  1F68                     	;# 
  1823  1F69                     	;# 
  1824  1F6A                     	;# 
  1825  1F6B                     	;# 
  1826  1FE4                     	;# 
  1827  1FE5                     	;# 
  1828  1FE6                     	;# 
  1829  1FE7                     	;# 
  1830  1FE8                     	;# 
  1831  1FE8                     	;# 
  1832  1FE9                     	;# 
  1833  1FEA                     	;# 
  1834  1FEA                     	;# 
  1835  1FEB                     	;# 
  1836  1FED                     	;# 
  1837  1FEE                     	;# 
  1838  1FEF                     	;# 
  1839  0000                     	;# 
  1840  0001                     	;# 
  1841  0002                     	;# 
  1842  0003                     	;# 
  1843  0004                     	;# 
  1844  0005                     	;# 
  1845  0006                     	;# 
  1846  0007                     	;# 
  1847  0008                     	;# 
  1848  0009                     	;# 
  1849  000A                     	;# 
  1850  000B                     	;# 
  1851  000C                     	;# 
  1852  000D                     	;# 
  1853  000E                     	;# 
  1854  0010                     	;# 
  1855  0012                     	;# 
  1856  0013                     	;# 
  1857  0014                     	;# 
  1858  0016                     	;# 
  1859  0018                     	;# 
  1860  0019                     	;# 
  1861  001A                     	;# 
  1862  009B                     	;# 
  1863  009B                     	;# 
  1864  009C                     	;# 
  1865  009D                     	;# 
  1866  009E                     	;# 
  1867  009F                     	;# 
  1868  0119                     	;# 
  1869  0119                     	;# 
  1870  0119                     	;# 
  1871  011A                     	;# 
  1872  011A                     	;# 
  1873  011A                     	;# 
  1874  011B                     	;# 
  1875  011B                     	;# 
  1876  011B                     	;# 
  1877  011B                     	;# 
  1878  011B                     	;# 
  1879  011C                     	;# 
  1880  011C                     	;# 
  1881  011C                     	;# 
  1882  011D                     	;# 
  1883  011D                     	;# 
  1884  011D                     	;# 
  1885  011E                     	;# 
  1886  011E                     	;# 
  1887  011E                     	;# 
  1888  011F                     	;# 
  1889  011F                     	;# 
  1890  011F                     	;# 
  1891  011F                     	;# 
  1892  011F                     	;# 
  1893  018C                     	;# 
  1894  018D                     	;# 
  1895  018E                     	;# 
  1896  018F                     	;# 
  1897  0190                     	;# 
  1898  0191                     	;# 
  1899  0192                     	;# 
  1900  0196                     	;# 
  1901  0197                     	;# 
  1902  0198                     	;# 
  1903  0199                     	;# 
  1904  019A                     	;# 
  1905  019B                     	;# 
  1906  019C                     	;# 
  1907  020C                     	;# 
  1908  020C                     	;# 
  1909  020D                     	;# 
  1910  020E                     	;# 
  1911  020F                     	;# 
  1912  020F                     	;# 
  1913  0210                     	;# 
  1914  0210                     	;# 
  1915  0211                     	;# 
  1916  0211                     	;# 
  1917  028C                     	;# 
  1918  028C                     	;# 
  1919  028D                     	;# 
  1920  028D                     	;# 
  1921  028E                     	;# 
  1922  028F                     	;# 
  1923  0290                     	;# 
  1924  0291                     	;# 
  1925  030C                     	;# 
  1926  030C                     	;# 
  1927  030D                     	;# 
  1928  030E                     	;# 
  1929  030F                     	;# 
  1930  0310                     	;# 
  1931  0310                     	;# 
  1932  0311                     	;# 
  1933  0312                     	;# 
  1934  0313                     	;# 
  1935  0314                     	;# 
  1936  0314                     	;# 
  1937  0315                     	;# 
  1938  0316                     	;# 
  1939  0318                     	;# 
  1940  0318                     	;# 
  1941  0319                     	;# 
  1942  031A                     	;# 
  1943  031C                     	;# 
  1944  031C                     	;# 
  1945  031D                     	;# 
  1946  031E                     	;# 
  1947  038C                     	;# 
  1948  038C                     	;# 
  1949  038D                     	;# 
  1950  038E                     	;# 
  1951  058C                     	;# 
  1952  058C                     	;# 
  1953  058D                     	;# 
  1954  058E                     	;# 
  1955  058F                     	;# 
  1956  058F                     	;# 
  1957  0590                     	;# 
  1958  0591                     	;# 
  1959  0592                     	;# 
  1960  0593                     	;# 
  1961  059C                     	;# 
  1962  059C                     	;# 
  1963  059D                     	;# 
  1964  059D                     	;# 
  1965  059E                     	;# 
  1966  059F                     	;# 
  1967  060C                     	;# 
  1968  060D                     	;# 
  1969  060E                     	;# 
  1970  060F                     	;# 
  1971  0610                     	;# 
  1972  0611                     	;# 
  1973  0612                     	;# 
  1974  0613                     	;# 
  1975  0614                     	;# 
  1976  070C                     	;# 
  1977  070D                     	;# 
  1978  070E                     	;# 
  1979  070F                     	;# 
  1980  0710                     	;# 
  1981  0711                     	;# 
  1982  0712                     	;# 
  1983  0713                     	;# 
  1984  0716                     	;# 
  1985  0717                     	;# 
  1986  0718                     	;# 
  1987  0719                     	;# 
  1988  071A                     	;# 
  1989  071B                     	;# 
  1990  071C                     	;# 
  1991  071D                     	;# 
  1992  0796                     	;# 
  1993  0797                     	;# 
  1994  0798                     	;# 
  1995  0799                     	;# 
  1996  079A                     	;# 
  1997  079B                     	;# 
  1998  080C                     	;# 
  1999  080D                     	;# 
  2000  080E                     	;# 
  2001  080F                     	;# 
  2002  0810                     	;# 
  2003  0811                     	;# 
  2004  0812                     	;# 
  2005  0813                     	;# 
  2006  0814                     	;# 
  2007  081A                     	;# 
  2008  081A                     	;# 
  2009  081B                     	;# 
  2010  081C                     	;# 
  2011  081C                     	;# 
  2012  081D                     	;# 
  2013  081E                     	;# 
  2014  081F                     	;# 
  2015  088C                     	;# 
  2016  088D                     	;# 
  2017  088E                     	;# 
  2018  088F                     	;# 
  2019  0890                     	;# 
  2020  0891                     	;# 
  2021  0892                     	;# 
  2022  0893                     	;# 
  2023  0895                     	;# 
  2024  0896                     	;# 
  2025  090C                     	;# 
  2026  090E                     	;# 
  2027  090F                     	;# 
  2028  091F                     	;# 
  2029  098F                     	;# 
  2030  098F                     	;# 
  2031  0990                     	;# 
  2032  0991                     	;# 
  2033  0992                     	;# 
  2034  0993                     	;# 
  2035  0994                     	;# 
  2036  0995                     	;# 
  2037  0996                     	;# 
  2038  0997                     	;# 
  2039  0A19                     	;# 
  2040  0A19                     	;# 
  2041  0A1A                     	;# 
  2042  0A1A                     	;# 
  2043  0A1B                     	;# 
  2044  0A1B                     	;# 
  2045  0A1B                     	;# 
  2046  0A1C                     	;# 
  2047  0A1C                     	;# 
  2048  0A1D                     	;# 
  2049  0A1D                     	;# 
  2050  0A1E                     	;# 
  2051  0A1E                     	;# 
  2052  0A1F                     	;# 
  2053  0A1F                     	;# 
  2054  0A1F                     	;# 
  2055  1E0F                     	;# 
  2056  1E10                     	;# 
  2057  1E11                     	;# 
  2058  1E12                     	;# 
  2059  1E13                     	;# 
  2060  1E14                     	;# 
  2061  1E15                     	;# 
  2062  1E16                     	;# 
  2063  1E17                     	;# 
  2064  1E18                     	;# 
  2065  1E19                     	;# 
  2066  1E1A                     	;# 
  2067  1E1B                     	;# 
  2068  1E1C                     	;# 
  2069  1E1D                     	;# 
  2070  1E1E                     	;# 
  2071  1E1F                     	;# 
  2072  1E20                     	;# 
  2073  1E21                     	;# 
  2074  1E22                     	;# 
  2075  1E23                     	;# 
  2076  1E24                     	;# 
  2077  1E25                     	;# 
  2078  1E26                     	;# 
  2079  1E27                     	;# 
  2080  1E28                     	;# 
  2081  1E29                     	;# 
  2082  1E2A                     	;# 
  2083  1E2B                     	;# 
  2084  1E2C                     	;# 
  2085  1E2D                     	;# 
  2086  1E2E                     	;# 
  2087  1E2F                     	;# 
  2088  1E30                     	;# 
  2089  1E31                     	;# 
  2090  1E32                     	;# 
  2091  1E33                     	;# 
  2092  1E34                     	;# 
  2093  1E35                     	;# 
  2094  1E36                     	;# 
  2095  1E37                     	;# 
  2096  1E8F                     	;# 
  2097  1E90                     	;# 
  2098  1E91                     	;# 
  2099  1E92                     	;# 
  2100  1E93                     	;# 
  2101  1E9C                     	;# 
  2102  1EA1                     	;# 
  2103  1EA2                     	;# 
  2104  1EB1                     	;# 
  2105  1EBB                     	;# 
  2106  1EBC                     	;# 
  2107  1EBD                     	;# 
  2108  1EBE                     	;# 
  2109  1EC3                     	;# 
  2110  1EC5                     	;# 
  2111  1EC6                     	;# 
  2112  1EC7                     	;# 
  2113  1EC8                     	;# 
  2114  1EC9                     	;# 
  2115  1ECA                     	;# 
  2116  1ECB                     	;# 
  2117  1ECC                     	;# 
  2118  1ECD                     	;# 
  2119  1ECE                     	;# 
  2120  1F10                     	;# 
  2121  1F11                     	;# 
  2122  1F12                     	;# 
  2123  1F13                     	;# 
  2124  1F14                     	;# 
  2125  1F15                     	;# 
  2126  1F16                     	;# 
  2127  1F17                     	;# 
  2128  1F18                     	;# 
  2129  1F19                     	;# 
  2130  1F1A                     	;# 
  2131  1F1B                     	;# 
  2132  1F1C                     	;# 
  2133  1F1D                     	;# 
  2134  1F1E                     	;# 
  2135  1F1F                     	;# 
  2136  1F20                     	;# 
  2137  1F21                     	;# 
  2138  1F22                     	;# 
  2139  1F23                     	;# 
  2140  1F24                     	;# 
  2141  1F25                     	;# 
  2142  1F26                     	;# 
  2143  1F27                     	;# 
  2144  1F38                     	;# 
  2145  1F39                     	;# 
  2146  1F3A                     	;# 
  2147  1F3B                     	;# 
  2148  1F3C                     	;# 
  2149  1F3D                     	;# 
  2150  1F3E                     	;# 
  2151  1F3F                     	;# 
  2152  1F43                     	;# 
  2153  1F44                     	;# 
  2154  1F45                     	;# 
  2155  1F46                     	;# 
  2156  1F47                     	;# 
  2157  1F48                     	;# 
  2158  1F49                     	;# 
  2159  1F4A                     	;# 
  2160  1F4E                     	;# 
  2161  1F4F                     	;# 
  2162  1F50                     	;# 
  2163  1F51                     	;# 
  2164  1F52                     	;# 
  2165  1F53                     	;# 
  2166  1F54                     	;# 
  2167  1F55                     	;# 
  2168  1F65                     	;# 
  2169  1F68                     	;# 
  2170  1F69                     	;# 
  2171  1F6A                     	;# 
  2172  1F6B                     	;# 
  2173  1FE4                     	;# 
  2174  1FE5                     	;# 
  2175  1FE6                     	;# 
  2176  1FE7                     	;# 
  2177  1FE8                     	;# 
  2178  1FE8                     	;# 
  2179  1FE9                     	;# 
  2180  1FEA                     	;# 
  2181  1FEA                     	;# 
  2182  1FEB                     	;# 
  2183  1FED                     	;# 
  2184  1FEE                     	;# 
  2185  1FEF                     	;# 
  2186  0000                     	;# 
  2187  0001                     	;# 
  2188  0002                     	;# 
  2189  0003                     	;# 
  2190  0004                     	;# 
  2191  0005                     	;# 
  2192  0006                     	;# 
  2193  0007                     	;# 
  2194  0008                     	;# 
  2195  0009                     	;# 
  2196  000A                     	;# 
  2197  000B                     	;# 
  2198  000C                     	;# 
  2199  000D                     	;# 
  2200  000E                     	;# 
  2201  0010                     	;# 
  2202  0012                     	;# 
  2203  0013                     	;# 
  2204  0014                     	;# 
  2205  0016                     	;# 
  2206  0018                     	;# 
  2207  0019                     	;# 
  2208  001A                     	;# 
  2209  009B                     	;# 
  2210  009B                     	;# 
  2211  009C                     	;# 
  2212  009D                     	;# 
  2213  009E                     	;# 
  2214  009F                     	;# 
  2215  0119                     	;# 
  2216  0119                     	;# 
  2217  0119                     	;# 
  2218  011A                     	;# 
  2219  011A                     	;# 
  2220  011A                     	;# 
  2221  011B                     	;# 
  2222  011B                     	;# 
  2223  011B                     	;# 
  2224  011B                     	;# 
  2225  011B                     	;# 
  2226  011C                     	;# 
  2227  011C                     	;# 
  2228  011C                     	;# 
  2229  011D                     	;# 
  2230  011D                     	;# 
  2231  011D                     	;# 
  2232  011E                     	;# 
  2233  011E                     	;# 
  2234  011E                     	;# 
  2235  011F                     	;# 
  2236  011F                     	;# 
  2237  011F                     	;# 
  2238  011F                     	;# 
  2239  011F                     	;# 
  2240  018C                     	;# 
  2241  018D                     	;# 
  2242  018E                     	;# 
  2243  018F                     	;# 
  2244  0190                     	;# 
  2245  0191                     	;# 
  2246  0192                     	;# 
  2247  0196                     	;# 
  2248  0197                     	;# 
  2249  0198                     	;# 
  2250  0199                     	;# 
  2251  019A                     	;# 
  2252  019B                     	;# 
  2253  019C                     	;# 
  2254  020C                     	;# 
  2255  020C                     	;# 
  2256  020D                     	;# 
  2257  020E                     	;# 
  2258  020F                     	;# 
  2259  020F                     	;# 
  2260  0210                     	;# 
  2261  0210                     	;# 
  2262  0211                     	;# 
  2263  0211                     	;# 
  2264  028C                     	;# 
  2265  028C                     	;# 
  2266  028D                     	;# 
  2267  028D                     	;# 
  2268  028E                     	;# 
  2269  028F                     	;# 
  2270  0290                     	;# 
  2271  0291                     	;# 
  2272  030C                     	;# 
  2273  030C                     	;# 
  2274  030D                     	;# 
  2275  030E                     	;# 
  2276  030F                     	;# 
  2277  0310                     	;# 
  2278  0310                     	;# 
  2279  0311                     	;# 
  2280  0312                     	;# 
  2281  0313                     	;# 
  2282  0314                     	;# 
  2283  0314                     	;# 
  2284  0315                     	;# 
  2285  0316                     	;# 
  2286  0318                     	;# 
  2287  0318                     	;# 
  2288  0319                     	;# 
  2289  031A                     	;# 
  2290  031C                     	;# 
  2291  031C                     	;# 
  2292  031D                     	;# 
  2293  031E                     	;# 
  2294  038C                     	;# 
  2295  038C                     	;# 
  2296  038D                     	;# 
  2297  038E                     	;# 
  2298  058C                     	;# 
  2299  058C                     	;# 
  2300  058D                     	;# 
  2301  058E                     	;# 
  2302  058F                     	;# 
  2303  058F                     	;# 
  2304  0590                     	;# 
  2305  0591                     	;# 
  2306  0592                     	;# 
  2307  0593                     	;# 
  2308  059C                     	;# 
  2309  059C                     	;# 
  2310  059D                     	;# 
  2311  059D                     	;# 
  2312  059E                     	;# 
  2313  059F                     	;# 
  2314  060C                     	;# 
  2315  060D                     	;# 
  2316  060E                     	;# 
  2317  060F                     	;# 
  2318  0610                     	;# 
  2319  0611                     	;# 
  2320  0612                     	;# 
  2321  0613                     	;# 
  2322  0614                     	;# 
  2323  070C                     	;# 
  2324  070D                     	;# 
  2325  070E                     	;# 
  2326  070F                     	;# 
  2327  0710                     	;# 
  2328  0711                     	;# 
  2329  0712                     	;# 
  2330  0713                     	;# 
  2331  0716                     	;# 
  2332  0717                     	;# 
  2333  0718                     	;# 
  2334  0719                     	;# 
  2335  071A                     	;# 
  2336  071B                     	;# 
  2337  071C                     	;# 
  2338  071D                     	;# 
  2339  0796                     	;# 
  2340  0797                     	;# 
  2341  0798                     	;# 
  2342  0799                     	;# 
  2343  079A                     	;# 
  2344  079B                     	;# 
  2345  080C                     	;# 
  2346  080D                     	;# 
  2347  080E                     	;# 
  2348  080F                     	;# 
  2349  0810                     	;# 
  2350  0811                     	;# 
  2351  0812                     	;# 
  2352  0813                     	;# 
  2353  0814                     	;# 
  2354  081A                     	;# 
  2355  081A                     	;# 
  2356  081B                     	;# 
  2357  081C                     	;# 
  2358  081C                     	;# 
  2359  081D                     	;# 
  2360  081E                     	;# 
  2361  081F                     	;# 
  2362  088C                     	;# 
  2363  088D                     	;# 
  2364  088E                     	;# 
  2365  088F                     	;# 
  2366  0890                     	;# 
  2367  0891                     	;# 
  2368  0892                     	;# 
  2369  0893                     	;# 
  2370  0895                     	;# 
  2371  0896                     	;# 
  2372  090C                     	;# 
  2373  090E                     	;# 
  2374  090F                     	;# 
  2375  091F                     	;# 
  2376  098F                     	;# 
  2377  098F                     	;# 
  2378  0990                     	;# 
  2379  0991                     	;# 
  2380  0992                     	;# 
  2381  0993                     	;# 
  2382  0994                     	;# 
  2383  0995                     	;# 
  2384  0996                     	;# 
  2385  0997                     	;# 
  2386  0A19                     	;# 
  2387  0A19                     	;# 
  2388  0A1A                     	;# 
  2389  0A1A                     	;# 
  2390  0A1B                     	;# 
  2391  0A1B                     	;# 
  2392  0A1B                     	;# 
  2393  0A1C                     	;# 
  2394  0A1C                     	;# 
  2395  0A1D                     	;# 
  2396  0A1D                     	;# 
  2397  0A1E                     	;# 
  2398  0A1E                     	;# 
  2399  0A1F                     	;# 
  2400  0A1F                     	;# 
  2401  0A1F                     	;# 
  2402  1E0F                     	;# 
  2403  1E10                     	;# 
  2404  1E11                     	;# 
  2405  1E12                     	;# 
  2406  1E13                     	;# 
  2407  1E14                     	;# 
  2408  1E15                     	;# 
  2409  1E16                     	;# 
  2410  1E17                     	;# 
  2411  1E18                     	;# 
  2412  1E19                     	;# 
  2413  1E1A                     	;# 
  2414  1E1B                     	;# 
  2415  1E1C                     	;# 
  2416  1E1D                     	;# 
  2417  1E1E                     	;# 
  2418  1E1F                     	;# 
  2419  1E20                     	;# 
  2420  1E21                     	;# 
  2421  1E22                     	;# 
  2422  1E23                     	;# 
  2423  1E24                     	;# 
  2424  1E25                     	;# 
  2425  1E26                     	;# 
  2426  1E27                     	;# 
  2427  1E28                     	;# 
  2428  1E29                     	;# 
  2429  1E2A                     	;# 
  2430  1E2B                     	;# 
  2431  1E2C                     	;# 
  2432  1E2D                     	;# 
  2433  1E2E                     	;# 
  2434  1E2F                     	;# 
  2435  1E30                     	;# 
  2436  1E31                     	;# 
  2437  1E32                     	;# 
  2438  1E33                     	;# 
  2439  1E34                     	;# 
  2440  1E35                     	;# 
  2441  1E36                     	;# 
  2442  1E37                     	;# 
  2443  1E8F                     	;# 
  2444  1E90                     	;# 
  2445  1E91                     	;# 
  2446  1E92                     	;# 
  2447  1E93                     	;# 
  2448  1E9C                     	;# 
  2449  1EA1                     	;# 
  2450  1EA2                     	;# 
  2451  1EB1                     	;# 
  2452  1EBB                     	;# 
  2453  1EBC                     	;# 
  2454  1EBD                     	;# 
  2455  1EBE                     	;# 
  2456  1EC3                     	;# 
  2457  1EC5                     	;# 
  2458  1EC6                     	;# 
  2459  1EC7                     	;# 
  2460  1EC8                     	;# 
  2461  1EC9                     	;# 
  2462  1ECA                     	;# 
  2463  1ECB                     	;# 
  2464  1ECC                     	;# 
  2465  1ECD                     	;# 
  2466  1ECE                     	;# 
  2467  1F10                     	;# 
  2468  1F11                     	;# 
  2469  1F12                     	;# 
  2470  1F13                     	;# 
  2471  1F14                     	;# 
  2472  1F15                     	;# 
  2473  1F16                     	;# 
  2474  1F17                     	;# 
  2475  1F18                     	;# 
  2476  1F19                     	;# 
  2477  1F1A                     	;# 
  2478  1F1B                     	;# 
  2479  1F1C                     	;# 
  2480  1F1D                     	;# 
  2481  1F1E                     	;# 
  2482  1F1F                     	;# 
  2483  1F20                     	;# 
  2484  1F21                     	;# 
  2485  1F22                     	;# 
  2486  1F23                     	;# 
  2487  1F24                     	;# 
  2488  1F25                     	;# 
  2489  1F26                     	;# 
  2490  1F27                     	;# 
  2491  1F38                     	;# 
  2492  1F39                     	;# 
  2493  1F3A                     	;# 
  2494  1F3B                     	;# 
  2495  1F3C                     	;# 
  2496  1F3D                     	;# 
  2497  1F3E                     	;# 
  2498  1F3F                     	;# 
  2499  1F43                     	;# 
  2500  1F44                     	;# 
  2501  1F45                     	;# 
  2502  1F46                     	;# 
  2503  1F47                     	;# 
  2504  1F48                     	;# 
  2505  1F49                     	;# 
  2506  1F4A                     	;# 
  2507  1F4E                     	;# 
  2508  1F4F                     	;# 
  2509  1F50                     	;# 
  2510  1F51                     	;# 
  2511  1F52                     	;# 
  2512  1F53                     	;# 
  2513  1F54                     	;# 
  2514  1F55                     	;# 
  2515  1F65                     	;# 
  2516  1F68                     	;# 
  2517  1F69                     	;# 
  2518  1F6A                     	;# 
  2519  1F6B                     	;# 
  2520  1FE4                     	;# 
  2521  1FE5                     	;# 
  2522  1FE6                     	;# 
  2523  1FE7                     	;# 
  2524  1FE8                     	;# 
  2525  1FE8                     	;# 
  2526  1FE9                     	;# 
  2527  1FEA                     	;# 
  2528  1FEA                     	;# 
  2529  1FEB                     	;# 
  2530  1FED                     	;# 
  2531  1FEE                     	;# 
  2532  1FEF                     	;# 
  2533  0000                     	;# 
  2534  0001                     	;# 
  2535  0002                     	;# 
  2536  0003                     	;# 
  2537  0004                     	;# 
  2538  0005                     	;# 
  2539  0006                     	;# 
  2540  0007                     	;# 
  2541  0008                     	;# 
  2542  0009                     	;# 
  2543  000A                     	;# 
  2544  000B                     	;# 
  2545  000C                     	;# 
  2546  000D                     	;# 
  2547  000E                     	;# 
  2548  0010                     	;# 
  2549  0012                     	;# 
  2550  0013                     	;# 
  2551  0014                     	;# 
  2552  0016                     	;# 
  2553  0018                     	;# 
  2554  0019                     	;# 
  2555  001A                     	;# 
  2556  009B                     	;# 
  2557  009B                     	;# 
  2558  009C                     	;# 
  2559  009D                     	;# 
  2560  009E                     	;# 
  2561  009F                     	;# 
  2562  0119                     	;# 
  2563  0119                     	;# 
  2564  0119                     	;# 
  2565  011A                     	;# 
  2566  011A                     	;# 
  2567  011A                     	;# 
  2568  011B                     	;# 
  2569  011B                     	;# 
  2570  011B                     	;# 
  2571  011B                     	;# 
  2572  011B                     	;# 
  2573  011C                     	;# 
  2574  011C                     	;# 
  2575  011C                     	;# 
  2576  011D                     	;# 
  2577  011D                     	;# 
  2578  011D                     	;# 
  2579  011E                     	;# 
  2580  011E                     	;# 
  2581  011E                     	;# 
  2582  011F                     	;# 
  2583  011F                     	;# 
  2584  011F                     	;# 
  2585  011F                     	;# 
  2586  011F                     	;# 
  2587  018C                     	;# 
  2588  018D                     	;# 
  2589  018E                     	;# 
  2590  018F                     	;# 
  2591  0190                     	;# 
  2592  0191                     	;# 
  2593  0192                     	;# 
  2594  0196                     	;# 
  2595  0197                     	;# 
  2596  0198                     	;# 
  2597  0199                     	;# 
  2598  019A                     	;# 
  2599  019B                     	;# 
  2600  019C                     	;# 
  2601  020C                     	;# 
  2602  020C                     	;# 
  2603  020D                     	;# 
  2604  020E                     	;# 
  2605  020F                     	;# 
  2606  020F                     	;# 
  2607  0210                     	;# 
  2608  0210                     	;# 
  2609  0211                     	;# 
  2610  0211                     	;# 
  2611  028C                     	;# 
  2612  028C                     	;# 
  2613  028D                     	;# 
  2614  028D                     	;# 
  2615  028E                     	;# 
  2616  028F                     	;# 
  2617  0290                     	;# 
  2618  0291                     	;# 
  2619  030C                     	;# 
  2620  030C                     	;# 
  2621  030D                     	;# 
  2622  030E                     	;# 
  2623  030F                     	;# 
  2624  0310                     	;# 
  2625  0310                     	;# 
  2626  0311                     	;# 
  2627  0312                     	;# 
  2628  0313                     	;# 
  2629  0314                     	;# 
  2630  0314                     	;# 
  2631  0315                     	;# 
  2632  0316                     	;# 
  2633  0318                     	;# 
  2634  0318                     	;# 
  2635  0319                     	;# 
  2636  031A                     	;# 
  2637  031C                     	;# 
  2638  031C                     	;# 
  2639  031D                     	;# 
  2640  031E                     	;# 
  2641  038C                     	;# 
  2642  038C                     	;# 
  2643  038D                     	;# 
  2644  038E                     	;# 
  2645  058C                     	;# 
  2646  058C                     	;# 
  2647  058D                     	;# 
  2648  058E                     	;# 
  2649  058F                     	;# 
  2650  058F                     	;# 
  2651  0590                     	;# 
  2652  0591                     	;# 
  2653  0592                     	;# 
  2654  0593                     	;# 
  2655  059C                     	;# 
  2656  059C                     	;# 
  2657  059D                     	;# 
  2658  059D                     	;# 
  2659  059E                     	;# 
  2660  059F                     	;# 
  2661  060C                     	;# 
  2662  060D                     	;# 
  2663  060E                     	;# 
  2664  060F                     	;# 
  2665  0610                     	;# 
  2666  0611                     	;# 
  2667  0612                     	;# 
  2668  0613                     	;# 
  2669  0614                     	;# 
  2670  070C                     	;# 
  2671  070D                     	;# 
  2672  070E                     	;# 
  2673  070F                     	;# 
  2674  0710                     	;# 
  2675  0711                     	;# 
  2676  0712                     	;# 
  2677  0713                     	;# 
  2678  0716                     	;# 
  2679  0717                     	;# 
  2680  0718                     	;# 
  2681  0719                     	;# 
  2682  071A                     	;# 
  2683  071B                     	;# 
  2684  071C                     	;# 
  2685  071D                     	;# 
  2686  0796                     	;# 
  2687  0797                     	;# 
  2688  0798                     	;# 
  2689  0799                     	;# 
  2690  079A                     	;# 
  2691  079B                     	;# 
  2692  080C                     	;# 
  2693  080D                     	;# 
  2694  080E                     	;# 
  2695  080F                     	;# 
  2696  0810                     	;# 
  2697  0811                     	;# 
  2698  0812                     	;# 
  2699  0813                     	;# 
  2700  0814                     	;# 
  2701  081A                     	;# 
  2702  081A                     	;# 
  2703  081B                     	;# 
  2704  081C                     	;# 
  2705  081C                     	;# 
  2706  081D                     	;# 
  2707  081E                     	;# 
  2708  081F                     	;# 
  2709  088C                     	;# 
  2710  088D                     	;# 
  2711  088E                     	;# 
  2712  088F                     	;# 
  2713  0890                     	;# 
  2714  0891                     	;# 
  2715  0892                     	;# 
  2716  0893                     	;# 
  2717  0895                     	;# 
  2718  0896                     	;# 
  2719  090C                     	;# 
  2720  090E                     	;# 
  2721  090F                     	;# 
  2722  091F                     	;# 
  2723  098F                     	;# 
  2724  098F                     	;# 
  2725  0990                     	;# 
  2726  0991                     	;# 
  2727  0992                     	;# 
  2728  0993                     	;# 
  2729  0994                     	;# 
  2730  0995                     	;# 
  2731  0996                     	;# 
  2732  0997                     	;# 
  2733  0A19                     	;# 
  2734  0A19                     	;# 
  2735  0A1A                     	;# 
  2736  0A1A                     	;# 
  2737  0A1B                     	;# 
  2738  0A1B                     	;# 
  2739  0A1B                     	;# 
  2740  0A1C                     	;# 
  2741  0A1C                     	;# 
  2742  0A1D                     	;# 
  2743  0A1D                     	;# 
  2744  0A1E                     	;# 
  2745  0A1E                     	;# 
  2746  0A1F                     	;# 
  2747  0A1F                     	;# 
  2748  0A1F                     	;# 
  2749  1E0F                     	;# 
  2750  1E10                     	;# 
  2751  1E11                     	;# 
  2752  1E12                     	;# 
  2753  1E13                     	;# 
  2754  1E14                     	;# 
  2755  1E15                     	;# 
  2756  1E16                     	;# 
  2757  1E17                     	;# 
  2758  1E18                     	;# 
  2759  1E19                     	;# 
  2760  1E1A                     	;# 
  2761  1E1B                     	;# 
  2762  1E1C                     	;# 
  2763  1E1D                     	;# 
  2764  1E1E                     	;# 
  2765  1E1F                     	;# 
  2766  1E20                     	;# 
  2767  1E21                     	;# 
  2768  1E22                     	;# 
  2769  1E23                     	;# 
  2770  1E24                     	;# 
  2771  1E25                     	;# 
  2772  1E26                     	;# 
  2773  1E27                     	;# 
  2774  1E28                     	;# 
  2775  1E29                     	;# 
  2776  1E2A                     	;# 
  2777  1E2B                     	;# 
  2778  1E2C                     	;# 
  2779  1E2D                     	;# 
  2780  1E2E                     	;# 
  2781  1E2F                     	;# 
  2782  1E30                     	;# 
  2783  1E31                     	;# 
  2784  1E32                     	;# 
  2785  1E33                     	;# 
  2786  1E34                     	;# 
  2787  1E35                     	;# 
  2788  1E36                     	;# 
  2789  1E37                     	;# 
  2790  1E8F                     	;# 
  2791  1E90                     	;# 
  2792  1E91                     	;# 
  2793  1E92                     	;# 
  2794  1E93                     	;# 
  2795  1E9C                     	;# 
  2796  1EA1                     	;# 
  2797  1EA2                     	;# 
  2798  1EB1                     	;# 
  2799  1EBB                     	;# 
  2800  1EBC                     	;# 
  2801  1EBD                     	;# 
  2802  1EBE                     	;# 
  2803  1EC3                     	;# 
  2804  1EC5                     	;# 
  2805  1EC6                     	;# 
  2806  1EC7                     	;# 
  2807  1EC8                     	;# 
  2808  1EC9                     	;# 
  2809  1ECA                     	;# 
  2810  1ECB                     	;# 
  2811  1ECC                     	;# 
  2812  1ECD                     	;# 
  2813  1ECE                     	;# 
  2814  1F10                     	;# 
  2815  1F11                     	;# 
  2816  1F12                     	;# 
  2817  1F13                     	;# 
  2818  1F14                     	;# 
  2819  1F15                     	;# 
  2820  1F16                     	;# 
  2821  1F17                     	;# 
  2822  1F18                     	;# 
  2823  1F19                     	;# 
  2824  1F1A                     	;# 
  2825  1F1B                     	;# 
  2826  1F1C                     	;# 
  2827  1F1D                     	;# 
  2828  1F1E                     	;# 
  2829  1F1F                     	;# 
  2830  1F20                     	;# 
  2831  1F21                     	;# 
  2832  1F22                     	;# 
  2833  1F23                     	;# 
  2834  1F24                     	;# 
  2835  1F25                     	;# 
  2836  1F26                     	;# 
  2837  1F27                     	;# 
  2838  1F38                     	;# 
  2839  1F39                     	;# 
  2840  1F3A                     	;# 
  2841  1F3B                     	;# 
  2842  1F3C                     	;# 
  2843  1F3D                     	;# 
  2844  1F3E                     	;# 
  2845  1F3F                     	;# 
  2846  1F43                     	;# 
  2847  1F44                     	;# 
  2848  1F45                     	;# 
  2849  1F46                     	;# 
  2850  1F47                     	;# 
  2851  1F48                     	;# 
  2852  1F49                     	;# 
  2853  1F4A                     	;# 
  2854  1F4E                     	;# 
  2855  1F4F                     	;# 
  2856  1F50                     	;# 
  2857  1F51                     	;# 
  2858  1F52                     	;# 
  2859  1F53                     	;# 
  2860  1F54                     	;# 
  2861  1F55                     	;# 
  2862  1F65                     	;# 
  2863  1F68                     	;# 
  2864  1F69                     	;# 
  2865  1F6A                     	;# 
  2866  1F6B                     	;# 
  2867  1FE4                     	;# 
  2868  1FE5                     	;# 
  2869  1FE6                     	;# 
  2870  1FE7                     	;# 
  2871  1FE8                     	;# 
  2872  1FE8                     	;# 
  2873  1FE9                     	;# 
  2874  1FEA                     	;# 
  2875  1FEA                     	;# 
  2876  1FEB                     	;# 
  2877  1FED                     	;# 
  2878  1FEE                     	;# 
  2879  1FEF                     	;# 
  2880  0000                     	;# 
  2881  0001                     	;# 
  2882  0002                     	;# 
  2883  0003                     	;# 
  2884  0004                     	;# 
  2885  0005                     	;# 
  2886  0006                     	;# 
  2887  0007                     	;# 
  2888  0008                     	;# 
  2889  0009                     	;# 
  2890  000A                     	;# 
  2891  000B                     	;# 
  2892  000C                     	;# 
  2893  000D                     	;# 
  2894  000E                     	;# 
  2895  0010                     	;# 
  2896  0012                     	;# 
  2897  0013                     	;# 
  2898  0014                     	;# 
  2899  0016                     	;# 
  2900  0018                     	;# 
  2901  0019                     	;# 
  2902  001A                     	;# 
  2903  009B                     	;# 
  2904  009B                     	;# 
  2905  009C                     	;# 
  2906  009D                     	;# 
  2907  009E                     	;# 
  2908  009F                     	;# 
  2909  0119                     	;# 
  2910  0119                     	;# 
  2911  0119                     	;# 
  2912  011A                     	;# 
  2913  011A                     	;# 
  2914  011A                     	;# 
  2915  011B                     	;# 
  2916  011B                     	;# 
  2917  011B                     	;# 
  2918  011B                     	;# 
  2919  011B                     	;# 
  2920  011C                     	;# 
  2921  011C                     	;# 
  2922  011C                     	;# 
  2923  011D                     	;# 
  2924  011D                     	;# 
  2925  011D                     	;# 
  2926  011E                     	;# 
  2927  011E                     	;# 
  2928  011E                     	;# 
  2929  011F                     	;# 
  2930  011F                     	;# 
  2931  011F                     	;# 
  2932  011F                     	;# 
  2933  011F                     	;# 
  2934  018C                     	;# 
  2935  018D                     	;# 
  2936  018E                     	;# 
  2937  018F                     	;# 
  2938  0190                     	;# 
  2939  0191                     	;# 
  2940  0192                     	;# 
  2941  0196                     	;# 
  2942  0197                     	;# 
  2943  0198                     	;# 
  2944  0199                     	;# 
  2945  019A                     	;# 
  2946  019B                     	;# 
  2947  019C                     	;# 
  2948  020C                     	;# 
  2949  020C                     	;# 
  2950  020D                     	;# 
  2951  020E                     	;# 
  2952  020F                     	;# 
  2953  020F                     	;# 
  2954  0210                     	;# 
  2955  0210                     	;# 
  2956  0211                     	;# 
  2957  0211                     	;# 
  2958  028C                     	;# 
  2959  028C                     	;# 
  2960  028D                     	;# 
  2961  028D                     	;# 
  2962  028E                     	;# 
  2963  028F                     	;# 
  2964  0290                     	;# 
  2965  0291                     	;# 
  2966  030C                     	;# 
  2967  030C                     	;# 
  2968  030D                     	;# 
  2969  030E                     	;# 
  2970  030F                     	;# 
  2971  0310                     	;# 
  2972  0310                     	;# 
  2973  0311                     	;# 
  2974  0312                     	;# 
  2975  0313                     	;# 
  2976  0314                     	;# 
  2977  0314                     	;# 
  2978  0315                     	;# 
  2979  0316                     	;# 
  2980  0318                     	;# 
  2981  0318                     	;# 
  2982  0319                     	;# 
  2983  031A                     	;# 
  2984  031C                     	;# 
  2985  031C                     	;# 
  2986  031D                     	;# 
  2987  031E                     	;# 
  2988  038C                     	;# 
  2989  038C                     	;# 
  2990  038D                     	;# 
  2991  038E                     	;# 
  2992  058C                     	;# 
  2993  058C                     	;# 
  2994  058D                     	;# 
  2995  058E                     	;# 
  2996  058F                     	;# 
  2997  058F                     	;# 
  2998  0590                     	;# 
  2999  0591                     	;# 
  3000  0592                     	;# 
  3001  0593                     	;# 
  3002  059C                     	;# 
  3003  059C                     	;# 
  3004  059D                     	;# 
  3005  059D                     	;# 
  3006  059E                     	;# 
  3007  059F                     	;# 
  3008  060C                     	;# 
  3009  060D                     	;# 
  3010  060E                     	;# 
  3011  060F                     	;# 
  3012  0610                     	;# 
  3013  0611                     	;# 
  3014  0612                     	;# 
  3015  0613                     	;# 
  3016  0614                     	;# 
  3017  070C                     	;# 
  3018  070D                     	;# 
  3019  070E                     	;# 
  3020  070F                     	;# 
  3021  0710                     	;# 
  3022  0711                     	;# 
  3023  0712                     	;# 
  3024  0713                     	;# 
  3025  0716                     	;# 
  3026  0717                     	;# 
  3027  0718                     	;# 
  3028  0719                     	;# 
  3029  071A                     	;# 
  3030  071B                     	;# 
  3031  071C                     	;# 
  3032  071D                     	;# 
  3033  0796                     	;# 
  3034  0797                     	;# 
  3035  0798                     	;# 
  3036  0799                     	;# 
  3037  079A                     	;# 
  3038  079B                     	;# 
  3039  080C                     	;# 
  3040  080D                     	;# 
  3041  080E                     	;# 
  3042  080F                     	;# 
  3043  0810                     	;# 
  3044  0811                     	;# 
  3045  0812                     	;# 
  3046  0813                     	;# 
  3047  0814                     	;# 
  3048  081A                     	;# 
  3049  081A                     	;# 
  3050  081B                     	;# 
  3051  081C                     	;# 
  3052  081C                     	;# 
  3053  081D                     	;# 
  3054  081E                     	;# 
  3055  081F                     	;# 
  3056  088C                     	;# 
  3057  088D                     	;# 
  3058  088E                     	;# 
  3059  088F                     	;# 
  3060  0890                     	;# 
  3061  0891                     	;# 
  3062  0892                     	;# 
  3063  0893                     	;# 
  3064  0895                     	;# 
  3065  0896                     	;# 
  3066  090C                     	;# 
  3067  090E                     	;# 
  3068  090F                     	;# 
  3069  091F                     	;# 
  3070  098F                     	;# 
  3071  098F                     	;# 
  3072  0990                     	;# 
  3073  0991                     	;# 
  3074  0992                     	;# 
  3075  0993                     	;# 
  3076  0994                     	;# 
  3077  0995                     	;# 
  3078  0996                     	;# 
  3079  0997                     	;# 
  3080  0A19                     	;# 
  3081  0A19                     	;# 
  3082  0A1A                     	;# 
  3083  0A1A                     	;# 
  3084  0A1B                     	;# 
  3085  0A1B                     	;# 
  3086  0A1B                     	;# 
  3087  0A1C                     	;# 
  3088  0A1C                     	;# 
  3089  0A1D                     	;# 
  3090  0A1D                     	;# 
  3091  0A1E                     	;# 
  3092  0A1E                     	;# 
  3093  0A1F                     	;# 
  3094  0A1F                     	;# 
  3095  0A1F                     	;# 
  3096  1E0F                     	;# 
  3097  1E10                     	;# 
  3098  1E11                     	;# 
  3099  1E12                     	;# 
  3100  1E13                     	;# 
  3101  1E14                     	;# 
  3102  1E15                     	;# 
  3103  1E16                     	;# 
  3104  1E17                     	;# 
  3105  1E18                     	;# 
  3106  1E19                     	;# 
  3107  1E1A                     	;# 
  3108  1E1B                     	;# 
  3109  1E1C                     	;# 
  3110  1E1D                     	;# 
  3111  1E1E                     	;# 
  3112  1E1F                     	;# 
  3113  1E20                     	;# 
  3114  1E21                     	;# 
  3115  1E22                     	;# 
  3116  1E23                     	;# 
  3117  1E24                     	;# 
  3118  1E25                     	;# 
  3119  1E26                     	;# 
  3120  1E27                     	;# 
  3121  1E28                     	;# 
  3122  1E29                     	;# 
  3123  1E2A                     	;# 
  3124  1E2B                     	;# 
  3125  1E2C                     	;# 
  3126  1E2D                     	;# 
  3127  1E2E                     	;# 
  3128  1E2F                     	;# 
  3129  1E30                     	;# 
  3130  1E31                     	;# 
  3131  1E32                     	;# 
  3132  1E33                     	;# 
  3133  1E34                     	;# 
  3134  1E35                     	;# 
  3135  1E36                     	;# 
  3136  1E37                     	;# 
  3137  1E8F                     	;# 
  3138  1E90                     	;# 
  3139  1E91                     	;# 
  3140  1E92                     	;# 
  3141  1E93                     	;# 
  3142  1E9C                     	;# 
  3143  1EA1                     	;# 
  3144  1EA2                     	;# 
  3145  1EB1                     	;# 
  3146  1EBB                     	;# 
  3147  1EBC                     	;# 
  3148  1EBD                     	;# 
  3149  1EBE                     	;# 
  3150  1EC3                     	;# 
  3151  1EC5                     	;# 
  3152  1EC6                     	;# 
  3153  1EC7                     	;# 
  3154  1EC8                     	;# 
  3155  1EC9                     	;# 
  3156  1ECA                     	;# 
  3157  1ECB                     	;# 
  3158  1ECC                     	;# 
  3159  1ECD                     	;# 
  3160  1ECE                     	;# 
  3161  1F10                     	;# 
  3162  1F11                     	;# 
  3163  1F12                     	;# 
  3164  1F13                     	;# 
  3165  1F14                     	;# 
  3166  1F15                     	;# 
  3167  1F16                     	;# 
  3168  1F17                     	;# 
  3169  1F18                     	;# 
  3170  1F19                     	;# 
  3171  1F1A                     	;# 
  3172  1F1B                     	;# 
  3173  1F1C                     	;# 
  3174  1F1D                     	;# 
  3175  1F1E                     	;# 
  3176  1F1F                     	;# 
  3177  1F20                     	;# 
  3178  1F21                     	;# 
  3179  1F22                     	;# 
  3180  1F23                     	;# 
  3181  1F24                     	;# 
  3182  1F25                     	;# 
  3183  1F26                     	;# 
  3184  1F27                     	;# 
  3185  1F38                     	;# 
  3186  1F39                     	;# 
  3187  1F3A                     	;# 
  3188  1F3B                     	;# 
  3189  1F3C                     	;# 
  3190  1F3D                     	;# 
  3191  1F3E                     	;# 
  3192  1F3F                     	;# 
  3193  1F43                     	;# 
  3194  1F44                     	;# 
  3195  1F45                     	;# 
  3196  1F46                     	;# 
  3197  1F47                     	;# 
  3198  1F48                     	;# 
  3199  1F49                     	;# 
  3200  1F4A                     	;# 
  3201  1F4E                     	;# 
  3202  1F4F                     	;# 
  3203  1F50                     	;# 
  3204  1F51                     	;# 
  3205  1F52                     	;# 
  3206  1F53                     	;# 
  3207  1F54                     	;# 
  3208  1F55                     	;# 
  3209  1F65                     	;# 
  3210  1F68                     	;# 
  3211  1F69                     	;# 
  3212  1F6A                     	;# 
  3213  1F6B                     	;# 
  3214  1FE4                     	;# 
  3215  1FE5                     	;# 
  3216  1FE6                     	;# 
  3217  1FE7                     	;# 
  3218  1FE8                     	;# 
  3219  1FE8                     	;# 
  3220  1FE9                     	;# 
  3221  1FEA                     	;# 
  3222  1FEA                     	;# 
  3223  1FEB                     	;# 
  3224  1FED                     	;# 
  3225  1FEE                     	;# 
  3226  1FEF                     	;# 
  3227                           
  3228                           	psect	idataBANK0
  3229  07FE                     __pidataBANK0:	
  3230                           
  3231                           ;initializer for _gu8DoorState
  3232  07FE  3401               	retlw	1
  3233                           
  3234                           	psect	idataBANK1
  3235  07FF                     __pidataBANK1:	
  3236                           
  3237                           ;initializer for _gu8OldDoorState
  3238  07FF  3403               	retlw	3
  3239                           
  3240                           	psect	nvBANK0
  3241  006C                     __pnvBANK0:	
  3242  006C                     _eusartTxBufferRemaining:	
  3243  006C                     	ds	1
  3244  000E                     _PORTCbits	set	14
  3245  000C                     _PORTA	set	12
  3246  000B                     _INTCONbits	set	11
  3247  000D                     _PORTBbits	set	13
  3248  000E                     _PORTC	set	14
  3249  0014                     _TRISC	set	20
  3250  0013                     _TRISB	set	19
  3251  0012                     _TRISA	set	18
  3252  001A                     _LATC	set	26
  3253  0019                     _LATB	set	25
  3254  0018                     _LATA	set	24
  3255  009D                     _ADCON0bits	set	157
  3256  009C                     _ADRESH	set	156
  3257  009B                     _ADRESL	set	155
  3258  009F                     _ADACT	set	159
  3259  009E                     _ADCON1	set	158
  3260  009D                     _ADCON0	set	157
  3261  0119                     _RC1REG	set	281
  3262  011D                     _RC1STAbits	set	285
  3263  011A                     _TX1REG	set	282
  3264  011C                     _SP1BRGH	set	284
  3265  011B                     _SP1BRGL	set	283
  3266  011E                     _TX1STA	set	286
  3267  011D                     _RC1STA	set	285
  3268  011F                     _BAUD1CON	set	287
  3269  059E                     _T0CON0bits	set	1438
  3270  059E                     _T0CON0	set	1438
  3271  059C                     _TMR0L	set	1436
  3272  059D                     _TMR0H	set	1437
  3273  059F                     _T0CON1	set	1439
  3274  070C                     _PIR0bits	set	1804
  3275  070F                     _PIR3bits	set	1807
  3276  0719                     _PIE3bits	set	1817
  3277  0716                     _PIE0bits	set	1814
  3278  079B                     _PMD5	set	1947
  3279  079A                     _PMD4	set	1946
  3280  0799                     _PMD3	set	1945
  3281  0798                     _PMD2	set	1944
  3282  0797                     _PMD1	set	1943
  3283  0796                     _PMD0	set	1942
  3284  0892                     _OSCTUNE	set	2194
  3285  0890                     _OSCSTAT	set	2192
  3286  0893                     _OSCFRQ	set	2195
  3287  0891                     _OSCEN	set	2193
  3288  088F                     _OSCCON3	set	2191
  3289  088D                     _OSCCON1	set	2189
  3290  090C                     _FVRCON	set	2316
  3291  1ECB                     _RX1DTPPSbits	set	7883
  3292  1F55                     _IOCCFbits	set	8021
  3293  1F4A                     _IOCBFbits	set	8010
  3294  1F54                     _IOCCNbits	set	8020
  3295  1F49                     _IOCBNbits	set	8009
  3296  1F26                     _RC6PPS	set	7974
  3297  1F50                     _ODCONC	set	8016
  3298  1F45                     _ODCONB	set	8005
  3299  1F3A                     _ODCONA	set	7994
  3300  1F4F                     _WPUC	set	8015
  3301  1F39                     _WPUA	set	7993
  3302  1F44                     _WPUB	set	8004
  3303  1F65                     _WPUE	set	8037
  3304  1F4E                     _ANSELC	set	8014
  3305  1F43                     _ANSELB	set	8003
  3306  1F38                     _ANSELA	set	7992
  3307                           
  3308                           ; #config settings
  3309  0000                     
  3310                           	psect	cinit
  3311  003E                     start_initialization:	
  3312  003E                     __initialization:	
  3313                           
  3314                           ; Initialize objects allocated to BANK0
  3315  003E  3187  27FE  3180   	fcall	__pidataBANK0	;fetch initializer
  3316  0041  00ED               	movwf	__pdataBANK0& (0+127)
  3317                           
  3318                           ; Initialize objects allocated to BANK1
  3319  0042  0141               	movlb	1	; select bank1
  3320  0043  3187  27FF  3180   	fcall	__pidataBANK1	;fetch initializer
  3321  0046  00E4               	movwf	__pdataBANK1& (0+127)
  3322                           
  3323                           ; Clear objects allocated to BANK0
  3324  0047  3056               	movlw	low __pbssBANK0
  3325  0048  0084               	movwf	4
  3326  0049  3000               	movlw	high __pbssBANK0
  3327  004A  0085               	movwf	5
  3328  004B  3016               	movlw	22
  3329  004C  318C  242B  3180   	fcall	clear_ram0
  3330                           
  3331                           ; Clear objects allocated to BANK1
  3332  004F  30A0               	movlw	low __pbssBANK1
  3333  0050  0084               	movwf	4
  3334  0051  3000               	movlw	high __pbssBANK1
  3335  0052  0085               	movwf	5
  3336  0053  3026               	movlw	38
  3337  0054  318C  242B         	fcall	clear_ram0
  3338  0056                     end_of_initialization:	
  3339                           ;End of C runtime variable initialization code
  3340                           
  3341  0056                     __end_of__initialization:	
  3342  0056  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3343  0057  0140               	movlb	0
  3344  0058  3182  2A2E         	ljmp	_main	;jump to C main() function
  3345                           
  3346                           	psect	bssBANK0
  3347  0056                     __pbssBANK0:	
  3348  0056                     _sum_:	
  3349  0056                     	ds	4
  3350  005A                     _sum:	
  3351  005A                     	ds	4
  3352  005E                     _Angle_t:	
  3353  005E                     	ds	3
  3354  0061                     _Frist_gyro:	
  3355  0061                     	ds	2
  3356  0063                     _New_gyro:	
  3357  0063                     	ds	2
  3358  0065                     _Sam_cnt:	
  3359  0065                     	ds	1
  3360  0066                     _gu8OperationState:	
  3361  0066                     	ds	1
  3362  0067                     _eusartRxCount:	
  3363  0067                     	ds	1
  3364  0068                     _eusartRxTail:	
  3365  0068                     	ds	1
  3366  0069                     _eusartRxHead:	
  3367  0069                     	ds	1
  3368  006A                     _eusartTxTail:	
  3369  006A                     	ds	1
  3370  006B                     _eusartTxHead:	
  3371  006B                     	ds	1
  3372                           
  3373                           	psect	dataBANK0
  3374  006D                     __pdataBANK0:	
  3375  006D                     _gu8DoorState:	
  3376  006D                     	ds	1
  3377                           
  3378                           	psect	bssBANK1
  3379  00A0                     __pbssBANK1:	
  3380  00A0                     _eusartRxBuffer:	
  3381  00A0                     	ds	8
  3382  00A8                     _eusartTxBuffer:	
  3383  00A8                     	ds	8
  3384  00B0                     _result_gyro:	
  3385  00B0                     	ds	3
  3386  00B3                     _TMR0_InterruptHandler:	
  3387  00B3                     	ds	2
  3388  00B5                     _gu16OpenTimCnt:	
  3389  00B5                     	ds	2
  3390  00B7                     _G_Offset_X:	
  3391  00B7                     	ds	2
  3392  00B9                     _Old_gyro:	
  3393  00B9                     	ds	2
  3394  00BB                     _gu16RstTimCnt:	
  3395  00BB                     	ds	2
  3396  00BD                     _gu8ClosedCnt:	
  3397  00BD                     	ds	1
  3398  00BE                     _gu8DoorClosed:	
  3399  00BE                     	ds	1
  3400  00BF                     _gu8DoorOpened:	
  3401  00BF                     	ds	1
  3402  00C0                     _filter_result:	
  3403  00C0                     	ds	6
  3404                           
  3405                           	psect	dataBANK1
  3406  00E4                     __pdataBANK1:	
  3407  00E4                     _gu8OldDoorState:	
  3408  00E4                     	ds	1
  3409                           
  3410                           	psect	clrtext
  3411  0C2B                     clear_ram0:	
  3412                           ;	Called with FSR0 containing the base address, and
  3413                           ;	WREG with the size to clear
  3414                           
  3415  0C2B  0064               	clrwdt	;clear the watchdog before getting into this loop
  3416  0C2C                     clrloop0:	
  3417  0C2C  0180               	clrf	0	;clear RAM location pointed to by FSR
  3418  0C2D  3101               	addfsr 0,1
  3419  0C2E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3420  0C2F  2C2C               	goto	clrloop0	;have we reached the end yet?
  3421  0C30  3400               	retlw	0	;all done for this memory range, return
  3422                           
  3423                           	psect	cstackBANK1
  3424  00C6                     __pcstackBANK1:	
  3425  00C6                     ?___ftge:	
  3426  00C6                     ??_PMD_Initialize:	
  3427                           ; 1 bit 
  3428                           
  3429  00C6                     ??_PIN_MANAGER_Initialize:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  00C6                     ??_OSCILLATOR_Initialize:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  00C6                     ??_EUSART_Initialize:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  00C6                     ??_TMR0_Initialize:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  00C6                     ??_Interrupt_Enable:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444  00C6                     ??_TMR0_StartTimer:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447  00C6                     ??_ReadRstPIN:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450  00C6                     ??_ReadTouchKeyPIN:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453  00C6                     ??_EUSART_Enable_WakeUp:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456  00C6                     ??_EUSART_Write:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459  00C6                     ??_Com_Lock_IIC_Start:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  00C6                     ??_Com_Lock_IIC_Stop:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  00C6                     ??_Com_Lock_IIC_Write_Data:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  00C6                     ??_Com_Lock_IIC_Read_Data:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  00C6                     ??_ClearAngle:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  00C6                     ??_TMR0_StopTimer:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  00C6                     ?___aldiv:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  00C6                     ___ftge@ff1:	
  3481                           ; 4 bytes @ 0x0
  3482                           
  3483  00C6                     ___aldiv@divisor:	
  3484                           ; 3 bytes @ 0x0
  3485                           
  3486                           
  3487                           ; 4 bytes @ 0x0
  3488  00C6                     	ds	1
  3489  00C7                     EUSART_Write@txData:	
  3490  00C7                     Com_Lock_IIC_Write_Data@dat:	
  3491                           ; 1 bytes @ 0x1
  3492                           
  3493  00C7                     Com_Lock_IIC_Read_Data@ack:	
  3494                           ; 1 bytes @ 0x1
  3495                           
  3496                           
  3497                           ; 1 bytes @ 0x1
  3498  00C7                     	ds	1
  3499  00C8                     Com_Lock_IIC_Write_Data@retVal:	
  3500  00C8                     Com_Lock_IIC_Read_Data@retVal:	
  3501                           ; 1 bytes @ 0x2
  3502                           
  3503                           
  3504                           ; 1 bytes @ 0x2
  3505  00C8                     	ds	1
  3506  00C9                     Com_Lock_IIC_Write_Data@i:	
  3507  00C9                     Com_Lock_IIC_Read_Data@i:	
  3508                           ; 2 bytes @ 0x3
  3509                           
  3510  00C9                     ___ftge@ff2:	
  3511                           ; 2 bytes @ 0x3
  3512                           
  3513                           
  3514                           ; 3 bytes @ 0x3
  3515  00C9                     	ds	1
  3516  00CA                     ___aldiv@dividend:	
  3517                           
  3518                           ; 4 bytes @ 0x4
  3519  00CA                     	ds	1
  3520  00CB                     ?_Com_Lock_MPU_Write_Command:	
  3521  00CB                     ??_Com_Lock_MPU_RD_Reg:	
  3522                           ; 1 bytes @ 0x5
  3523                           
  3524  00CB                     Com_Lock_MPU_Write_Command@data:	
  3525                           ; 1 bytes @ 0x5
  3526                           
  3527                           
  3528                           ; 1 bytes @ 0x5
  3529  00CB                     	ds	1
  3530  00CC                     ??_Com_Lock_MPU_Write_Command:	
  3531  00CC                     ??___ftge:	
  3532                           ; 1 bytes @ 0x6
  3533                           
  3534  00CC                     Com_Lock_MPU_Write_Command@reg:	
  3535                           ; 1 bytes @ 0x6
  3536                           
  3537  00CC                     Com_Lock_MPU_RD_Reg@addr:	
  3538                           ; 1 bytes @ 0x6
  3539                           
  3540                           
  3541                           ; 1 bytes @ 0x6
  3542  00CC                     	ds	1
  3543  00CD                     Com_Lock_MPU_RD_Reg@temp:	
  3544                           
  3545                           ; 1 bytes @ 0x7
  3546  00CD                     	ds	1
  3547  00CE                     ??___aldiv:	
  3548  00CE                     ?_Get6500Data:	
  3549                           ; 1 bytes @ 0x8
  3550                           
  3551                           
  3552                           ; 2 bytes @ 0x8
  3553  00CE                     	ds	1
  3554  00CF                     ??_CheckDoorOpened:	
  3555  00CF                     ??_CheckDoorClosed:	
  3556                           ; 1 bytes @ 0x9
  3557                           
  3558  00CF                     ___aldiv@counter:	
  3559                           ; 1 bytes @ 0x9
  3560                           
  3561                           
  3562                           ; 1 bytes @ 0x9
  3563  00CF                     	ds	1
  3564  00D0                     ??_Get6500Data:	
  3565  00D0                     ___aldiv@sign:	
  3566                           ; 1 bytes @ 0xA
  3567                           
  3568                           
  3569                           ; 1 bytes @ 0xA
  3570  00D0                     	ds	1
  3571  00D1                     ___aldiv@quotient:	
  3572                           
  3573                           ; 4 bytes @ 0xB
  3574  00D1                     	ds	4
  3575  00D5                     Get6500Data@H:	
  3576                           
  3577                           ; 1 bytes @ 0xF
  3578  00D5                     	ds	1
  3579  00D6                     Get6500Data@L:	
  3580                           
  3581                           ; 1 bytes @ 0x10
  3582  00D6                     	ds	1
  3583  00D7                     Get6500Data@REG_Address:	
  3584                           
  3585                           ; 1 bytes @ 0x11
  3586  00D7                     	ds	1
  3587  00D8                     ??_Read_Offset:	
  3588                           
  3589                           ; 1 bytes @ 0x12
  3590  00D8                     	ds	4
  3591  00DC                     Read_Offset@G_Temp_X:	
  3592                           
  3593                           ; 4 bytes @ 0x16
  3594  00DC                     	ds	4
  3595  00E0                     Read_Offset@cnt:	
  3596                           
  3597                           ; 1 bytes @ 0x1A
  3598  00E0                     	ds	1
  3599  00E1                     ??_Init_MPU6500:	
  3600                           
  3601                           ; 1 bytes @ 0x1B
  3602  00E1                     	ds	2
  3603  00E3                     ??_SYSTEM_Initialize:	
  3604  00E3                     ??_main:	
  3605                           ; 1 bytes @ 0x1D
  3606                           
  3607                           
  3608                           ; 1 bytes @ 0x1D
  3609  00E3                     	ds	1
  3610                           
  3611                           	psect	cstackCOMMON
  3612  0070                     __pcstackCOMMON:	
  3613  0070                     ?i1___ftge:	
  3614  0070                     ?_PMD_Initialize:	
  3615                           ; 1 bit 
  3616                           
  3617  0070                     ?_PIN_MANAGER_Initialize:	
  3618                           ; 1 bytes @ 0x0
  3619                           
  3620  0070                     ?_OSCILLATOR_Initialize:	
  3621                           ; 1 bytes @ 0x0
  3622                           
  3623  0070                     ?_EUSART_Initialize:	
  3624                           ; 1 bytes @ 0x0
  3625                           
  3626  0070                     ?_Init_MPU6500:	
  3627                           ; 1 bytes @ 0x0
  3628                           
  3629  0070                     ?_TMR0_Initialize:	
  3630                           ; 1 bytes @ 0x0
  3631                           
  3632  0070                     ?_Interrupt_Enable:	
  3633                           ; 1 bytes @ 0x0
  3634                           
  3635  0070                     ?_TMR0_ISR:	
  3636                           ; 1 bytes @ 0x0
  3637                           
  3638  0070                     ?_TMR0_StartTimer:	
  3639                           ; 1 bytes @ 0x0
  3640                           
  3641  0070                     ?_TMR0_Task:	
  3642                           ; 1 bytes @ 0x0
  3643                           
  3644  0070                     ?_SYSTEM_Initialize:	
  3645                           ; 1 bytes @ 0x0
  3646                           
  3647  0070                     ?_ReadRstPIN:	
  3648                           ; 1 bytes @ 0x0
  3649                           
  3650  0070                     ?_ReadTouchKeyPIN:	
  3651                           ; 1 bytes @ 0x0
  3652                           
  3653  0070                     ?_EUSART_Enable_WakeUp:	
  3654                           ; 1 bytes @ 0x0
  3655                           
  3656  0070                     ?_EUSART_Write:	
  3657                           ; 1 bytes @ 0x0
  3658                           
  3659  0070                     ?_EUSART_Transmit_ISR:	
  3660                           ; 1 bytes @ 0x0
  3661                           
  3662  0070                     ??_EUSART_Transmit_ISR:	
  3663                           ; 1 bytes @ 0x0
  3664                           
  3665  0070                     ?_EUSART_Receive_ISR:	
  3666                           ; 1 bytes @ 0x0
  3667                           
  3668  0070                     ??_EUSART_Receive_ISR:	
  3669                           ; 1 bytes @ 0x0
  3670                           
  3671  0070                     ?_INTERRUPT_InterruptManager:	
  3672                           ; 1 bytes @ 0x0
  3673                           
  3674  0070                     ?_Com_Lock_IIC_Start:	
  3675                           ; 1 bytes @ 0x0
  3676                           
  3677  0070                     ?_Com_Lock_IIC_Stop:	
  3678                           ; 1 bytes @ 0x0
  3679                           
  3680  0070                     ?_Com_Lock_IIC_Write_Data:	
  3681                           ; 1 bytes @ 0x0
  3682                           
  3683  0070                     ?_Com_Lock_IIC_Read_Data:	
  3684                           ; 1 bytes @ 0x0
  3685                           
  3686  0070                     ?_Com_Lock_MPU_RD_Reg:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_Read_Offset:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_ClearAngle:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_CheckDoorOpened:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ?_CheckDoorClosed:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ?_TMR0_StopTimer:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ?_main:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ?i1_EUSART_Write:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ??i1_EUSART_Write:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?i1_Com_Lock_IIC_Start:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ??i1_Com_Lock_IIC_Start:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ?i1_Com_Lock_IIC_Stop:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ??i1_Com_Lock_IIC_Stop:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     ?i1_Com_Lock_IIC_Write_Data:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728  0070                     ??i1_Com_Lock_IIC_Write_Data:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731  0070                     ?i1_Com_Lock_IIC_Read_Data:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734  0070                     ??i1_Com_Lock_IIC_Read_Data:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737  0070                     ?i1_Com_Lock_MPU_RD_Reg:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0070                     ?i1_TMR0_StartTimer:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0070                     ??i1_TMR0_StartTimer:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746  0070                     ?_abs:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749  0070                     ?___ftpack:	
  3750                           ; 2 bytes @ 0x0
  3751                           
  3752  0070                     ?___fttol:	
  3753                           ; 3 bytes @ 0x0
  3754                           
  3755  0070                     abs@a:	
  3756                           ; 4 bytes @ 0x0
  3757                           
  3758  0070                     ___ftpack@arg:	
  3759                           ; 2 bytes @ 0x0
  3760                           
  3761  0070                     ___fttol@f1:	
  3762                           ; 3 bytes @ 0x0
  3763                           
  3764  0070                     i1___ftge@ff1:	
  3765                           ; 3 bytes @ 0x0
  3766                           
  3767                           
  3768                           ; 3 bytes @ 0x0
  3769  0070                     	ds	1
  3770  0071                     EUSART_Receive_ISR@dumread:	
  3771  0071                     i1EUSART_Write@txData:	
  3772                           ; 1 bytes @ 0x1
  3773                           
  3774  0071                     i1Com_Lock_IIC_Write_Data@dat:	
  3775                           ; 1 bytes @ 0x1
  3776                           
  3777  0071                     i1Com_Lock_IIC_Read_Data@ack:	
  3778                           ; 1 bytes @ 0x1
  3779                           
  3780                           
  3781                           ; 1 bytes @ 0x1
  3782  0071                     	ds	1
  3783  0072                     ??_abs:	
  3784  0072                     i1Com_Lock_IIC_Write_Data@retVal:	
  3785                           ; 1 bytes @ 0x2
  3786                           
  3787  0072                     i1Com_Lock_IIC_Read_Data@retVal:	
  3788                           ; 1 bytes @ 0x2
  3789                           
  3790                           
  3791                           ; 1 bytes @ 0x2
  3792  0072                     	ds	1
  3793  0073                     ___ftpack@exp:	
  3794  0073                     i1Com_Lock_IIC_Write_Data@i:	
  3795                           ; 1 bytes @ 0x3
  3796                           
  3797  0073                     i1Com_Lock_IIC_Read_Data@i:	
  3798                           ; 2 bytes @ 0x3
  3799                           
  3800  0073                     i1___ftge@ff2:	
  3801                           ; 2 bytes @ 0x3
  3802                           
  3803                           
  3804                           ; 3 bytes @ 0x3
  3805  0073                     	ds	1
  3806  0074                     ??___fttol:	
  3807  0074                     ___ftpack@sign:	
  3808                           ; 1 bytes @ 0x4
  3809                           
  3810                           
  3811                           ; 1 bytes @ 0x4
  3812  0074                     	ds	1
  3813  0075                     ??___ftpack:	
  3814  0075                     ??i1_Com_Lock_MPU_RD_Reg:	
  3815                           ; 1 bytes @ 0x5
  3816                           
  3817                           
  3818                           ; 1 bytes @ 0x5
  3819  0075                     	ds	1
  3820  0076                     ??i1___ftge:	
  3821  0076                     i1Com_Lock_MPU_RD_Reg@addr:	
  3822                           ; 1 bytes @ 0x6
  3823                           
  3824                           
  3825                           ; 1 bytes @ 0x6
  3826  0076                     	ds	1
  3827  0077                     i1Com_Lock_MPU_RD_Reg@temp:	
  3828                           
  3829                           ; 1 bytes @ 0x7
  3830  0077                     	ds	1
  3831  0078                     ?i1_Get6500Data:	
  3832  0078                     ?___awtoft:	
  3833                           ; 2 bytes @ 0x8
  3834                           
  3835  0078                     ?___ftmul:	
  3836                           ; 3 bytes @ 0x8
  3837                           
  3838  0078                     ___fttol@sign1:	
  3839                           ; 3 bytes @ 0x8
  3840                           
  3841  0078                     ___awtoft@c:	
  3842                           ; 1 bytes @ 0x8
  3843                           
  3844  0078                     ___ftmul@f1:	
  3845                           ; 2 bytes @ 0x8
  3846                           
  3847                           
  3848                           ; 3 bytes @ 0x8
  3849  0078                     	ds	1
  3850  0079                     ___fttol@lval:	
  3851                           
  3852                           ; 4 bytes @ 0x9
  3853  0079                     	ds	1
  3854  007A                     i1Get6500Data@H:	
  3855                           
  3856                           ; 1 bytes @ 0xA
  3857  007A                     	ds	1
  3858  007B                     ??___awtoft:	
  3859  007B                     i1Get6500Data@L:	
  3860                           ; 1 bytes @ 0xB
  3861                           
  3862  007B                     ___ftmul@f2:	
  3863                           ; 1 bytes @ 0xB
  3864                           
  3865                           
  3866                           ; 3 bytes @ 0xB
  3867  007B                     	ds	1
  3868  007C                     i1Get6500Data@REG_Address:	
  3869                           
  3870                           ; 1 bytes @ 0xC
  3871  007C                     	ds	1
  3872  007D                     ___awtoft@sign:	
  3873  007D                     ___fttol@exp1:	
  3874                           ; 1 bytes @ 0xD
  3875                           
  3876                           
  3877                           ; 1 bytes @ 0xD
  3878  007D                     	ds	1
  3879  007E                     ??_TMR0_ISR:	
  3880  007E                     ??_INTERRUPT_InterruptManager:	
  3881                           ; 1 bytes @ 0xE
  3882                           
  3883  007E                     ??_AngleCalcu:	
  3884                           ; 1 bytes @ 0xE
  3885                           
  3886  007E                     ??___ftneg:	
  3887                           ; 1 bytes @ 0xE
  3888                           
  3889                           
  3890                           	psect	cstackBANK0
  3891  0020                     __pcstackBANK0:	
  3892                           ; 1 bytes @ 0xE
  3893                           
  3894  0020                     ??___ftmul:	
  3895  0020                     ??i1_Get6500Data:	
  3896                           ; 1 bytes @ 0x0
  3897                           
  3898  0020                     ?___ftneg:	
  3899                           ; 1 bytes @ 0x0
  3900                           
  3901  0020                     ___ftneg@f1:	
  3902                           ; 3 bytes @ 0x0
  3903                           
  3904                           
  3905                           ; 3 bytes @ 0x0
  3906  0020                     	ds	4
  3907  0024                     ___ftmul@exp:	
  3908                           
  3909                           ; 1 bytes @ 0x4
  3910  0024                     	ds	1
  3911  0025                     ___ftmul@f3_as_product:	
  3912                           
  3913                           ; 3 bytes @ 0x5
  3914  0025                     	ds	3
  3915  0028                     ___ftmul@cntr:	
  3916                           
  3917                           ; 1 bytes @ 0x8
  3918  0028                     	ds	1
  3919  0029                     ___ftmul@sign:	
  3920                           
  3921                           ; 1 bytes @ 0x9
  3922  0029                     	ds	1
  3923  002A                     ?___ftadd:	
  3924  002A                     ___ftadd@f1:	
  3925                           ; 3 bytes @ 0xA
  3926                           
  3927                           
  3928                           ; 3 bytes @ 0xA
  3929  002A                     	ds	3
  3930  002D                     ___ftadd@f2:	
  3931                           
  3932                           ; 3 bytes @ 0xD
  3933  002D                     	ds	3
  3934  0030                     ??___ftadd:	
  3935                           
  3936                           ; 1 bytes @ 0x10
  3937  0030                     	ds	4
  3938  0034                     ___ftadd@sign:	
  3939                           
  3940                           ; 1 bytes @ 0x14
  3941  0034                     	ds	1
  3942  0035                     ___ftadd@exp2:	
  3943                           
  3944                           ; 1 bytes @ 0x15
  3945  0035                     	ds	1
  3946  0036                     ___ftadd@exp1:	
  3947                           
  3948                           ; 1 bytes @ 0x16
  3949  0036                     	ds	1
  3950  0037                     ?_AngleCalcu:	
  3951  0037                     ?___ftdiv:	
  3952                           ; 1 bytes @ 0x17
  3953                           
  3954  0037                     AngleCalcu@angle_m:	
  3955                           ; 3 bytes @ 0x17
  3956                           
  3957  0037                     ___ftdiv@f2:	
  3958                           ; 3 bytes @ 0x17
  3959                           
  3960                           
  3961                           ; 3 bytes @ 0x17
  3962  0037                     	ds	3
  3963  003A                     AngleCalcu@gyro_m:	
  3964  003A                     ___ftdiv@f1:	
  3965                           ; 3 bytes @ 0x1A
  3966                           
  3967                           
  3968                           ; 3 bytes @ 0x1A
  3969  003A                     	ds	3
  3970  003D                     ??___ftdiv:	
  3971  003D                     AngleCalcu@p:	
  3972                           ; 1 bytes @ 0x1D
  3973                           
  3974                           
  3975                           ; 1 bytes @ 0x1D
  3976  003D                     	ds	4
  3977  0041                     ___ftdiv@cntr:	
  3978                           
  3979                           ; 1 bytes @ 0x21
  3980  0041                     	ds	1
  3981  0042                     ___ftdiv@f3:	
  3982                           
  3983                           ; 3 bytes @ 0x22
  3984  0042                     	ds	3
  3985  0045                     ___ftdiv@exp:	
  3986                           
  3987                           ; 1 bytes @ 0x25
  3988  0045                     	ds	1
  3989  0046                     ___ftdiv@sign:	
  3990                           
  3991                           ; 1 bytes @ 0x26
  3992  0046                     	ds	1
  3993  0047                     ?_Mpu6500GyroAngle:	
  3994                           
  3995                           ; 3 bytes @ 0x27
  3996  0047                     	ds	3
  3997  004A                     ??_Mpu6500GyroAngle:	
  3998                           
  3999                           ; 1 bytes @ 0x2A
  4000  004A                     	ds	3
  4001  004D                     Mpu6500GyroAngle@dir:	
  4002                           
  4003                           ; 1 bytes @ 0x2D
  4004  004D                     	ds	1
  4005  004E                     Mpu6500GyroAngle@gyro_angle:	
  4006                           
  4007                           ; 3 bytes @ 0x2E
  4008  004E                     	ds	3
  4009  0051                     ??_TMR0_Task:	
  4010                           
  4011                           ; 1 bytes @ 0x31
  4012  0051                     	ds	5
  4013                           
  4014                           	psect	maintext
  4015  022E                     __pmaintext:	
  4016 ;;
  4017 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4018 ;;
  4019 ;; *************** function _main *****************
  4020 ;; Defined at:
  4021 ;;		line 64 in file "main.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : B3F/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4035 ;;      Params:         0       0       0       0       0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0       0       0       0
  4037 ;;      Temps:          0       0       1       0       0       0       0       0
  4038 ;;      Totals:         0       0       1       0       0       0       0       0
  4039 ;;Total ram usage:        1 bytes
  4040 ;; Hardware stack levels required when called:   13
  4041 ;; This function calls:
  4042 ;;		_CheckDoorClosed
  4043 ;;		_CheckDoorOpened
  4044 ;;		_ClearAngle
  4045 ;;		_EUSART_Enable_WakeUp
  4046 ;;		_EUSART_Write
  4047 ;;		_ReadRstPIN
  4048 ;;		_ReadTouchKeyPIN
  4049 ;;		_SYSTEM_Initialize
  4050 ;;		_TMR0_StartTimer
  4051 ;;		_TMR0_StopTimer
  4052 ;; This function is called by:
  4053 ;;		Startup code after reset
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           
  4058                           ;psect for function _main
  4059  022E                     _main:	
  4060                           
  4061                           ;main.c: 68: SYSTEM_Initialize();
  4062                           
  4063                           ;incstack = 0
  4064                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4065  022E  318C  24BE  3182   	fcall	_SYSTEM_Initialize
  4066                           
  4067                           ;main.c: 71: {;main.c: 72: switch(gu8DoorState)
  4068                           
  4069                           ;main.c: 70: while (1)
  4070  0231  2AEC               	goto	l3029
  4071  0232                     l2941:	
  4072                           ;main.c: 73: {;main.c: 74: case 1:
  4073                           
  4074                           
  4075                           ;main.c: 76: if(gu8OperationState == 0x00)
  4076  0232  0140               	movlb	0	; select bank0
  4077  0233  0866               	movf	_gu8OperationState,w
  4078  0234  1D03               	btfss	3,2
  4079  0235  2A45               	goto	l2949
  4080                           
  4081                           ;main.c: 77: {;main.c: 78: EUSART_Write(0x22);
  4082  0236  3022               	movlw	34
  4083  0237  318E  260B  3182   	fcall	_EUSART_Write
  4084                           
  4085                           ;main.c: 79: EUSART_Write(0x33);
  4086  023A  3033               	movlw	51
  4087  023B  318E  260B  3182   	fcall	_EUSART_Write
  4088                           
  4089                           ;main.c: 80: TMR0_StopTimer();
  4090  023E  318C  2428  3182   	fcall	_TMR0_StopTimer
  4091                           
  4092                           ;main.c: 81: EUSART_Enable_WakeUp();
  4093  0241  318C  241F  3182   	fcall	_EUSART_Enable_WakeUp
  4094  0244  0063               	sleep	;# 
  4095  0245                     l2949:	
  4096                           
  4097                           ;main.c: 83: };main.c: 84: gu8OldDoorState = 1;
  4098  0245  0141               	movlb	1	; select bank1
  4099  0246  01E4               	clrf	_gu8OldDoorState^(0+128)
  4100  0247  0AE4               	incf	_gu8OldDoorState^(0+128),f
  4101                           
  4102                           ;main.c: 85: gu8DoorState = 2;
  4103  0248  3002               	movlw	2
  4104  0249  00E3               	movwf	??_main^(0+128)
  4105  024A  0863               	movf	??_main^(0+128),w
  4106  024B  0140               	movlb	0	; select bank0
  4107  024C  00ED               	movwf	_gu8DoorState
  4108                           
  4109                           ;main.c: 86: break;
  4110  024D  2AEC               	goto	l3029
  4111  024E                     l2953:	
  4112                           ;main.c: 87: case 0:
  4113                           
  4114                           
  4115                           ;main.c: 88: if(CheckDoorOpened())
  4116  024E  318E  2695  3182   	fcall	_CheckDoorOpened
  4117  0251  3A00               	xorlw	0
  4118  0252  1903               	skipnz
  4119  0253  2A67               	goto	l2965
  4120                           
  4121                           ;main.c: 89: {;main.c: 90: if(CheckDoorClosed())
  4122  0254  318F  27BF  3182   	fcall	_CheckDoorClosed
  4123  0257  3A00               	xorlw	0
  4124  0258  1903               	skipnz
  4125  0259  2A67               	goto	l2965
  4126                           
  4127                           ;main.c: 91: {;main.c: 93: EUSART_Write(0x22);
  4128  025A  3022               	movlw	34
  4129  025B  318E  260B  3182   	fcall	_EUSART_Write
  4130                           
  4131                           ;main.c: 94: EUSART_Write(0x77);
  4132  025E  3077               	movlw	119
  4133  025F  318E  260B  3182   	fcall	_EUSART_Write
  4134                           
  4135                           ;main.c: 95: gu16OpenTimCnt = 0;
  4136  0262  0141               	movlb	1	; select bank1
  4137  0263  01B5               	clrf	_gu16OpenTimCnt^(0+128)
  4138  0264  01B6               	clrf	(_gu16OpenTimCnt+1)^(0+128)
  4139                           
  4140                           ;main.c: 96: gu8OldDoorState = 0;
  4141  0265  01E4               	clrf	_gu8OldDoorState^(0+128)
  4142  0266  2AE9               	goto	l3025
  4143  0267                     l2965:	
  4144                           ;main.c: 98: break;
  4145                           
  4146                           ;main.c: 97: gu8DoorState = 1;
  4147                           
  4148                           
  4149                           ;main.c: 99: };main.c: 100: };main.c: 101: if(gu16OpenTimCnt >= 18000)
  4150  0267  3046               	movlw	70
  4151  0268  0141               	movlb	1	; select bank1
  4152  0269  0236               	subwf	(_gu16OpenTimCnt+1)^(0+128),w
  4153  026A  3050               	movlw	80
  4154  026B  1903               	skipnz
  4155  026C  0235               	subwf	_gu16OpenTimCnt^(0+128),w
  4156  026D  1C03               	skipc
  4157  026E  2A7A               	goto	l2971
  4158                           
  4159                           ;main.c: 102: {;main.c: 104: EUSART_Write(0x22);
  4160  026F  3022               	movlw	34
  4161  0270  318E  260B  3182   	fcall	_EUSART_Write
  4162                           
  4163                           ;main.c: 105: EUSART_Write(0x44);
  4164  0273  3044               	movlw	68
  4165  0274  318E  260B  3182   	fcall	_EUSART_Write
  4166                           
  4167                           ;main.c: 106: gu16OpenTimCnt = 0;
  4168  0277  0141               	movlb	1	; select bank1
  4169  0278  01B5               	clrf	_gu16OpenTimCnt^(0+128)
  4170  0279  01B6               	clrf	(_gu16OpenTimCnt+1)^(0+128)
  4171  027A                     l2971:	
  4172                           ;main.c: 107: };main.c: 109: case 2:
  4173                           
  4174                           
  4175                           ;main.c: 110: if(gu8OperationState&0x04)
  4176  027A  0140               	movlb	0	; select bank0
  4177  027B  1D66               	btfss	_gu8OperationState,2
  4178  027C  2A9C               	goto	l2987
  4179                           
  4180                           ;main.c: 111: {;main.c: 112: if(ReadRstPIN())
  4181  027D  318C  2431  3182   	fcall	_ReadRstPIN
  4182  0280  3A00               	xorlw	0
  4183  0281  1D03               	btfss	3,2
  4184  0282  2A93               	goto	L1
  4185                           
  4186                           ;main.c: 117: else;main.c: 118: {;main.c: 119: if(gu16RstTimCnt >= 300)
  4187                           
  4188                           ;main.c: 116: }
  4189                           
  4190                           ;main.c: 115: gu16RstTimCnt = 0;
  4191                           
  4192                           ;main.c: 113: {;main.c: 114: gu8OperationState &=~0x04;
  4193  0283  3001               	movlw	1
  4194  0284  0141               	movlb	1	; select bank1
  4195  0285  023C               	subwf	(_gu16RstTimCnt+1)^(0+128),w
  4196  0286  302C               	movlw	44
  4197  0287  1903               	skipnz
  4198  0288  023B               	subwf	_gu16RstTimCnt^(0+128),w
  4199  0289  1C03               	skipc
  4200  028A  2A9C               	goto	l2987
  4201                           
  4202                           ;main.c: 120: {;main.c: 122: EUSART_Write(0x22);
  4203  028B  3022               	movlw	34
  4204  028C  318E  260B  3182   	fcall	_EUSART_Write
  4205                           
  4206                           ;main.c: 123: EUSART_Write(0x88);
  4207  028F  3088               	movlw	136
  4208  0290  318E  260B  3182   	fcall	_EUSART_Write
  4209  0293                     L1:	
  4210                           
  4211                           ;main.c: 124: gu8OperationState &=~0x04;
  4212  0293  30FB               	movlw	251
  4213  0294  0141               	movlb	1	; select bank1
  4214  0295  00E3               	movwf	??_main^(0+128)
  4215  0296  0863               	movf	??_main^(0+128),w
  4216  0297  0140               	movlb	0	; select bank0
  4217  0298  05E6               	andwf	_gu8OperationState,f
  4218                           
  4219                           ;main.c: 125: gu16RstTimCnt = 0;
  4220  0299  0141               	movlb	1	; select bank1
  4221  029A  01BB               	clrf	_gu16RstTimCnt^(0+128)
  4222  029B  01BC               	clrf	(_gu16RstTimCnt+1)^(0+128)
  4223  029C                     l2987:	
  4224                           
  4225                           ;main.c: 126: };main.c: 127: };main.c: 128: };main.c: 129: if(gu8OperationState&0x08)
  4226  029C  0140               	movlb	0	; select bank0
  4227  029D  1DE6               	btfss	_gu8OperationState,3
  4228  029E  2AB1               	goto	l2995
  4229                           
  4230                           ;main.c: 130: {;main.c: 131: if(gu8OldDoorState != 1)
  4231  029F  0141               	movlb	1	; select bank1
  4232  02A0  0364               	decf	_gu8OldDoorState^(0+128),w
  4233  02A1  1903               	btfsc	3,2
  4234  02A2  2AAB               	goto	l2993
  4235                           
  4236                           ;main.c: 132: {;main.c: 133: EUSART_Write(0x22);
  4237  02A3  3022               	movlw	34
  4238  02A4  318E  260B  3182   	fcall	_EUSART_Write
  4239                           
  4240                           ;main.c: 134: EUSART_Write(0x55);
  4241  02A7  3055               	movlw	85
  4242  02A8  318E  260B  3182   	fcall	_EUSART_Write
  4243  02AB                     l2993:	
  4244                           
  4245                           ;main.c: 136: };main.c: 137: gu8OperationState &= ~0x08;
  4246  02AB  30F7               	movlw	247
  4247  02AC  0141               	movlb	1	; select bank1
  4248  02AD  00E3               	movwf	??_main^(0+128)
  4249  02AE  0863               	movf	??_main^(0+128),w
  4250  02AF  0140               	movlb	0	; select bank0
  4251  02B0  05E6               	andwf	_gu8OperationState,f
  4252  02B1                     l2995:	
  4253                           
  4254                           ;main.c: 138: };main.c: 139: if(gu8OperationState&0x03)
  4255  02B1  0866               	movf	_gu8OperationState,w
  4256  02B2  3903               	andlw	3
  4257  02B3  1903               	btfsc	3,2
  4258  02B4  2AE1               	goto	l3021
  4259                           
  4260                           ;main.c: 140: {;main.c: 141: if(ReadTouchKeyPIN() == 2)
  4261  02B5  318C  246E  3182   	fcall	_ReadTouchKeyPIN
  4262  02B8  3A02               	xorlw	2
  4263  02B9  1903               	btfsc	3,2
  4264  02BA  2ADB               	goto	l3019
  4265                           
  4266                           ;main.c: 145: else if(ReadTouchKeyPIN() == 0)
  4267                           
  4268                           ;main.c: 144: }
  4269                           
  4270                           ;main.c: 142: {;main.c: 143: gu8OperationState &= 0xFC;
  4271  02BB  318C  246E  3182   	fcall	_ReadTouchKeyPIN
  4272  02BE  3A00               	xorlw	0
  4273  02BF  1D03               	skipz
  4274  02C0  2AE1               	goto	l3021
  4275                           
  4276                           ;main.c: 146: {;main.c: 147: if(gu8DoorState == 2)
  4277  02C1  3002               	movlw	2
  4278  02C2  0140               	movlb	0	; select bank0
  4279  02C3  066D               	xorwf	_gu8DoorState,w
  4280  02C4  1D03               	btfss	3,2
  4281  02C5  2AD7               	goto	l3015
  4282                           
  4283                           ;main.c: 148: {;main.c: 149: gu16OpenTimCnt = 0;
  4284  02C6  0141               	movlb	1	; select bank1
  4285  02C7  01B5               	clrf	_gu16OpenTimCnt^(0+128)
  4286  02C8  01B6               	clrf	(_gu16OpenTimCnt+1)^(0+128)
  4287                           
  4288                           ;main.c: 150: ClearAngle();
  4289  02C9  318C  2449  3182   	fcall	_ClearAngle
  4290                           
  4291                           ;main.c: 151: TMR0_StartTimer();
  4292  02CC  318C  2425  3182   	fcall	_TMR0_StartTimer
  4293                           
  4294                           ;main.c: 152: EUSART_Write(0x22);
  4295  02CF  3022               	movlw	34
  4296  02D0  318E  260B  3182   	fcall	_EUSART_Write
  4297                           
  4298                           ;main.c: 153: EUSART_Write(0x66);
  4299  02D3  3066               	movlw	102
  4300  02D4  318E  260B  3182   	fcall	_EUSART_Write
  4301  02D7                     l3015:	
  4302                           
  4303                           ;main.c: 155: };main.c: 156: gu8OldDoorState = 0;
  4304  02D7  0141               	movlb	1	; select bank1
  4305  02D8  01E4               	clrf	_gu8OldDoorState^(0+128)
  4306                           
  4307                           ;main.c: 157: gu8DoorState = 0;
  4308  02D9  0140               	movlb	0	; select bank0
  4309  02DA  01ED               	clrf	_gu8DoorState
  4310  02DB                     l3019:	
  4311                           
  4312                           ;main.c: 158: gu8OperationState &= 0xFC;
  4313  02DB  30FC               	movlw	252
  4314  02DC  0141               	movlb	1	; select bank1
  4315  02DD  00E3               	movwf	??_main^(0+128)
  4316  02DE  0863               	movf	??_main^(0+128),w
  4317  02DF  0140               	movlb	0	; select bank0
  4318  02E0  05E6               	andwf	_gu8OperationState,f
  4319  02E1                     l3021:	
  4320                           
  4321                           ;main.c: 159: };main.c: 160: };main.c: 161: if(gu8OperationState == 0x00)
  4322  02E1  0140               	movlb	0	; select bank0
  4323  02E2  0866               	movf	_gu8OperationState,w
  4324  02E3  1D03               	btfss	3,2
  4325  02E4  2AEC               	goto	l3029
  4326                           
  4327                           ;main.c: 162: {;main.c: 163: if(gu8OldDoorState == 1)
  4328  02E5  0141               	movlb	1	; select bank1
  4329  02E6  0364               	decf	_gu8OldDoorState^(0+128),w
  4330  02E7  1D03               	btfss	3,2
  4331  02E8  2AEC               	goto	l3029
  4332  02E9                     l3025:	
  4333                           
  4334                           ;main.c: 164: {;main.c: 166: gu8DoorState = 1;
  4335  02E9  0140               	movlb	0	; select bank0
  4336  02EA  01ED               	clrf	_gu8DoorState
  4337  02EB  0AED               	incf	_gu8DoorState,f
  4338  02EC                     l3029:	
  4339                           ;main.c: 173: }
  4340                           
  4341                           ;main.c: 172: break;
  4342                           
  4343                           ;main.c: 171: default:
  4344                           
  4345                           ;main.c: 167: };main.c: 168: };main.c: 169: break;
  4346                           
  4347  02EC  0140               	movlb	0	; select bank0
  4348  02ED  086D               	movf	_gu8DoorState,w
  4349                           
  4350                           ; Switch size 1, requested type "space"
  4351                           ; Number of cases is 3, Range of values is 0 to 2
  4352                           ; switch strategies available:
  4353                           ; Name         Instructions Cycles
  4354                           ; simple_byte           10     6 (average)
  4355                           ; direct_byte           12     6 (fixed)
  4356                           ; jumptable            260     6 (fixed)
  4357                           ;	Chosen strategy is simple_byte
  4358  02EE  3A00               	xorlw	0	; case 0
  4359  02EF  1903               	skipnz
  4360  02F0  2A4E               	goto	l2953
  4361  02F1  3A01               	xorlw	1	; case 1
  4362  02F2  1903               	skipnz
  4363  02F3  2A32               	goto	l2941
  4364  02F4  3A03               	xorlw	3	; case 2
  4365  02F5  1903               	skipnz
  4366  02F6  2A7A               	goto	l2971
  4367  02F7  2AEC               	goto	l3029
  4368  02F8  2AEC               	goto	l3029
  4369  02F9                     __end_of_main:	
  4370                           
  4371                           	psect	text1
  4372  0C28                     __ptext1:	
  4373 ;; *************** function _TMR0_StopTimer *****************
  4374 ;; Defined at:
  4375 ;;		line 99 in file "src/tmr0.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		None
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4389 ;;      Params:         0       0       0       0       0       0       0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0
  4392 ;;      Totals:         0       0       0       0       0       0       0       0
  4393 ;;Total ram usage:        0 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    7
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_main
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _TMR0_StopTimer
  4405  0C28                     _TMR0_StopTimer:	
  4406                           
  4407                           ;tmr0.c: 102: T0CON0bits.T0EN = 0;
  4408                           
  4409                           ;incstack = 0
  4410                           ; Regs used in _TMR0_StopTimer: []
  4411  0C28  014B               	movlb	11	; select bank11
  4412  0C29  139E               	bcf	30,7	;volatile
  4413  0C2A  0008               	return
  4414  0C2B                     __end_of_TMR0_StopTimer:	
  4415                           
  4416                           	psect	text2
  4417  0C25                     __ptext2:	
  4418 ;; *************** function _TMR0_StartTimer *****************
  4419 ;; Defined at:
  4420 ;;		line 93 in file "src/tmr0.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		None
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4434 ;;      Params:         0       0       0       0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0
  4437 ;;      Totals:         0       0       0       0       0       0       0       0
  4438 ;;Total ram usage:        0 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    7
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_main
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           
  4449                           ;psect for function _TMR0_StartTimer
  4450  0C25                     _TMR0_StartTimer:	
  4451                           
  4452                           ;tmr0.c: 96: T0CON0bits.T0EN = 1;
  4453                           
  4454                           ;incstack = 0
  4455                           ; Regs used in _TMR0_StartTimer: []
  4456  0C25  014B               	movlb	11	; select bank11
  4457  0C26  179E               	bsf	30,7	;volatile
  4458  0C27  0008               	return
  4459  0C28                     __end_of_TMR0_StartTimer:	
  4460                           
  4461                           	psect	text3
  4462  0CBE                     __ptext3:	
  4463 ;; *************** function _SYSTEM_Initialize *****************
  4464 ;; Defined at:
  4465 ;;		line 93 in file "src/mcc.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4479 ;;      Params:         0       0       0       0       0       0       0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0       0
  4482 ;;      Totals:         0       0       0       0       0       0       0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:   12
  4486 ;; This function calls:
  4487 ;;		_EUSART_Initialize
  4488 ;;		_Init_MPU6500
  4489 ;;		_Interrupt_Enable
  4490 ;;		_OSCILLATOR_Initialize
  4491 ;;		_PIN_MANAGER_Initialize
  4492 ;;		_PMD_Initialize
  4493 ;;		_TMR0_Initialize
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function _SYSTEM_Initialize
  4501  0CBE                     _SYSTEM_Initialize:	
  4502                           
  4503                           ;mcc.c: 95: PMD_Initialize();
  4504                           
  4505                           ;incstack = 0
  4506                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4507  0CBE  318C  2438  318C   	fcall	_PMD_Initialize
  4508                           
  4509                           ;mcc.c: 96: PIN_MANAGER_Initialize();
  4510  0CC1  318E  2664  318C   	fcall	_PIN_MANAGER_Initialize
  4511                           
  4512                           ;mcc.c: 97: OSCILLATOR_Initialize();
  4513  0CC4  3187  27F4  318C   	fcall	_OSCILLATOR_Initialize
  4514                           
  4515                           ;mcc.c: 98: EUSART_Initialize();
  4516  0CC7  318C  24FF  318C   	fcall	_EUSART_Initialize
  4517                           
  4518                           ;mcc.c: 104: Init_MPU6500();
  4519  0CCA  3187  275F  318C   	fcall	_Init_MPU6500
  4520                           
  4521                           ;mcc.c: 105: TMR0_Initialize();
  4522  0CCD  318C  2453  318C   	fcall	_TMR0_Initialize
  4523                           
  4524                           ;mcc.c: 106: Interrupt_Enable();
  4525  0CD0  318C  2422         	fcall	_Interrupt_Enable
  4526  0CD2  0008               	return
  4527  0CD3                     __end_of_SYSTEM_Initialize:	
  4528                           
  4529                           	psect	text4
  4530  0C53                     __ptext4:	
  4531 ;; *************** function _TMR0_Initialize *****************
  4532 ;; Defined at:
  4533 ;;		line 69 in file "src/tmr0.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;		None
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;		None
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4547 ;;      Params:         0       0       0       0       0       0       0       0
  4548 ;;      Locals:         0       0       0       0       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0       0       0       0
  4550 ;;      Totals:         0       0       0       0       0       0       0       0
  4551 ;;Total ram usage:        0 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    7
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_SYSTEM_Initialize
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _TMR0_Initialize
  4563  0C53                     _TMR0_Initialize:	
  4564                           
  4565                           ;tmr0.c: 74: T0CON1 = 0x7B;
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  4569  0C53  307B               	movlw	123
  4570  0C54  014B               	movlb	11	; select bank11
  4571  0C55  009F               	movwf	31	;volatile
  4572                           
  4573                           ;tmr0.c: 77: TMR0H = 158;
  4574  0C56  309E               	movlw	158
  4575  0C57  009D               	movwf	29	;volatile
  4576                           
  4577                           ;tmr0.c: 80: TMR0L = 0x00;
  4578  0C58  019C               	clrf	28	;volatile
  4579                           
  4580                           ;tmr0.c: 83: PIR0bits.TMR0IF = 0;
  4581  0C59  014E               	movlb	14	; select bank14
  4582  0C5A  128C               	bcf	12,5	;volatile
  4583                           
  4584                           ;tmr0.c: 86: PIE0bits.TMR0IE = 1;
  4585  0C5B  1696               	bsf	22,5	;volatile
  4586                           
  4587                           ;tmr0.c: 90: T0CON0 = 0x80;
  4588  0C5C  3080               	movlw	128
  4589  0C5D  014B               	movlb	11	; select bank11
  4590  0C5E  009E               	movwf	30	;volatile
  4591  0C5F  0008               	return
  4592  0C60                     __end_of_TMR0_Initialize:	
  4593                           
  4594                           	psect	text5
  4595  0C38                     __ptext5:	
  4596 ;; *************** function _PMD_Initialize *****************
  4597 ;; Defined at:
  4598 ;;		line 128 in file "src/mcc.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		status,2
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4612 ;;      Params:         0       0       0       0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    7
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_SYSTEM_Initialize
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           
  4627                           ;psect for function _PMD_Initialize
  4628  0C38                     _PMD_Initialize:	
  4629                           
  4630                           ;mcc.c: 131: PMD0 = 0x00;
  4631                           
  4632                           ;incstack = 0
  4633                           ; Regs used in _PMD_Initialize: [status,2]
  4634  0C38  014F               	movlb	15	; select bank15
  4635  0C39  0196               	clrf	22	;volatile
  4636                           
  4637                           ;mcc.c: 133: PMD1 = 0x00;
  4638  0C3A  0197               	clrf	23	;volatile
  4639                           
  4640                           ;mcc.c: 135: PMD2 = 0x00;
  4641  0C3B  0198               	clrf	24	;volatile
  4642                           
  4643                           ;mcc.c: 137: PMD3 = 0x00;
  4644  0C3C  0199               	clrf	25	;volatile
  4645                           
  4646                           ;mcc.c: 139: PMD4 = 0x00;
  4647  0C3D  019A               	clrf	26	;volatile
  4648                           
  4649                           ;mcc.c: 141: PMD5 = 0x00;
  4650  0C3E  019B               	clrf	27	;volatile
  4651  0C3F  0008               	return
  4652  0C40                     __end_of_PMD_Initialize:	
  4653                           
  4654                           	psect	text6
  4655  0E64                     __ptext6:	
  4656 ;; *************** function _PIN_MANAGER_Initialize *****************
  4657 ;; Defined at:
  4658 ;;		line 50 in file "src/gpio.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4672 ;;      Params:         0       0       0       0       0       0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0
  4674 ;;      Temps:          0       0       1       0       0       0       0       0
  4675 ;;      Totals:         0       0       1       0       0       0       0       0
  4676 ;;Total ram usage:        1 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    7
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_SYSTEM_Initialize
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function _PIN_MANAGER_Initialize
  4688  0E64                     _PIN_MANAGER_Initialize:	
  4689                           
  4690                           ;gpio.c: 55: LATA = 0x00;
  4691                           
  4692                           ;incstack = 0
  4693                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4694  0E64  0140               	movlb	0	; select bank0
  4695  0E65  0198               	clrf	24	;volatile
  4696                           
  4697                           ;gpio.c: 56: LATB = 0x00;
  4698  0E66  0199               	clrf	25	;volatile
  4699                           
  4700                           ;gpio.c: 57: LATC = 0x00;
  4701  0E67  019A               	clrf	26	;volatile
  4702                           
  4703                           ;gpio.c: 63: TRISA = 0xFC;
  4704  0E68  30FC               	movlw	252
  4705  0E69  0092               	movwf	18	;volatile
  4706                           
  4707                           ;gpio.c: 65: TRISB = 0xE7;
  4708  0E6A  30E7               	movlw	231
  4709  0E6B  0093               	movwf	19	;volatile
  4710                           
  4711                           ;gpio.c: 67: TRISC = 0xA7;
  4712  0E6C  30A7               	movlw	167
  4713  0E6D  0094               	movwf	20	;volatile
  4714                           
  4715                           ;gpio.c: 73: ANSELA = 0xFC;
  4716  0E6E  30FC               	movlw	252
  4717  0E6F  017E               	movlb	62	; select bank62
  4718  0E70  00B8               	movwf	56	;volatile
  4719                           
  4720                           ;gpio.c: 75: ANSELB = 0xC1;
  4721  0E71  30C1               	movlw	193
  4722  0E72  00C3               	movwf	67	;volatile
  4723                           
  4724                           ;gpio.c: 77: ANSELC = 0x06;
  4725  0E73  3006               	movlw	6
  4726  0E74  00CE               	movwf	78	;volatile
  4727                           
  4728                           ;gpio.c: 82: WPUE = 0x00;
  4729  0E75  01E5               	clrf	101	;volatile
  4730                           
  4731                           ;gpio.c: 83: WPUB = 0x26;
  4732  0E76  3026               	movlw	38
  4733  0E77  00C4               	movwf	68	;volatile
  4734                           
  4735                           ;gpio.c: 84: WPUA = 0x00;
  4736  0E78  01B9               	clrf	57	;volatile
  4737                           
  4738                           ;gpio.c: 85: WPUC = 0x01;
  4739  0E79  3001               	movlw	1
  4740  0E7A  00CF               	movwf	79	;volatile
  4741                           
  4742                           ;gpio.c: 90: ODCONA = 0x00;
  4743  0E7B  01BA               	clrf	58	;volatile
  4744                           
  4745                           ;gpio.c: 91: ODCONB = 0x00;
  4746  0E7C  01C5               	clrf	69	;volatile
  4747                           
  4748                           ;gpio.c: 92: ODCONC = 0x00;
  4749  0E7D  01D0               	clrf	80	;volatile
  4750                           
  4751                           ;gpio.c: 97: RX1DTPPSbits.RX1DTPPS = 0x17;
  4752  0E7E  017D               	movlb	61	; select bank61
  4753  0E7F  084B               	movf	75,w	;volatile
  4754  0E80  39C0               	andlw	-64
  4755  0E81  3817               	iorlw	23
  4756  0E82  00CB               	movwf	75	;volatile
  4757                           
  4758                           ;gpio.c: 99: RC6PPS = 0x0F;
  4759  0E83  300F               	movlw	15
  4760  0E84  017E               	movlb	62	; select bank62
  4761  0E85  00A6               	movwf	38	;volatile
  4762                           
  4763                           ;gpio.c: 101: PORTC |= 0x04;
  4764  0E86  0140               	movlb	0	; select bank0
  4765  0E87  150E               	bsf	14,2	;volatile
  4766                           
  4767                           ;gpio.c: 104: ODCONC |= 0x18;
  4768  0E88  3018               	movlw	24
  4769  0E89  0141               	movlb	1	; select bank1
  4770  0E8A  00C6               	movwf	??_PIN_MANAGER_Initialize^(0+128)
  4771  0E8B  0846               	movf	??_PIN_MANAGER_Initialize^(0+128),w
  4772  0E8C  017E               	movlb	62	; select bank62
  4773  0E8D  04D0               	iorwf	80,f	;volatile
  4774                           
  4775                           ;gpio.c: 117: IOCBNbits.IOCBN1 = 1;
  4776  0E8E  14C9               	bsf	73,1	;volatile
  4777                           
  4778                           ;gpio.c: 118: IOCBNbits.IOCBN2 = 1;
  4779  0E8F  1549               	bsf	73,2	;volatile
  4780                           
  4781                           ;gpio.c: 119: IOCBNbits.IOCBN5 = 1;
  4782  0E90  16C9               	bsf	73,5	;volatile
  4783                           
  4784                           ;gpio.c: 120: IOCCNbits.IOCCN0 = 1;
  4785  0E91  1454               	bsf	84,0	;volatile
  4786                           
  4787                           ;gpio.c: 125: PIE0bits.IOCIE = 1;
  4788  0E92  014E               	movlb	14	; select bank14
  4789  0E93  1616               	bsf	22,4	;volatile
  4790  0E94  0008               	return
  4791  0E95                     __end_of_PIN_MANAGER_Initialize:	
  4792                           
  4793                           	psect	text7
  4794  07F4                     __ptext7:	
  4795 ;; *************** function _OSCILLATOR_Initialize *****************
  4796 ;; Defined at:
  4797 ;;		line 112 in file "src/mcc.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4811 ;;      Params:         0       0       0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0       0
  4814 ;;      Totals:         0       0       0       0       0       0       0       0
  4815 ;;Total ram usage:        0 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    7
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_SYSTEM_Initialize
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           
  4826                           ;psect for function _OSCILLATOR_Initialize
  4827  07F4                     _OSCILLATOR_Initialize:	
  4828                           
  4829                           ;mcc.c: 115: OSCCON1 = 0x60;
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4833  07F4  3060               	movlw	96
  4834  07F5  0151               	movlb	17	; select bank17
  4835  07F6  008D               	movwf	13	;volatile
  4836                           
  4837                           ;mcc.c: 117: OSCCON3 = 0x00;
  4838  07F7  018F               	clrf	15	;volatile
  4839                           
  4840                           ;mcc.c: 119: OSCEN = 0x00;
  4841  07F8  0191               	clrf	17	;volatile
  4842                           
  4843                           ;mcc.c: 121: OSCFRQ = 0x06;
  4844  07F9  3006               	movlw	6
  4845  07FA  0093               	movwf	19	;volatile
  4846                           
  4847                           ;mcc.c: 123: OSCSTAT = 0x00;
  4848  07FB  0190               	clrf	16	;volatile
  4849                           
  4850                           ;mcc.c: 125: OSCTUNE = 0x00;
  4851  07FC  0192               	clrf	18	;volatile
  4852  07FD  0008               	return
  4853  07FE                     __end_of_OSCILLATOR_Initialize:	
  4854                           
  4855                           	psect	text8
  4856  0C22                     __ptext8:	
  4857 ;; *************** function _Interrupt_Enable *****************
  4858 ;; Defined at:
  4859 ;;		line 98 in file "src/interrupt_manager.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		None
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4873 ;;      Params:         0       0       0       0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0       0
  4876 ;;      Totals:         0       0       0       0       0       0       0       0
  4877 ;;Total ram usage:        0 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    7
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_SYSTEM_Initialize
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           
  4888                           ;psect for function _Interrupt_Enable
  4889  0C22                     _Interrupt_Enable:	
  4890                           
  4891                           ;interrupt_manager.c: 100: (INTCONbits.GIE = 1);
  4892                           
  4893                           ;incstack = 0
  4894                           ; Regs used in _Interrupt_Enable: []
  4895  0C22  178B               	bsf	11,7	;volatile
  4896                           
  4897                           ;interrupt_manager.c: 101: (INTCONbits.PEIE = 1);
  4898  0C23  170B               	bsf	11,6	;volatile
  4899  0C24  0008               	return
  4900  0C25                     __end_of_Interrupt_Enable:	
  4901                           
  4902                           	psect	text9
  4903  075F                     __ptext9:	
  4904 ;; *************** function _Init_MPU6500 *****************
  4905 ;; Defined at:
  4906 ;;		line 281 in file "src/mpu_iic.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4920 ;;      Params:         0       0       0       0       0       0       0       0
  4921 ;;      Locals:         0       0       0       0       0       0       0       0
  4922 ;;      Temps:          0       0       2       0       0       0       0       0
  4923 ;;      Totals:         0       0       2       0       0       0       0       0
  4924 ;;Total ram usage:        2 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:   11
  4927 ;; This function calls:
  4928 ;;		_Com_Lock_MPU_RD_Reg
  4929 ;;		_Com_Lock_MPU_Write_Command
  4930 ;;		_Read_Offset
  4931 ;; This function is called by:
  4932 ;;		_SYSTEM_Initialize
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           
  4937                           ;psect for function _Init_MPU6500
  4938  075F                     _Init_MPU6500:	
  4939                           
  4940                           ;mpu_iic.c: 283: _delay((unsigned long)((200)*(8000000/1000.0)));
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in _Init_MPU6500: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4944  075F  3009               	movlw	9
  4945  0760  0141               	movlb	1	; select bank1
  4946  0761  00E2               	movwf	(??_Init_MPU6500^(0+128)+1)
  4947  0762  301E               	movlw	30
  4948  0763  00E1               	movwf	??_Init_MPU6500^(0+128)
  4949  0764  30E4               	movlw	228
  4950  0765                     u3237:	
  4951  0765  0B89               	decfsz	9,f
  4952  0766  2F65               	goto	u3237
  4953  0767  0BE1               	decfsz	??_Init_MPU6500^(0+128),f
  4954  0768  2F65               	goto	u3237
  4955  0769  0BE2               	decfsz	(??_Init_MPU6500^(0+128)+1),f
  4956  076A  2F65               	goto	u3237
  4957  076B  0000               	nop
  4958                           
  4959                           ;mpu_iic.c: 285: if(Com_Lock_MPU_RD_Reg(0x75) == 0x70)
  4960  076C  3075               	movlw	117
  4961  076D  318E  2636  3187   	fcall	_Com_Lock_MPU_RD_Reg
  4962  0770  3A70               	xorlw	112
  4963  0771  1D03               	skipz
  4964  0772  0008               	return
  4965                           
  4966                           ;mpu_iic.c: 286: {;mpu_iic.c: 287: Com_Lock_MPU_Write_Command(0x6B,0x00);
  4967  0773  0141               	movlb	1	; select bank1
  4968  0774  01CB               	clrf	Com_Lock_MPU_Write_Command@data^(0+128)
  4969  0775  306B               	movlw	107
  4970  0776  318C  24E9  3187   	fcall	_Com_Lock_MPU_Write_Command
  4971                           
  4972                           ;mpu_iic.c: 288: Com_Lock_MPU_Write_Command(0x19, 0x07);
  4973  0779  3007               	movlw	7
  4974  077A  0141               	movlb	1	; select bank1
  4975  077B  00E1               	movwf	??_Init_MPU6500^(0+128)
  4976  077C  0861               	movf	??_Init_MPU6500^(0+128),w
  4977  077D  00CB               	movwf	Com_Lock_MPU_Write_Command@data^(0+128)
  4978  077E  3019               	movlw	25
  4979  077F  318C  24E9  3187   	fcall	_Com_Lock_MPU_Write_Command
  4980                           
  4981                           ;mpu_iic.c: 289: Com_Lock_MPU_Write_Command(0x1A, 0x06);
  4982  0782  3006               	movlw	6
  4983  0783  0141               	movlb	1	; select bank1
  4984  0784  00E1               	movwf	??_Init_MPU6500^(0+128)
  4985  0785  0861               	movf	??_Init_MPU6500^(0+128),w
  4986  0786  00CB               	movwf	Com_Lock_MPU_Write_Command@data^(0+128)
  4987  0787  301A               	movlw	26
  4988  0788  318C  24E9  3187   	fcall	_Com_Lock_MPU_Write_Command
  4989                           
  4990                           ;mpu_iic.c: 290: Com_Lock_MPU_Write_Command(0x1B, 0x00);
  4991  078B  0141               	movlb	1	; select bank1
  4992  078C  01CB               	clrf	Com_Lock_MPU_Write_Command@data^(0+128)
  4993  078D  301B               	movlw	27
  4994  078E  318C  24E9  3187   	fcall	_Com_Lock_MPU_Write_Command
  4995                           
  4996                           ;mpu_iic.c: 291: Com_Lock_MPU_Write_Command(0x6C,0x3d);
  4997  0791  303D               	movlw	61
  4998  0792  0141               	movlb	1	; select bank1
  4999  0793  00E1               	movwf	??_Init_MPU6500^(0+128)
  5000  0794  0861               	movf	??_Init_MPU6500^(0+128),w
  5001  0795  00CB               	movwf	Com_Lock_MPU_Write_Command@data^(0+128)
  5002  0796  306C               	movlw	108
  5003  0797  318C  24E9  3187   	fcall	_Com_Lock_MPU_Write_Command
  5004                           
  5005                           ;mpu_iic.c: 293: _delay((unsigned long)((200)*(8000000/1000.0)));
  5006  079A  3009               	movlw	9
  5007  079B  0141               	movlb	1	; select bank1
  5008  079C  00E2               	movwf	(??_Init_MPU6500^(0+128)+1)
  5009  079D  301E               	movlw	30
  5010  079E  00E1               	movwf	??_Init_MPU6500^(0+128)
  5011  079F  30E4               	movlw	228
  5012  07A0                     u3247:	
  5013  07A0  0B89               	decfsz	9,f
  5014  07A1  2FA0               	goto	u3247
  5015  07A2  0BE1               	decfsz	??_Init_MPU6500^(0+128),f
  5016  07A3  2FA0               	goto	u3247
  5017  07A4  0BE2               	decfsz	(??_Init_MPU6500^(0+128)+1),f
  5018  07A5  2FA0               	goto	u3247
  5019  07A6  0000               	nop
  5020                           
  5021                           ;mpu_iic.c: 294: Read_Offset();
  5022  07A7  3185  25EC         	fcall	_Read_Offset
  5023  07A9  0008               	return
  5024  07AA                     __end_of_Init_MPU6500:	
  5025                           
  5026                           	psect	text10
  5027  05EC                     __ptext10:	
  5028 ;; *************** function _Read_Offset *****************
  5029 ;; Defined at:
  5030 ;;		line 200 in file "src/mpu_iic.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;		None
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  G_Temp_X        4   22[BANK1 ] long 
  5035 ;;  cnt             1   26[BANK1 ] unsigned char 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5045 ;;      Params:         0       0       0       0       0       0       0       0
  5046 ;;      Locals:         0       0       5       0       0       0       0       0
  5047 ;;      Temps:          0       0       4       0       0       0       0       0
  5048 ;;      Totals:         0       0       9       0       0       0       0       0
  5049 ;;Total ram usage:        9 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:   10
  5052 ;; This function calls:
  5053 ;;		_EUSART_Write
  5054 ;;		_Get6500Data
  5055 ;;		___aldiv
  5056 ;; This function is called by:
  5057 ;;		_Init_MPU6500
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           
  5062                           ;psect for function _Read_Offset
  5063  05EC                     _Read_Offset:	
  5064                           
  5065                           ;mpu_iic.c: 202: int32_t G_Temp_X;;mpu_iic.c: 203: uint8_t cnt;;mpu_iic.c: 204: G_Temp_X
      +                           = 0;
  5066                           
  5067                           ;incstack = 0
  5068                           ; Regs used in _Read_Offset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5069  05EC  3000               	movlw	0
  5070  05ED  0141               	movlb	1	; select bank1
  5071  05EE  00DF               	movwf	(Read_Offset@G_Temp_X+3)^(0+128)
  5072  05EF  3000               	movlw	0
  5073  05F0  00DE               	movwf	(Read_Offset@G_Temp_X+2)^(0+128)
  5074  05F1  3000               	movlw	0
  5075  05F2  00DD               	movwf	(Read_Offset@G_Temp_X+1)^(0+128)
  5076  05F3  3000               	movlw	0
  5077  05F4  00DC               	movwf	Read_Offset@G_Temp_X^(0+128)
  5078                           
  5079                           ;mpu_iic.c: 205: for(cnt = 0; cnt < 50;cnt++)
  5080  05F5  01E0               	clrf	Read_Offset@cnt^(0+128)
  5081  05F6  3032               	movlw	50
  5082  05F7  0260               	subwf	Read_Offset@cnt^(0+128),w
  5083  05F8  1803               	btfsc	3,0
  5084  05F9  2E18               	goto	l2513
  5085  05FA                     l2507:	
  5086                           
  5087                           ;mpu_iic.c: 206: {;mpu_iic.c: 207: G_Temp_X += (int32_t)Get6500Data(0x45);
  5088  05FA  3045               	movlw	69
  5089  05FB  318D  259B  3185   	fcall	_Get6500Data
  5090  05FE  0141               	movlb	1	; select bank1
  5091  05FF  084E               	movf	?_Get6500Data^(0+128),w
  5092  0600  00D8               	movwf	??_Read_Offset^(0+128)
  5093  0601  084F               	movf	(?_Get6500Data+1)^(0+128),w
  5094  0602  00D9               	movwf	(??_Read_Offset^(0+128)+1)
  5095  0603  3000               	movlw	0
  5096  0604  1BD9               	btfsc	(??_Read_Offset^(0+128)+1),7
  5097  0605  30FF               	movlw	255
  5098  0606  00DA               	movwf	(??_Read_Offset^(0+128)+2)
  5099  0607  00DB               	movwf	(??_Read_Offset^(0+128)+3)
  5100  0608  0858               	movf	??_Read_Offset^(0+128),w
  5101  0609  07DC               	addwf	Read_Offset@G_Temp_X^(0+128),f
  5102  060A  0859               	movf	(??_Read_Offset+1)^(0+128),w
  5103  060B  3DDD               	addwfc	(Read_Offset@G_Temp_X+1)^(0+128),f
  5104  060C  085A               	movf	(??_Read_Offset+2)^(0+128),w
  5105  060D  3DDE               	addwfc	(Read_Offset@G_Temp_X+2)^(0+128),f
  5106  060E  085B               	movf	(??_Read_Offset+3)^(0+128),w
  5107  060F  3DDF               	addwfc	(Read_Offset@G_Temp_X+3)^(0+128),f
  5108  0610  3001               	movlw	1
  5109  0611  00D8               	movwf	??_Read_Offset^(0+128)
  5110  0612  0858               	movf	??_Read_Offset^(0+128),w
  5111  0613  07E0               	addwf	Read_Offset@cnt^(0+128),f
  5112  0614  3032               	movlw	50
  5113  0615  0260               	subwf	Read_Offset@cnt^(0+128),w
  5114  0616  1C03               	skipc
  5115  0617  2DFA               	goto	l2507
  5116  0618                     l2513:	
  5117                           
  5118                           ;mpu_iic.c: 208: };mpu_iic.c: 209: G_Offset_X = G_Temp_X/cnt;
  5119  0618  0860               	movf	Read_Offset@cnt^(0+128),w
  5120  0619  00D8               	movwf	??_Read_Offset^(0+128)
  5121  061A  01D9               	clrf	(??_Read_Offset^(0+128)+1)
  5122  061B  01DA               	clrf	(??_Read_Offset^(0+128)+2)
  5123  061C  01DB               	clrf	(??_Read_Offset^(0+128)+3)
  5124  061D  085B               	movf	(??_Read_Offset+3)^(0+128),w
  5125  061E  00C9               	movwf	(___aldiv@divisor+3)^(0+128)
  5126  061F  085A               	movf	(??_Read_Offset+2)^(0+128),w
  5127  0620  00C8               	movwf	(___aldiv@divisor+2)^(0+128)
  5128  0621  0859               	movf	(??_Read_Offset+1)^(0+128),w
  5129  0622  00C7               	movwf	(___aldiv@divisor+1)^(0+128)
  5130  0623  0858               	movf	??_Read_Offset^(0+128),w
  5131  0624  00C6               	movwf	___aldiv@divisor^(0+128)
  5132  0625  085F               	movf	(Read_Offset@G_Temp_X+3)^(0+128),w
  5133  0626  00CD               	movwf	(___aldiv@dividend+3)^(0+128)
  5134  0627  085E               	movf	(Read_Offset@G_Temp_X+2)^(0+128),w
  5135  0628  00CC               	movwf	(___aldiv@dividend+2)^(0+128)
  5136  0629  085D               	movf	(Read_Offset@G_Temp_X+1)^(0+128),w
  5137  062A  00CB               	movwf	(___aldiv@dividend+1)^(0+128)
  5138  062B  085C               	movf	Read_Offset@G_Temp_X^(0+128),w
  5139  062C  00CA               	movwf	___aldiv@dividend^(0+128)
  5140  062D  3185  256A  3185   	fcall	___aldiv
  5141  0630  0141               	movlb	1	; select bank1
  5142  0631  0847               	movf	(?___aldiv+1)^(0+128),w
  5143  0632  00B8               	movwf	(_G_Offset_X+1)^(0+128)
  5144  0633  0846               	movf	?___aldiv^(0+128),w
  5145  0634  00B7               	movwf	_G_Offset_X^(0+128)
  5146                           
  5147                           ;mpu_iic.c: 210: Old_gyro = (int)G_Offset_X;
  5148  0635  0838               	movf	(_G_Offset_X+1)^(0+128),w
  5149  0636  00BA               	movwf	(_Old_gyro+1)^(0+128)
  5150  0637  0837               	movf	_G_Offset_X^(0+128),w
  5151  0638  00B9               	movwf	_Old_gyro^(0+128)
  5152                           
  5153                           ;mpu_iic.c: 211: New_gyro = Old_gyro;
  5154  0639  083A               	movf	(_Old_gyro+1)^(0+128),w
  5155  063A  0140               	movlb	0	; select bank0
  5156  063B  00E4               	movwf	_New_gyro+1
  5157  063C  0141               	movlb	1	; select bank1
  5158  063D  0839               	movf	_Old_gyro^(0+128),w
  5159  063E  0140               	movlb	0	; select bank0
  5160  063F  00E3               	movwf	_New_gyro
  5161                           
  5162                           ;mpu_iic.c: 212: Frist_gyro = Old_gyro;
  5163  0640  0141               	movlb	1	; select bank1
  5164  0641  083A               	movf	(_Old_gyro+1)^(0+128),w
  5165  0642  0140               	movlb	0	; select bank0
  5166  0643  00E2               	movwf	_Frist_gyro+1
  5167  0644  0141               	movlb	1	; select bank1
  5168  0645  0839               	movf	_Old_gyro^(0+128),w
  5169  0646  0140               	movlb	0	; select bank0
  5170  0647  00E1               	movwf	_Frist_gyro
  5171                           
  5172                           ;mpu_iic.c: 213: EUSART_Write(0x55);
  5173  0648  3055               	movlw	85
  5174  0649  318E  260B  3185   	fcall	_EUSART_Write
  5175                           
  5176                           ;mpu_iic.c: 214: EUSART_Write(0xAA);
  5177  064C  30AA               	movlw	170
  5178  064D  318E  260B         	fcall	_EUSART_Write
  5179  064F  0008               	return
  5180  0650                     __end_of_Read_Offset:	
  5181                           ;mpu_iic.c: 215: return;
  5182                           
  5183                           
  5184                           	psect	text11
  5185  056A                     __ptext11:	
  5186 ;; *************** function ___aldiv *****************
  5187 ;; Defined at:
  5188 ;;		line 5 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  divisor         4    0[BANK1 ] long 
  5191 ;;  dividend        4    4[BANK1 ] long 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  quotient        4   11[BANK1 ] long 
  5194 ;;  sign            1   10[BANK1 ] unsigned char 
  5195 ;;  counter         1    9[BANK1 ] unsigned char 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  4    0[BANK1 ] long 
  5198 ;; Registers used:
  5199 ;;		wreg, status,2, status,0
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5205 ;;      Params:         0       0       8       0       0       0       0       0
  5206 ;;      Locals:         0       0       6       0       0       0       0       0
  5207 ;;      Temps:          0       0       1       0       0       0       0       0
  5208 ;;      Totals:         0       0      15       0       0       0       0       0
  5209 ;;Total ram usage:       15 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:    7
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_Read_Offset
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           
  5220                           ;psect for function ___aldiv
  5221  056A                     ___aldiv:	
  5222                           
  5223                           ;incstack = 0
  5224                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  5225  056A  0141               	movlb	1	; select bank1
  5226  056B  01D0               	clrf	___aldiv@sign^(0+128)
  5227  056C  1FC9               	btfss	(___aldiv@divisor+3)^(0+128),7
  5228  056D  2D7B               	goto	l560
  5229  056E  09C6               	comf	___aldiv@divisor^(0+128),f
  5230  056F  09C7               	comf	(___aldiv@divisor+1)^(0+128),f
  5231  0570  09C8               	comf	(___aldiv@divisor+2)^(0+128),f
  5232  0571  09C9               	comf	(___aldiv@divisor+3)^(0+128),f
  5233  0572  0AC6               	incf	___aldiv@divisor^(0+128),f
  5234  0573  1903               	skipnz
  5235  0574  0AC7               	incf	(___aldiv@divisor+1)^(0+128),f
  5236  0575  1903               	skipnz
  5237  0576  0AC8               	incf	(___aldiv@divisor+2)^(0+128),f
  5238  0577  1903               	skipnz
  5239  0578  0AC9               	incf	(___aldiv@divisor+3)^(0+128),f
  5240  0579  01D0               	clrf	___aldiv@sign^(0+128)
  5241  057A  0AD0               	incf	___aldiv@sign^(0+128),f
  5242  057B                     l560:	
  5243  057B  1FCD               	btfss	(___aldiv@dividend+3)^(0+128),7
  5244  057C  2D8C               	goto	l2233
  5245  057D  09CA               	comf	___aldiv@dividend^(0+128),f
  5246  057E  09CB               	comf	(___aldiv@dividend+1)^(0+128),f
  5247  057F  09CC               	comf	(___aldiv@dividend+2)^(0+128),f
  5248  0580  09CD               	comf	(___aldiv@dividend+3)^(0+128),f
  5249  0581  0ACA               	incf	___aldiv@dividend^(0+128),f
  5250  0582  1903               	skipnz
  5251  0583  0ACB               	incf	(___aldiv@dividend+1)^(0+128),f
  5252  0584  1903               	skipnz
  5253  0585  0ACC               	incf	(___aldiv@dividend+2)^(0+128),f
  5254  0586  1903               	skipnz
  5255  0587  0ACD               	incf	(___aldiv@dividend+3)^(0+128),f
  5256  0588  3001               	movlw	1
  5257  0589  00CE               	movwf	??___aldiv^(0+128)
  5258  058A  084E               	movf	??___aldiv^(0+128),w
  5259  058B  06D0               	xorwf	___aldiv@sign^(0+128),f
  5260  058C                     l2233:	
  5261  058C  3000               	movlw	0
  5262  058D  00D4               	movwf	(___aldiv@quotient+3)^(0+128)
  5263  058E  3000               	movlw	0
  5264  058F  00D3               	movwf	(___aldiv@quotient+2)^(0+128)
  5265  0590  3000               	movlw	0
  5266  0591  00D2               	movwf	(___aldiv@quotient+1)^(0+128)
  5267  0592  3000               	movlw	0
  5268  0593  00D1               	movwf	___aldiv@quotient^(0+128)
  5269  0594  0849               	movf	(___aldiv@divisor+3)^(0+128),w
  5270  0595  0448               	iorwf	(___aldiv@divisor+2)^(0+128),w
  5271  0596  0447               	iorwf	(___aldiv@divisor+1)^(0+128),w
  5272  0597  0446               	iorwf	___aldiv@divisor^(0+128),w
  5273  0598  1903               	skipnz
  5274  0599  2DD5               	goto	l2255
  5275  059A  01CF               	clrf	___aldiv@counter^(0+128)
  5276  059B  0ACF               	incf	___aldiv@counter^(0+128),f
  5277  059C                     l2241:	
  5278  059C  1BC9               	btfsc	(___aldiv@divisor+3)^(0+128),7
  5279  059D  2DAA               	goto	l2243
  5280  059E  3001               	movlw	1
  5281  059F                     u1845:	
  5282  059F  35C6               	lslf	___aldiv@divisor^(0+128),f
  5283  05A0  0DC7               	rlf	(___aldiv@divisor+1)^(0+128),f
  5284  05A1  0DC8               	rlf	(___aldiv@divisor+2)^(0+128),f
  5285  05A2  0DC9               	rlf	(___aldiv@divisor+3)^(0+128),f
  5286  05A3  0B89               	decfsz	9,f
  5287  05A4  2D9F               	goto	u1845
  5288  05A5  3001               	movlw	1
  5289  05A6  00CE               	movwf	??___aldiv^(0+128)
  5290  05A7  084E               	movf	??___aldiv^(0+128),w
  5291  05A8  07CF               	addwf	___aldiv@counter^(0+128),f
  5292  05A9  2D9C               	goto	l2241
  5293  05AA                     l2243:	
  5294  05AA  3001               	movlw	1
  5295  05AB                     u1865:	
  5296  05AB  35D1               	lslf	___aldiv@quotient^(0+128),f
  5297  05AC  0DD2               	rlf	(___aldiv@quotient+1)^(0+128),f
  5298  05AD  0DD3               	rlf	(___aldiv@quotient+2)^(0+128),f
  5299  05AE  0DD4               	rlf	(___aldiv@quotient+3)^(0+128),f
  5300  05AF  0B89               	decfsz	9,f
  5301  05B0  2DAB               	goto	u1865
  5302  05B1  0849               	movf	(___aldiv@divisor+3)^(0+128),w
  5303  05B2  024D               	subwf	(___aldiv@dividend+3)^(0+128),w
  5304  05B3  1D03               	skipz
  5305  05B4  2DBF               	goto	u1875
  5306  05B5  0848               	movf	(___aldiv@divisor+2)^(0+128),w
  5307  05B6  024C               	subwf	(___aldiv@dividend+2)^(0+128),w
  5308  05B7  1D03               	skipz
  5309  05B8  2DBF               	goto	u1875
  5310  05B9  0847               	movf	(___aldiv@divisor+1)^(0+128),w
  5311  05BA  024B               	subwf	(___aldiv@dividend+1)^(0+128),w
  5312  05BB  1D03               	skipz
  5313  05BC  2DBF               	goto	u1875
  5314  05BD  0846               	movf	___aldiv@divisor^(0+128),w
  5315  05BE  024A               	subwf	___aldiv@dividend^(0+128),w
  5316  05BF                     u1875:	
  5317  05BF  1C03               	skipc
  5318  05C0  2DCA               	goto	l2251
  5319  05C1  0846               	movf	___aldiv@divisor^(0+128),w
  5320  05C2  02CA               	subwf	___aldiv@dividend^(0+128),f
  5321  05C3  0847               	movf	(___aldiv@divisor+1)^(0+128),w
  5322  05C4  3BCB               	subwfb	(___aldiv@dividend+1)^(0+128),f
  5323  05C5  0848               	movf	(___aldiv@divisor+2)^(0+128),w
  5324  05C6  3BCC               	subwfb	(___aldiv@dividend+2)^(0+128),f
  5325  05C7  0849               	movf	(___aldiv@divisor+3)^(0+128),w
  5326  05C8  3BCD               	subwfb	(___aldiv@dividend+3)^(0+128),f
  5327  05C9  1451               	bsf	___aldiv@quotient^(0+128),0
  5328  05CA                     l2251:	
  5329  05CA  3001               	movlw	1
  5330  05CB                     u1885:	
  5331  05CB  36C9               	lsrf	(___aldiv@divisor+3)^(0+128),f
  5332  05CC  0CC8               	rrf	(___aldiv@divisor+2)^(0+128),f
  5333  05CD  0CC7               	rrf	(___aldiv@divisor+1)^(0+128),f
  5334  05CE  0CC6               	rrf	___aldiv@divisor^(0+128),f
  5335  05CF  0B89               	decfsz	9,f
  5336  05D0  2DCB               	goto	u1885
  5337  05D1  3001               	movlw	1
  5338  05D2  02CF               	subwf	___aldiv@counter^(0+128),f
  5339  05D3  1D03               	btfss	3,2
  5340  05D4  2DAA               	goto	l2243
  5341  05D5                     l2255:	
  5342  05D5  0850               	movf	___aldiv@sign^(0+128),w
  5343  05D6  1903               	btfsc	3,2
  5344  05D7  2DE3               	goto	l2259
  5345  05D8  09D1               	comf	___aldiv@quotient^(0+128),f
  5346  05D9  09D2               	comf	(___aldiv@quotient+1)^(0+128),f
  5347  05DA  09D3               	comf	(___aldiv@quotient+2)^(0+128),f
  5348  05DB  09D4               	comf	(___aldiv@quotient+3)^(0+128),f
  5349  05DC  0AD1               	incf	___aldiv@quotient^(0+128),f
  5350  05DD  1903               	skipnz
  5351  05DE  0AD2               	incf	(___aldiv@quotient+1)^(0+128),f
  5352  05DF  1903               	skipnz
  5353  05E0  0AD3               	incf	(___aldiv@quotient+2)^(0+128),f
  5354  05E1  1903               	skipnz
  5355  05E2  0AD4               	incf	(___aldiv@quotient+3)^(0+128),f
  5356  05E3                     l2259:	
  5357  05E3  0854               	movf	(___aldiv@quotient+3)^(0+128),w
  5358  05E4  00C9               	movwf	(?___aldiv+3)^(0+128)
  5359  05E5  0853               	movf	(___aldiv@quotient+2)^(0+128),w
  5360  05E6  00C8               	movwf	(?___aldiv+2)^(0+128)
  5361  05E7  0852               	movf	(___aldiv@quotient+1)^(0+128),w
  5362  05E8  00C7               	movwf	(?___aldiv+1)^(0+128)
  5363  05E9  0851               	movf	___aldiv@quotient^(0+128),w
  5364  05EA  00C6               	movwf	?___aldiv^(0+128)
  5365  05EB  0008               	return
  5366  05EC                     __end_of___aldiv:	
  5367                           
  5368                           	psect	text12
  5369  0D9B                     __ptext12:	
  5370 ;; *************** function _Get6500Data *****************
  5371 ;; Defined at:
  5372 ;;		line 191 in file "src/mpu_iic.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  REG_Address     1    wreg     unsigned char 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  REG_Address     1   17[BANK1 ] unsigned char 
  5377 ;;  L               1   16[BANK1 ] unsigned char 
  5378 ;;  H               1   15[BANK1 ] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  2    8[BANK1 ] int 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0, pclath, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5388 ;;      Params:         0       0       2       0       0       0       0       0
  5389 ;;      Locals:         0       0       3       0       0       0       0       0
  5390 ;;      Temps:          0       0       5       0       0       0       0       0
  5391 ;;      Totals:         0       0      10       0       0       0       0       0
  5392 ;;Total ram usage:       10 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    9
  5395 ;; This function calls:
  5396 ;;		_Com_Lock_MPU_RD_Reg
  5397 ;; This function is called by:
  5398 ;;		_Read_Offset
  5399 ;;		_Test_Sleep_Mpu6500
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           
  5404                           ;psect for function _Get6500Data
  5405  0D9B                     _Get6500Data:	
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in _Get6500Data: [wreg+status,2+status,0+pclath+cstack]
  5409                           ;Get6500Data@REG_Address stored from wreg
  5410  0D9B  0141               	movlb	1	; select bank1
  5411  0D9C  00D7               	movwf	Get6500Data@REG_Address^(0+128)
  5412                           
  5413                           ;mpu_iic.c: 193: char H,L;;mpu_iic.c: 194: H=Com_Lock_MPU_RD_Reg(REG_Address);
  5414  0D9D  0857               	movf	Get6500Data@REG_Address^(0+128),w
  5415  0D9E  318E  2636  318D   	fcall	_Com_Lock_MPU_RD_Reg
  5416  0DA1  0141               	movlb	1	; select bank1
  5417  0DA2  00D0               	movwf	??_Get6500Data^(0+128)
  5418  0DA3  0850               	movf	??_Get6500Data^(0+128),w
  5419  0DA4  00D5               	movwf	Get6500Data@H^(0+128)
  5420                           
  5421                           ;mpu_iic.c: 195: L=Com_Lock_MPU_RD_Reg(REG_Address+1);
  5422  0DA5  0857               	movf	Get6500Data@REG_Address^(0+128),w
  5423  0DA6  3E01               	addlw	1
  5424  0DA7  318E  2636         	fcall	_Com_Lock_MPU_RD_Reg
  5425  0DA9  0141               	movlb	1	; select bank1
  5426  0DAA  00D0               	movwf	??_Get6500Data^(0+128)
  5427  0DAB  0850               	movf	??_Get6500Data^(0+128),w
  5428  0DAC  00D6               	movwf	Get6500Data@L^(0+128)
  5429                           
  5430                           ;mpu_iic.c: 196: return (H<<8)+L;
  5431  0DAD  0856               	movf	Get6500Data@L^(0+128),w
  5432  0DAE  00D0               	movwf	??_Get6500Data^(0+128)
  5433  0DAF  01D1               	clrf	(??_Get6500Data^(0+128)+1)
  5434  0DB0  0855               	movf	Get6500Data@H^(0+128),w
  5435  0DB1  00D2               	movwf	(??_Get6500Data+2)^(0+128)
  5436  0DB2  01D3               	clrf	((??_Get6500Data+2)^(0+128)+1)
  5437  0DB3  0852               	movf	(??_Get6500Data+2)^(0+128),w
  5438  0DB4  00D3               	movwf	((??_Get6500Data+2)^(0+128)+1)
  5439  0DB5  01D2               	clrf	(??_Get6500Data+2)^(0+128)
  5440  0DB6  0850               	movf	??_Get6500Data^(0+128),w
  5441  0DB7  0752               	addwf	(??_Get6500Data+2)^(0+128),w
  5442  0DB8  00CE               	movwf	?_Get6500Data^(0+128)
  5443  0DB9  0851               	movf	(??_Get6500Data+1)^(0+128),w
  5444  0DBA  3D53               	addwfc	(??_Get6500Data+3)^(0+128),w
  5445  0DBB  00CF               	movwf	(?_Get6500Data+1)^(0+128)
  5446  0DBC  0008               	return
  5447  0DBD                     __end_of_Get6500Data:	
  5448                           
  5449                           	psect	text13
  5450  0E36                     __ptext13:	
  5451 ;; *************** function _Com_Lock_MPU_RD_Reg *****************
  5452 ;; Defined at:
  5453 ;;		line 174 in file "src/mpu_iic.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  addr            1    wreg     unsigned char 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  addr            1    6[BANK1 ] unsigned char 
  5458 ;;  temp            1    7[BANK1 ] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      unsigned char 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0, pclath, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5468 ;;      Params:         0       0       0       0       0       0       0       0
  5469 ;;      Locals:         0       0       2       0       0       0       0       0
  5470 ;;      Temps:          0       0       1       0       0       0       0       0
  5471 ;;      Totals:         0       0       3       0       0       0       0       0
  5472 ;;Total ram usage:        3 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    8
  5475 ;; This function calls:
  5476 ;;		_Com_Lock_IIC_Read_Data
  5477 ;;		_Com_Lock_IIC_Start
  5478 ;;		_Com_Lock_IIC_Stop
  5479 ;;		_Com_Lock_IIC_Write_Data
  5480 ;; This function is called by:
  5481 ;;		_Get6500Data
  5482 ;;		_Init_MPU6500
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function _Com_Lock_MPU_RD_Reg
  5488  0E36                     _Com_Lock_MPU_RD_Reg:	
  5489                           
  5490                           ;incstack = 0
  5491                           ; Regs used in _Com_Lock_MPU_RD_Reg: [wreg+status,2+status,0+pclath+cstack]
  5492                           ;Com_Lock_MPU_RD_Reg@addr stored from wreg
  5493  0E36  0141               	movlb	1	; select bank1
  5494  0E37  00CC               	movwf	Com_Lock_MPU_RD_Reg@addr^(0+128)
  5495                           
  5496                           ;mpu_iic.c: 176: uint8_t temp=0;
  5497  0E38  01CD               	clrf	Com_Lock_MPU_RD_Reg@temp^(0+128)
  5498                           
  5499                           ;mpu_iic.c: 177: Com_Lock_IIC_Start();
  5500  0E39  318C  24AD  318E   	fcall	_Com_Lock_IIC_Start
  5501                           
  5502                           ;mpu_iic.c: 178: temp = Com_Lock_IIC_Write_Data(0xD0);
  5503  0E3C  30D0               	movlw	208
  5504  0E3D  3187  27AA  318E   	fcall	_Com_Lock_IIC_Write_Data
  5505  0E40  0141               	movlb	1	; select bank1
  5506  0E41  00CB               	movwf	??_Com_Lock_MPU_RD_Reg^(0+128)
  5507  0E42  084B               	movf	??_Com_Lock_MPU_RD_Reg^(0+128),w
  5508  0E43  00CD               	movwf	Com_Lock_MPU_RD_Reg@temp^(0+128)
  5509                           
  5510                           ;mpu_iic.c: 179: temp = Com_Lock_IIC_Write_Data(addr);
  5511  0E44  084C               	movf	Com_Lock_MPU_RD_Reg@addr^(0+128),w
  5512  0E45  3187  27AA  318E   	fcall	_Com_Lock_IIC_Write_Data
  5513  0E48  0141               	movlb	1	; select bank1
  5514  0E49  00CB               	movwf	??_Com_Lock_MPU_RD_Reg^(0+128)
  5515  0E4A  084B               	movf	??_Com_Lock_MPU_RD_Reg^(0+128),w
  5516  0E4B  00CD               	movwf	Com_Lock_MPU_RD_Reg@temp^(0+128)
  5517                           
  5518                           ;mpu_iic.c: 180: Com_Lock_IIC_Start();
  5519  0E4C  318C  24AD  318E   	fcall	_Com_Lock_IIC_Start
  5520                           
  5521                           ;mpu_iic.c: 181: temp = Com_Lock_IIC_Write_Data(0xD0+1);
  5522  0E4F  30D1               	movlw	209
  5523  0E50  3187  27AA  318E   	fcall	_Com_Lock_IIC_Write_Data
  5524  0E53  0141               	movlb	1	; select bank1
  5525  0E54  00CB               	movwf	??_Com_Lock_MPU_RD_Reg^(0+128)
  5526  0E55  084B               	movf	??_Com_Lock_MPU_RD_Reg^(0+128),w
  5527  0E56  00CD               	movwf	Com_Lock_MPU_RD_Reg@temp^(0+128)
  5528                           
  5529                           ;mpu_iic.c: 182: temp=Com_Lock_IIC_Read_Data(0);
  5530  0E57  3000               	movlw	0
  5531  0E58  3187  2713  318E   	fcall	_Com_Lock_IIC_Read_Data
  5532  0E5B  0141               	movlb	1	; select bank1
  5533  0E5C  00CB               	movwf	??_Com_Lock_MPU_RD_Reg^(0+128)
  5534  0E5D  084B               	movf	??_Com_Lock_MPU_RD_Reg^(0+128),w
  5535  0E5E  00CD               	movwf	Com_Lock_MPU_RD_Reg@temp^(0+128)
  5536                           
  5537                           ;mpu_iic.c: 183: Com_Lock_IIC_Stop();
  5538  0E5F  318C  248C         	fcall	_Com_Lock_IIC_Stop
  5539                           
  5540                           ;mpu_iic.c: 184: return temp;
  5541  0E61  0141               	movlb	1	; select bank1
  5542  0E62  084D               	movf	Com_Lock_MPU_RD_Reg@temp^(0+128),w
  5543  0E63  0008               	return
  5544  0E64                     __end_of_Com_Lock_MPU_RD_Reg:	
  5545                           
  5546                           	psect	text14
  5547  0713                     __ptext14:	
  5548 ;; *************** function _Com_Lock_IIC_Read_Data *****************
  5549 ;; Defined at:
  5550 ;;		line 137 in file "src/mpu_iic.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;  ack             1    wreg     unsigned char 
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;  ack             1    1[BANK1 ] unsigned char 
  5555 ;;  i               2    3[BANK1 ] int 
  5556 ;;  retVal          1    2[BANK1 ] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      unsigned char 
  5559 ;; Registers used:
  5560 ;;		wreg, status,2, status,0
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5566 ;;      Params:         0       0       0       0       0       0       0       0
  5567 ;;      Locals:         0       0       4       0       0       0       0       0
  5568 ;;      Temps:          0       0       1       0       0       0       0       0
  5569 ;;      Totals:         0       0       5       0       0       0       0       0
  5570 ;;Total ram usage:        5 bytes
  5571 ;; Hardware stack levels used:    1
  5572 ;; Hardware stack levels required when called:    7
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_Com_Lock_MPU_RD_Reg
  5577 ;; This function uses a non-reentrant model
  5578 ;;
  5579                           
  5580                           
  5581                           ;psect for function _Com_Lock_IIC_Read_Data
  5582  0713                     _Com_Lock_IIC_Read_Data:	
  5583                           
  5584                           ;incstack = 0
  5585                           ; Regs used in _Com_Lock_IIC_Read_Data: [wreg+status,2+status,0]
  5586                           ;Com_Lock_IIC_Read_Data@ack stored from wreg
  5587  0713  0141               	movlb	1	; select bank1
  5588  0714  00C7               	movwf	Com_Lock_IIC_Read_Data@ack^(0+128)
  5589                           
  5590                           ;mpu_iic.c: 139: int i = 0;
  5591  0715  01C9               	clrf	Com_Lock_IIC_Read_Data@i^(0+128)
  5592  0716  01CA               	clrf	(Com_Lock_IIC_Read_Data@i+1)^(0+128)
  5593                           
  5594                           ;mpu_iic.c: 140: char retVal = 0;
  5595  0717  01C8               	clrf	Com_Lock_IIC_Read_Data@retVal^(0+128)
  5596                           
  5597                           ;mpu_iic.c: 141: PORTCbits.RC3 = 0;
  5598  0718  0140               	movlb	0	; select bank0
  5599  0719  118E               	bcf	14,3	;volatile
  5600                           
  5601                           ;mpu_iic.c: 142: TRISC |= 0x10;
  5602  071A  1614               	bsf	20,4	;volatile
  5603                           
  5604                           ;mpu_iic.c: 143: for(i = 0; i < 8; i++)
  5605  071B  0141               	movlb	1	; select bank1
  5606  071C  01C9               	clrf	Com_Lock_IIC_Read_Data@i^(0+128)
  5607  071D  01CA               	clrf	(Com_Lock_IIC_Read_Data@i+1)^(0+128)
  5608  071E  084A               	movf	(Com_Lock_IIC_Read_Data@i+1)^(0+128),w
  5609  071F  3A80               	xorlw	128
  5610  0720  00C6               	movwf	??_Com_Lock_IIC_Read_Data^(0+128)
  5611  0721  3080               	movlw	128
  5612  0722  0246               	subwf	??_Com_Lock_IIC_Read_Data^(0+128),w
  5613  0723  3008               	movlw	8
  5614  0724  1903               	btfsc	3,2
  5615  0725  0249               	subwf	Com_Lock_IIC_Read_Data@i^(0+128),w
  5616  0726  1803               	btfsc	3,0
  5617  0727  2F45               	goto	l2059
  5618  0728                     l299:	
  5619                           
  5620                           ;mpu_iic.c: 144: {;mpu_iic.c: 146: PORTCbits.RC3 = 1;
  5621  0728  0140               	movlb	0	; select bank0
  5622  0729  158E               	bsf	14,3	;volatile
  5623                           
  5624                           ;mpu_iic.c: 148: retVal <<= 1;
  5625  072A  1003               	clrc
  5626  072B  0141               	movlb	1	; select bank1
  5627  072C  0DC8               	rlf	Com_Lock_IIC_Read_Data@retVal^(0+128),f
  5628                           
  5629                           ;mpu_iic.c: 149: retVal |= PORTCbits.RC4;
  5630  072D  0140               	movlb	0	; select bank0
  5631  072E  0E0E               	swapf	14,w	;volatile
  5632  072F  3901               	andlw	1
  5633  0730  0141               	movlb	1	; select bank1
  5634  0731  00C6               	movwf	??_Com_Lock_IIC_Read_Data^(0+128)
  5635  0732  0846               	movf	??_Com_Lock_IIC_Read_Data^(0+128),w
  5636  0733  04C8               	iorwf	Com_Lock_IIC_Read_Data@retVal^(0+128),f
  5637                           
  5638                           ;mpu_iic.c: 150: PORTCbits.RC3 = 0;
  5639  0734  0140               	movlb	0	; select bank0
  5640  0735  118E               	bcf	14,3	;volatile
  5641  0736  3001               	movlw	1
  5642  0737  0141               	movlb	1	; select bank1
  5643  0738  07C9               	addwf	Com_Lock_IIC_Read_Data@i^(0+128),f
  5644  0739  3000               	movlw	0
  5645  073A  3DCA               	addwfc	(Com_Lock_IIC_Read_Data@i+1)^(0+128),f
  5646  073B  084A               	movf	(Com_Lock_IIC_Read_Data@i+1)^(0+128),w
  5647  073C  3A80               	xorlw	128
  5648  073D  00C6               	movwf	??_Com_Lock_IIC_Read_Data^(0+128)
  5649  073E  3080               	movlw	128
  5650  073F  0246               	subwf	??_Com_Lock_IIC_Read_Data^(0+128),w
  5651  0740  3008               	movlw	8
  5652  0741  1903               	btfsc	3,2
  5653  0742  0249               	subwf	Com_Lock_IIC_Read_Data@i^(0+128),w
  5654  0743  1C03               	skipc
  5655  0744  2F28               	goto	l299
  5656  0745                     l2059:	
  5657                           
  5658                           ;mpu_iic.c: 151: };mpu_iic.c: 152: TRISC &= 0xEF;
  5659  0745  30EF               	movlw	239
  5660  0746  0141               	movlb	1	; select bank1
  5661  0747  00C6               	movwf	??_Com_Lock_IIC_Read_Data^(0+128)
  5662  0748  0846               	movf	??_Com_Lock_IIC_Read_Data^(0+128),w
  5663  0749  0140               	movlb	0	; select bank0
  5664  074A  0594               	andwf	20,f	;volatile
  5665                           
  5666                           ;mpu_iic.c: 154: if(ack)
  5667  074B  0141               	movlb	1	; select bank1
  5668  074C  0847               	movf	Com_Lock_IIC_Read_Data@ack^(0+128),w
  5669  074D  1903               	btfsc	3,2
  5670  074E  2F52               	goto	l301
  5671                           
  5672                           ;mpu_iic.c: 155: {;mpu_iic.c: 156: PORTCbits.RC4 = 0;
  5673  074F  0140               	movlb	0	; select bank0
  5674  0750  120E               	bcf	14,4	;volatile
  5675                           
  5676                           ;mpu_iic.c: 157: }
  5677  0751  2F54               	goto	l302
  5678  0752                     l301:	
  5679                           
  5680                           ;mpu_iic.c: 159: else;mpu_iic.c: 160: {;mpu_iic.c: 161: PORTCbits.RC4 = 1;
  5681  0752  0140               	movlb	0	; select bank0
  5682  0753  160E               	bsf	14,4	;volatile
  5683  0754                     l302:	
  5684                           
  5685                           ;mpu_iic.c: 162: };mpu_iic.c: 163: _delay((unsigned long)((2)*(8000000/4000000.0)));
  5686  0754  3200               	nop2	;2 cycle nop
  5687  0755  3200               	nop2	;2 cycle nop
  5688                           
  5689                           ;mpu_iic.c: 164: PORTCbits.RC3 = 1;
  5690  0756  0140               	movlb	0	; select bank0
  5691  0757  158E               	bsf	14,3	;volatile
  5692                           
  5693                           ;mpu_iic.c: 165: _delay((unsigned long)((2)*(8000000/4000000.0)));
  5694  0758  3200               	nop2	;2 cycle nop
  5695  0759  3200               	nop2	;2 cycle nop
  5696                           
  5697                           ;mpu_iic.c: 166: PORTCbits.RC3 = 0;
  5698  075A  0140               	movlb	0	; select bank0
  5699  075B  118E               	bcf	14,3	;volatile
  5700                           
  5701                           ;mpu_iic.c: 167: return retVal;
  5702  075C  0141               	movlb	1	; select bank1
  5703  075D  0848               	movf	Com_Lock_IIC_Read_Data@retVal^(0+128),w
  5704  075E  0008               	return
  5705  075F                     __end_of_Com_Lock_IIC_Read_Data:	
  5706                           
  5707                           	psect	text15
  5708  0E0B                     __ptext15:	
  5709 ;; *************** function _EUSART_Write *****************
  5710 ;; Defined at:
  5711 ;;		line 144 in file "src/eusart.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  txData          1    wreg     unsigned char 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  txData          1    1[BANK1 ] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5725 ;;      Params:         0       0       0       0       0       0       0       0
  5726 ;;      Locals:         0       0       1       0       0       0       0       0
  5727 ;;      Temps:          0       0       1       0       0       0       0       0
  5728 ;;      Totals:         0       0       2       0       0       0       0       0
  5729 ;;Total ram usage:        2 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    7
  5732 ;; This function calls:
  5733 ;;		Nothing
  5734 ;; This function is called by:
  5735 ;;		_Read_Offset
  5736 ;;		_main
  5737 ;;		_Test_Sleep_Mpu6500
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           
  5742                           ;psect for function _EUSART_Write
  5743  0E0B                     _EUSART_Write:	
  5744                           
  5745                           ;incstack = 0
  5746                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  5747                           ;EUSART_Write@txData stored from wreg
  5748  0E0B  0141               	movlb	1	; select bank1
  5749  0E0C  00C7               	movwf	EUSART_Write@txData^(0+128)
  5750  0E0D                     l2195:	
  5751                           ;eusart.c: 147: {
  5752                           
  5753                           ;eusart.c: 146: while(0 == eusartTxBufferRemaining)
  5754                           
  5755  0E0D  0140               	movlb	0	; select bank0
  5756  0E0E  086C               	movf	_eusartTxBufferRemaining,w	;volatile
  5757  0E0F  1903               	btfsc	3,2
  5758  0E10  2E0D               	goto	l2195
  5759  0E11                     l161:	
  5760                           ;eusart.c: 150: {
  5761                           
  5762                           ;eusart.c: 148: };eusart.c: 149: while(!(TX1STA&0x02))
  5763                           
  5764  0E11  0142               	movlb	2	; select bank2
  5765  0E12  1C9E               	btfss	30,1	;volatile
  5766  0E13  2E11               	goto	l161
  5767                           
  5768                           ;eusart.c: 152: };eusart.c: 153: if(0 == PIE3bits.TX1IE)
  5769  0E14  014E               	movlb	14	; select bank14
  5770  0E15  1A19               	btfsc	25,4	;volatile
  5771  0E16  2E1C               	goto	l164
  5772                           
  5773                           ;eusart.c: 154: {;eusart.c: 155: TX1REG = txData;
  5774  0E17  0141               	movlb	1	; select bank1
  5775  0E18  0847               	movf	EUSART_Write@txData^(0+128),w
  5776  0E19  0142               	movlb	2	; select bank2
  5777  0E1A  009A               	movwf	26	;volatile
  5778                           
  5779                           ;eusart.c: 156: }
  5780  0E1B  0008               	return
  5781  0E1C                     l164:	
  5782                           
  5783                           ;eusart.c: 157: else;eusart.c: 158: {;eusart.c: 159: PIE3bits.TX1IE = 0;
  5784  0E1C  1219               	bcf	25,4	;volatile
  5785                           
  5786                           ;eusart.c: 160: eusartTxBuffer[eusartTxHead++] = txData;
  5787  0E1D  0141               	movlb	1	; select bank1
  5788  0E1E  0847               	movf	EUSART_Write@txData^(0+128),w
  5789  0E1F  00C6               	movwf	??_EUSART_Write^(0+128)
  5790  0E20  0140               	movlb	0	; select bank0
  5791  0E21  086B               	movf	_eusartTxHead,w
  5792  0E22  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5793  0E23  0086               	movwf	6
  5794  0E24  0187               	clrf	7
  5795  0E25  0141               	movlb	1	; select bank1
  5796  0E26  0846               	movf	??_EUSART_Write^(0+128),w
  5797  0E27  0081               	movwf	1
  5798  0E28  3001               	movlw	1
  5799  0E29  00C6               	movwf	??_EUSART_Write^(0+128)
  5800  0E2A  0846               	movf	??_EUSART_Write^(0+128),w
  5801  0E2B  0140               	movlb	0	; select bank0
  5802  0E2C  07EB               	addwf	_eusartTxHead,f
  5803                           
  5804                           ;eusart.c: 161: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5805  0E2D  3008               	movlw	8
  5806  0E2E  026B               	subwf	_eusartTxHead,w
  5807  0E2F  1803               	btfsc	3,0
  5808                           
  5809                           ;eusart.c: 162: {;eusart.c: 163: eusartTxHead = 0;
  5810  0E30  01EB               	clrf	_eusartTxHead
  5811                           
  5812                           ;eusart.c: 164: };eusart.c: 165: eusartTxBufferRemaining--;
  5813  0E31  3001               	movlw	1
  5814  0E32  02EC               	subwf	_eusartTxBufferRemaining,f	;volatile
  5815                           
  5816                           ;eusart.c: 166: PIE3bits.TX1IE = 1;
  5817  0E33  014E               	movlb	14	; select bank14
  5818  0E34  1619               	bsf	25,4	;volatile
  5819  0E35  0008               	return
  5820  0E36                     __end_of_EUSART_Write:	
  5821                           
  5822                           	psect	text16
  5823  0CE9                     __ptext16:	
  5824 ;; *************** function _Com_Lock_MPU_Write_Command *****************
  5825 ;; Defined at:
  5826 ;;		line 121 in file "src/mpu_iic.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  reg             1    wreg     unsigned char 
  5829 ;;  data            1    5[BANK1 ] unsigned char 
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;  reg             1    6[BANK1 ] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0, pclath, cstack
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5841 ;;      Params:         0       0       1       0       0       0       0       0
  5842 ;;      Locals:         0       0       1       0       0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0
  5844 ;;      Totals:         0       0       2       0       0       0       0       0
  5845 ;;Total ram usage:        2 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    8
  5848 ;; This function calls:
  5849 ;;		_Com_Lock_IIC_Start
  5850 ;;		_Com_Lock_IIC_Stop
  5851 ;;		_Com_Lock_IIC_Write_Data
  5852 ;; This function is called by:
  5853 ;;		_Init_MPU6500
  5854 ;;		_Test_Sleep_Mpu6500
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function _Com_Lock_MPU_Write_Command
  5860  0CE9                     _Com_Lock_MPU_Write_Command:	
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in _Com_Lock_MPU_Write_Command: [wreg+status,2+status,0+pclath+cstack]
  5864                           ;Com_Lock_MPU_Write_Command@reg stored from wreg
  5865  0CE9  0141               	movlb	1	; select bank1
  5866  0CEA  00CC               	movwf	Com_Lock_MPU_Write_Command@reg^(0+128)
  5867                           
  5868                           ;mpu_iic.c: 123: Com_Lock_IIC_Start();
  5869  0CEB  318C  24AD  318C   	fcall	_Com_Lock_IIC_Start
  5870                           
  5871                           ;mpu_iic.c: 124: Com_Lock_IIC_Write_Data(0xD0);
  5872  0CEE  30D0               	movlw	208
  5873  0CEF  3187  27AA  318C   	fcall	_Com_Lock_IIC_Write_Data
  5874                           
  5875                           ;mpu_iic.c: 125: Com_Lock_IIC_Write_Data(reg);
  5876  0CF2  0141               	movlb	1	; select bank1
  5877  0CF3  084C               	movf	Com_Lock_MPU_Write_Command@reg^(0+128),w
  5878  0CF4  3187  27AA  318C   	fcall	_Com_Lock_IIC_Write_Data
  5879                           
  5880                           ;mpu_iic.c: 126: Com_Lock_IIC_Write_Data(data);
  5881  0CF7  0141               	movlb	1	; select bank1
  5882  0CF8  084B               	movf	Com_Lock_MPU_Write_Command@data^(0+128),w
  5883  0CF9  3187  27AA  318C   	fcall	_Com_Lock_IIC_Write_Data
  5884                           
  5885                           ;mpu_iic.c: 127: Com_Lock_IIC_Stop();
  5886  0CFC  318C  248C         	fcall	_Com_Lock_IIC_Stop
  5887  0CFE  0008               	return
  5888  0CFF                     __end_of_Com_Lock_MPU_Write_Command:	
  5889                           
  5890                           	psect	text17
  5891  07AA                     __ptext17:	
  5892 ;; *************** function _Com_Lock_IIC_Write_Data *****************
  5893 ;; Defined at:
  5894 ;;		line 77 in file "src/mpu_iic.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  dat             1    wreg     unsigned char 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  dat             1    1[BANK1 ] unsigned char 
  5899 ;;  i               2    3[BANK1 ] int 
  5900 ;;  retVal          1    2[BANK1 ] unsigned char 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      unsigned char 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5910 ;;      Params:         0       0       0       0       0       0       0       0
  5911 ;;      Locals:         0       0       4       0       0       0       0       0
  5912 ;;      Temps:          0       0       1       0       0       0       0       0
  5913 ;;      Totals:         0       0       5       0       0       0       0       0
  5914 ;;Total ram usage:        5 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    7
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_Com_Lock_MPU_Write_Command
  5921 ;;		_Com_Lock_MPU_RD_Reg
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           
  5926                           ;psect for function _Com_Lock_IIC_Write_Data
  5927  07AA                     _Com_Lock_IIC_Write_Data:	
  5928                           
  5929                           ;incstack = 0
  5930                           ; Regs used in _Com_Lock_IIC_Write_Data: [wreg+status,2+status,0]
  5931                           ;Com_Lock_IIC_Write_Data@dat stored from wreg
  5932  07AA  0141               	movlb	1	; select bank1
  5933  07AB  00C7               	movwf	Com_Lock_IIC_Write_Data@dat^(0+128)
  5934                           
  5935                           ;mpu_iic.c: 79: int i = 0;
  5936  07AC  01C9               	clrf	Com_Lock_IIC_Write_Data@i^(0+128)
  5937  07AD  01CA               	clrf	(Com_Lock_IIC_Write_Data@i+1)^(0+128)
  5938                           
  5939                           ;mpu_iic.c: 80: char retVal;;mpu_iic.c: 81: for(i = 0; i < 8; )
  5940  07AE  01C9               	clrf	Com_Lock_IIC_Write_Data@i^(0+128)
  5941  07AF  01CA               	clrf	(Com_Lock_IIC_Write_Data@i+1)^(0+128)
  5942  07B0  084A               	movf	(Com_Lock_IIC_Write_Data@i+1)^(0+128),w
  5943  07B1  3A80               	xorlw	128
  5944  07B2  00C6               	movwf	??_Com_Lock_IIC_Write_Data^(0+128)
  5945  07B3  3080               	movlw	128
  5946  07B4  0246               	subwf	??_Com_Lock_IIC_Write_Data^(0+128),w
  5947  07B5  3008               	movlw	8
  5948  07B6  1903               	btfsc	3,2
  5949  07B7  0249               	subwf	Com_Lock_IIC_Write_Data@i^(0+128),w
  5950  07B8  1803               	btfsc	3,0
  5951  07B9  2FD8               	goto	l290
  5952  07BA                     l289:	
  5953                           
  5954                           ;mpu_iic.c: 82: {;mpu_iic.c: 83: PORTCbits.RC3 = 0;
  5955  07BA  0140               	movlb	0	; select bank0
  5956  07BB  118E               	bcf	14,3	;volatile
  5957                           
  5958                           ;mpu_iic.c: 84: if(dat & 0x80)
  5959  07BC  0141               	movlb	1	; select bank1
  5960  07BD  1FC7               	btfss	Com_Lock_IIC_Write_Data@dat^(0+128),7
  5961  07BE  2FC2               	goto	l291
  5962                           
  5963                           ;mpu_iic.c: 85: {;mpu_iic.c: 86: PORTCbits.RC4 = 1;
  5964  07BF  0140               	movlb	0	; select bank0
  5965  07C0  160E               	bsf	14,4	;volatile
  5966                           
  5967                           ;mpu_iic.c: 87: }
  5968  07C1  2FC4               	goto	l2025
  5969  07C2                     l291:	
  5970                           
  5971                           ;mpu_iic.c: 88: else;mpu_iic.c: 89: {;mpu_iic.c: 90: PORTCbits.RC4 = 0;
  5972  07C2  0140               	movlb	0	; select bank0
  5973  07C3  120E               	bcf	14,4	;volatile
  5974  07C4                     l2025:	
  5975                           
  5976                           ;mpu_iic.c: 91: };mpu_iic.c: 92: dat <<= 1;
  5977  07C4  1003               	clrc
  5978  07C5  0141               	movlb	1	; select bank1
  5979  07C6  0DC7               	rlf	Com_Lock_IIC_Write_Data@dat^(0+128),f
  5980                           
  5981                           ;mpu_iic.c: 93: i++;
  5982  07C7  3001               	movlw	1
  5983  07C8  07C9               	addwf	Com_Lock_IIC_Write_Data@i^(0+128),f
  5984  07C9  3000               	movlw	0
  5985  07CA  3DCA               	addwfc	(Com_Lock_IIC_Write_Data@i+1)^(0+128),f
  5986                           
  5987                           ;mpu_iic.c: 95: PORTCbits.RC3 = 1;
  5988  07CB  0140               	movlb	0	; select bank0
  5989  07CC  158E               	bsf	14,3	;volatile
  5990  07CD  0141               	movlb	1	; select bank1
  5991  07CE  084A               	movf	(Com_Lock_IIC_Write_Data@i+1)^(0+128),w
  5992  07CF  3A80               	xorlw	128
  5993  07D0  00C6               	movwf	??_Com_Lock_IIC_Write_Data^(0+128)
  5994  07D1  3080               	movlw	128
  5995  07D2  0246               	subwf	??_Com_Lock_IIC_Write_Data^(0+128),w
  5996  07D3  3008               	movlw	8
  5997  07D4  1903               	btfsc	3,2
  5998  07D5  0249               	subwf	Com_Lock_IIC_Write_Data@i^(0+128),w
  5999  07D6  1C03               	skipc
  6000  07D7  2FBA               	goto	l289
  6001  07D8                     l290:	
  6002                           
  6003                           ;mpu_iic.c: 98: };mpu_iic.c: 99: PORTCbits.RC3 = 0;
  6004  07D8  0140               	movlb	0	; select bank0
  6005  07D9  118E               	bcf	14,3	;volatile
  6006                           
  6007                           ;mpu_iic.c: 101: TRISC |= 0x10;
  6008  07DA  1614               	bsf	20,4	;volatile
  6009                           
  6010                           ;mpu_iic.c: 102: _delay((unsigned long)((4)*(8000000/4000000.0)));
  6011  07DB  3200               	nop2	;2 cycle nop
  6012  07DC  3200               	nop2	;2 cycle nop
  6013  07DD  3200               	nop2	;2 cycle nop
  6014  07DE  3200               	nop2	;2 cycle nop
  6015                           
  6016                           ;mpu_iic.c: 105: PORTCbits.RC3 = 1;
  6017  07DF  0140               	movlb	0	; select bank0
  6018  07E0  158E               	bsf	14,3	;volatile
  6019                           
  6020                           ;mpu_iic.c: 106: _delay((unsigned long)((2)*(8000000/4000000.0)));
  6021  07E1  3200               	nop2	;2 cycle nop
  6022  07E2  3200               	nop2	;2 cycle nop
  6023                           
  6024                           ;mpu_iic.c: 107: retVal = PORTCbits.RC4;
  6025  07E3  3000               	movlw	0
  6026  07E4  0140               	movlb	0	; select bank0
  6027  07E5  1A0E               	btfsc	14,4	;volatile
  6028  07E6  3001               	movlw	1
  6029  07E7  0141               	movlb	1	; select bank1
  6030  07E8  00C8               	movwf	Com_Lock_IIC_Write_Data@retVal^(0+128)
  6031                           
  6032                           ;mpu_iic.c: 108: PORTCbits.RC3 = 0;
  6033  07E9  0140               	movlb	0	; select bank0
  6034  07EA  118E               	bcf	14,3	;volatile
  6035                           
  6036                           ;mpu_iic.c: 109: TRISC &= 0xEF;
  6037  07EB  30EF               	movlw	239
  6038  07EC  0141               	movlb	1	; select bank1
  6039  07ED  00C6               	movwf	??_Com_Lock_IIC_Write_Data^(0+128)
  6040  07EE  0846               	movf	??_Com_Lock_IIC_Write_Data^(0+128),w
  6041  07EF  0140               	movlb	0	; select bank0
  6042  07F0  0594               	andwf	20,f	;volatile
  6043                           
  6044                           ;mpu_iic.c: 110: return retVal;
  6045  07F1  0141               	movlb	1	; select bank1
  6046  07F2  0848               	movf	Com_Lock_IIC_Write_Data@retVal^(0+128),w
  6047  07F3  0008               	return
  6048  07F4                     __end_of_Com_Lock_IIC_Write_Data:	
  6049                           
  6050                           	psect	text18
  6051  0C8C                     __ptext18:	
  6052 ;; *************** function _Com_Lock_IIC_Stop *****************
  6053 ;; Defined at:
  6054 ;;		line 60 in file "src/mpu_iic.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;		None
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		None
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6068 ;;      Params:         0       0       0       0       0       0       0       0
  6069 ;;      Locals:         0       0       0       0       0       0       0       0
  6070 ;;      Temps:          0       0       0       0       0       0       0       0
  6071 ;;      Totals:         0       0       0       0       0       0       0       0
  6072 ;;Total ram usage:        0 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:    7
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_Com_Lock_MPU_Write_Command
  6079 ;;		_Com_Lock_MPU_RD_Reg
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           
  6084                           ;psect for function _Com_Lock_IIC_Stop
  6085  0C8C                     _Com_Lock_IIC_Stop:	
  6086                           
  6087                           ;mpu_iic.c: 62: PORTCbits.RC4 = 0;
  6088                           
  6089                           ;incstack = 0
  6090                           ; Regs used in _Com_Lock_IIC_Stop: []
  6091  0C8C  0140               	movlb	0	; select bank0
  6092  0C8D  120E               	bcf	14,4	;volatile
  6093                           
  6094                           ;mpu_iic.c: 63: _delay((unsigned long)((3)*(8000000/4000000.0)));
  6095  0C8E  3200               	nop2	;2 cycle nop
  6096  0C8F  3200               	nop2	;2 cycle nop
  6097  0C90  3200               	nop2	;2 cycle nop
  6098                           
  6099                           ;mpu_iic.c: 64: PORTCbits.RC3 = 1;
  6100  0C91  0140               	movlb	0	; select bank0
  6101  0C92  158E               	bsf	14,3	;volatile
  6102                           
  6103                           ;mpu_iic.c: 65: _delay((unsigned long)((3)*(8000000/4000000.0)));
  6104  0C93  3200               	nop2	;2 cycle nop
  6105  0C94  3200               	nop2	;2 cycle nop
  6106  0C95  3200               	nop2	;2 cycle nop
  6107                           
  6108                           ;mpu_iic.c: 66: PORTCbits.RC4 = 1;
  6109  0C96  0140               	movlb	0	; select bank0
  6110  0C97  160E               	bsf	14,4	;volatile
  6111                           
  6112                           ;mpu_iic.c: 67: _delay((unsigned long)((3)*(8000000/4000000.0)));
  6113  0C98  3200               	nop2	;2 cycle nop
  6114  0C99  3200               	nop2	;2 cycle nop
  6115  0C9A  3200               	nop2	;2 cycle nop
  6116  0C9B  0008               	return
  6117  0C9C                     __end_of_Com_Lock_IIC_Stop:	
  6118                           
  6119                           	psect	text19
  6120  0CAD                     __ptext19:	
  6121 ;; *************** function _Com_Lock_IIC_Start *****************
  6122 ;; Defined at:
  6123 ;;		line 40 in file "src/mpu_iic.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;		None
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      void 
  6130 ;; Registers used:
  6131 ;;		None
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6137 ;;      Params:         0       0       0       0       0       0       0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0       0       0       0
  6140 ;;      Totals:         0       0       0       0       0       0       0       0
  6141 ;;Total ram usage:        0 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    7
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_Com_Lock_MPU_Write_Command
  6148 ;;		_Com_Lock_MPU_RD_Reg
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           
  6153                           ;psect for function _Com_Lock_IIC_Start
  6154  0CAD                     _Com_Lock_IIC_Start:	
  6155                           
  6156                           ;mpu_iic.c: 42: PORTCbits.RC4 = 1;
  6157                           
  6158                           ;incstack = 0
  6159                           ; Regs used in _Com_Lock_IIC_Start: []
  6160  0CAD  0140               	movlb	0	; select bank0
  6161  0CAE  160E               	bsf	14,4	;volatile
  6162                           
  6163                           ;mpu_iic.c: 44: _delay((unsigned long)((2)*(8000000/4000000.0)));
  6164  0CAF  3200               	nop2	;2 cycle nop
  6165  0CB0  3200               	nop2	;2 cycle nop
  6166                           
  6167                           ;mpu_iic.c: 45: PORTCbits.RC3 = 1;
  6168  0CB1  0140               	movlb	0	; select bank0
  6169  0CB2  158E               	bsf	14,3	;volatile
  6170                           
  6171                           ;mpu_iic.c: 47: _delay((unsigned long)((3)*(8000000/4000000.0)));
  6172  0CB3  3200               	nop2	;2 cycle nop
  6173  0CB4  3200               	nop2	;2 cycle nop
  6174  0CB5  3200               	nop2	;2 cycle nop
  6175                           
  6176                           ;mpu_iic.c: 48: PORTCbits.RC4 = 0;
  6177  0CB6  0140               	movlb	0	; select bank0
  6178  0CB7  120E               	bcf	14,4	;volatile
  6179                           
  6180                           ;mpu_iic.c: 49: _delay((unsigned long)((3)*(8000000/4000000.0)));
  6181  0CB8  3200               	nop2	;2 cycle nop
  6182  0CB9  3200               	nop2	;2 cycle nop
  6183  0CBA  3200               	nop2	;2 cycle nop
  6184                           
  6185                           ;mpu_iic.c: 50: PORTCbits.RC3 = 0;
  6186  0CBB  0140               	movlb	0	; select bank0
  6187  0CBC  118E               	bcf	14,3	;volatile
  6188  0CBD  0008               	return
  6189  0CBE                     __end_of_Com_Lock_IIC_Start:	
  6190                           
  6191                           	psect	text20
  6192  0CFF                     __ptext20:	
  6193 ;; *************** function _EUSART_Initialize *****************
  6194 ;; Defined at:
  6195 ;;		line 77 in file "src/eusart.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;		None
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;		None
  6200 ;; Return value:  Size  Location     Type
  6201 ;;                  1    wreg      void 
  6202 ;; Registers used:
  6203 ;;		wreg, status,2
  6204 ;; Tracked objects:
  6205 ;;		On entry : 0/0
  6206 ;;		On exit  : 0/0
  6207 ;;		Unchanged: 0/0
  6208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6209 ;;      Params:         0       0       0       0       0       0       0       0
  6210 ;;      Locals:         0       0       0       0       0       0       0       0
  6211 ;;      Temps:          0       0       1       0       0       0       0       0
  6212 ;;      Totals:         0       0       1       0       0       0       0       0
  6213 ;;Total ram usage:        1 bytes
  6214 ;; Hardware stack levels used:    1
  6215 ;; Hardware stack levels required when called:    7
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_SYSTEM_Initialize
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           
  6224                           ;psect for function _EUSART_Initialize
  6225  0CFF                     _EUSART_Initialize:	
  6226                           
  6227                           ;eusart.c: 80: PIE3bits.RC1IE = 0;
  6228                           
  6229                           ;incstack = 0
  6230                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  6231  0CFF  014E               	movlb	14	; select bank14
  6232  0D00  1299               	bcf	25,5	;volatile
  6233                           
  6234                           ;eusart.c: 81: PIE3bits.TX1IE = 0;
  6235  0D01  1219               	bcf	25,4	;volatile
  6236                           
  6237                           ;eusart.c: 86: BAUD1CON = 0x48;
  6238  0D02  3048               	movlw	72
  6239  0D03  0142               	movlb	2	; select bank2
  6240  0D04  009F               	movwf	31	;volatile
  6241                           
  6242                           ;eusart.c: 89: RC1STA = 0x90;
  6243  0D05  3090               	movlw	144
  6244  0D06  009D               	movwf	29	;volatile
  6245                           
  6246                           ;eusart.c: 92: TX1STA = 0x24;
  6247  0D07  3024               	movlw	36
  6248  0D08  009E               	movwf	30	;volatile
  6249                           
  6250                           ;eusart.c: 95: SP1BRGL = 0x44;
  6251  0D09  3044               	movlw	68
  6252  0D0A  009B               	movwf	27	;volatile
  6253                           
  6254                           ;eusart.c: 98: SP1BRGH = 0x00;
  6255  0D0B  019C               	clrf	28	;volatile
  6256                           
  6257                           ;eusart.c: 102: eusartTxHead = 0;
  6258  0D0C  0140               	movlb	0	; select bank0
  6259  0D0D  01EB               	clrf	_eusartTxHead
  6260                           
  6261                           ;eusart.c: 103: eusartTxTail = 0;
  6262  0D0E  01EA               	clrf	_eusartTxTail
  6263                           
  6264                           ;eusart.c: 104: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  6265  0D0F  3008               	movlw	8
  6266  0D10  0141               	movlb	1	; select bank1
  6267  0D11  00C6               	movwf	??_EUSART_Initialize^(0+128)
  6268  0D12  0846               	movf	??_EUSART_Initialize^(0+128),w
  6269  0D13  0140               	movlb	0	; select bank0
  6270  0D14  00EC               	movwf	_eusartTxBufferRemaining	;volatile
  6271                           
  6272                           ;eusart.c: 106: eusartRxHead = 0;
  6273  0D15  01E9               	clrf	_eusartRxHead
  6274                           
  6275                           ;eusart.c: 107: eusartRxTail = 0;
  6276  0D16  01E8               	clrf	_eusartRxTail
  6277                           
  6278                           ;eusart.c: 108: eusartRxCount = 0;
  6279  0D17  01E7               	clrf	_eusartRxCount	;volatile
  6280                           
  6281                           ;eusart.c: 111: PIE3bits.RC1IE = 1;
  6282  0D18  014E               	movlb	14	; select bank14
  6283  0D19  1699               	bsf	25,5	;volatile
  6284  0D1A  0008               	return
  6285  0D1B                     __end_of_EUSART_Initialize:	
  6286                           
  6287                           	psect	text21
  6288  0C6E                     __ptext21:	
  6289 ;; *************** function _ReadTouchKeyPIN *****************
  6290 ;; Defined at:
  6291 ;;		line 148 in file "src/gpio.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;		None
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      unsigned char 
  6298 ;; Registers used:
  6299 ;;		wreg
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6305 ;;      Params:         0       0       0       0       0       0       0       0
  6306 ;;      Locals:         0       0       0       0       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0       0
  6308 ;;      Totals:         0       0       0       0       0       0       0       0
  6309 ;;Total ram usage:        0 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    7
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_main
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           
  6320                           ;psect for function _ReadTouchKeyPIN
  6321  0C6E                     _ReadTouchKeyPIN:	
  6322                           
  6323                           ;gpio.c: 150: if((PORTBbits.RB1)&&(PORTBbits.RB2))
  6324                           
  6325                           ;incstack = 0
  6326                           ; Regs used in _ReadTouchKeyPIN: [wreg]
  6327  0C6E  0140               	movlb	0	; select bank0
  6328  0C6F  188D               	btfsc	13,1	;volatile
  6329  0C70  1D0D               	btfss	13,2	;volatile
  6330  0C71  2C74               	goto	l103
  6331                           
  6332                           ;gpio.c: 151: {;gpio.c: 152: return 2;
  6333  0C72  3002               	movlw	2
  6334  0C73  0008               	return
  6335  0C74                     l103:	
  6336                           ;gpio.c: 153: }
  6337                           
  6338                           
  6339                           ;gpio.c: 154: else if((PORTBbits.RB1)||(PORTBbits.RB2))
  6340  0C74  188D               	btfsc	13,1	;volatile
  6341  0C75  2C78               	goto	l2781
  6342  0C76  1D0D               	btfss	13,2	;volatile
  6343  0C77  2C7A               	goto	l2785
  6344  0C78                     l2781:	
  6345                           
  6346                           ;gpio.c: 155: {;gpio.c: 156: return 1;
  6347  0C78  3001               	movlw	1
  6348  0C79  0008               	return
  6349  0C7A                     l2785:	
  6350                           
  6351                           ;gpio.c: 157: };gpio.c: 158: return 0;
  6352  0C7A  3000               	movlw	0
  6353  0C7B  0008               	return
  6354  0C7C                     __end_of_ReadTouchKeyPIN:	
  6355                           
  6356                           	psect	text22
  6357  0C31                     __ptext22:	
  6358 ;; *************** function _ReadRstPIN *****************
  6359 ;; Defined at:
  6360 ;;		line 139 in file "src/gpio.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;		None
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  1    wreg      unsigned char 
  6367 ;; Registers used:
  6368 ;;		wreg
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6374 ;;      Params:         0       0       0       0       0       0       0       0
  6375 ;;      Locals:         0       0       0       0       0       0       0       0
  6376 ;;      Temps:          0       0       0       0       0       0       0       0
  6377 ;;      Totals:         0       0       0       0       0       0       0       0
  6378 ;;Total ram usage:        0 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; Hardware stack levels required when called:    7
  6381 ;; This function calls:
  6382 ;;		Nothing
  6383 ;; This function is called by:
  6384 ;;		_main
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function _ReadRstPIN
  6390  0C31                     _ReadRstPIN:	
  6391                           
  6392                           ;gpio.c: 141: if(PORTBbits.RB5)
  6393                           
  6394                           ;incstack = 0
  6395                           ; Regs used in _ReadRstPIN: [wreg]
  6396  0C31  0140               	movlb	0	; select bank0
  6397  0C32  1E8D               	btfss	13,5	;volatile
  6398  0C33  2C36               	goto	l2765
  6399                           
  6400                           ;gpio.c: 142: {;gpio.c: 143: return 1;
  6401  0C34  3001               	movlw	1
  6402  0C35  0008               	return
  6403  0C36                     l2765:	
  6404                           
  6405                           ;gpio.c: 144: };gpio.c: 145: return 0;
  6406  0C36  3000               	movlw	0
  6407  0C37  0008               	return
  6408  0C38                     __end_of_ReadRstPIN:	
  6409                           
  6410                           	psect	text23
  6411  0C1F                     __ptext23:	
  6412 ;; *************** function _EUSART_Enable_WakeUp *****************
  6413 ;; Defined at:
  6414 ;;		line 115 in file "src/eusart.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;		None
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		None
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6428 ;;      Params:         0       0       0       0       0       0       0       0
  6429 ;;      Locals:         0       0       0       0       0       0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0
  6431 ;;      Totals:         0       0       0       0       0       0       0       0
  6432 ;;Total ram usage:        0 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    7
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_main
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           
  6443                           ;psect for function _EUSART_Enable_WakeUp
  6444  0C1F                     _EUSART_Enable_WakeUp:	
  6445                           
  6446                           ;eusart.c: 117: BAUD1CON |= 0x02;
  6447                           
  6448                           ;incstack = 0
  6449                           ; Regs used in _EUSART_Enable_WakeUp: []
  6450  0C1F  0142               	movlb	2	; select bank2
  6451  0C20  149F               	bsf	31,1	;volatile
  6452  0C21  0008               	return
  6453  0C22                     __end_of_EUSART_Enable_WakeUp:	
  6454                           
  6455                           	psect	text24
  6456  0C49                     __ptext24:	
  6457 ;; *************** function _ClearAngle *****************
  6458 ;; Defined at:
  6459 ;;		line 107 in file "src/filter.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;		None
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6473 ;;      Params:         0       0       0       0       0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0
  6476 ;;      Totals:         0       0       0       0       0       0       0       0
  6477 ;;Total ram usage:        0 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    7
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_main
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           
  6488                           ;psect for function _ClearAngle
  6489  0C49                     _ClearAngle:	
  6490                           
  6491                           ;filter.c: 109: Angle_t = 0;
  6492                           
  6493                           ;incstack = 0
  6494                           ; Regs used in _ClearAngle: [wreg+status,2]
  6495  0C49  3000               	movlw	0
  6496  0C4A  0140               	movlb	0	; select bank0
  6497  0C4B  00DE               	movwf	_Angle_t
  6498  0C4C  3000               	movlw	0
  6499  0C4D  00DF               	movwf	_Angle_t+1
  6500  0C4E  3000               	movlw	0
  6501  0C4F  00E0               	movwf	_Angle_t+2
  6502                           
  6503                           ;filter.c: 110: gu8DoorOpened = 0;
  6504  0C50  0141               	movlb	1	; select bank1
  6505  0C51  01BF               	clrf	_gu8DoorOpened^(0+128)
  6506  0C52  0008               	return
  6507  0C53                     __end_of_ClearAngle:	
  6508                           
  6509                           	psect	text25
  6510  0E95                     __ptext25:	
  6511 ;; *************** function _CheckDoorOpened *****************
  6512 ;; Defined at:
  6513 ;;		line 113 in file "src/filter.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      unsigned char 
  6520 ;; Registers used:
  6521 ;;		wreg, status,2, status,0, pclath, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6527 ;;      Params:         0       0       0       0       0       0       0       0
  6528 ;;      Locals:         0       0       0       0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0
  6530 ;;      Totals:         0       0       0       0       0       0       0       0
  6531 ;;Total ram usage:        0 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    8
  6534 ;; This function calls:
  6535 ;;		___ftge
  6536 ;; This function is called by:
  6537 ;;		_main
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541                           
  6542                           ;psect for function _CheckDoorOpened
  6543  0E95                     _CheckDoorOpened:	
  6544                           
  6545                           ;filter.c: 115: if((Angle_t>= 10)||(Angle_t <= -10))
  6546                           
  6547                           ;incstack = 0
  6548                           ; Regs used in _CheckDoorOpened: [wreg+status,2+status,0+pclath+cstack]
  6549  0E95  0140               	movlb	0	; select bank0
  6550  0E96  085E               	movf	_Angle_t,w
  6551  0E97  0141               	movlb	1	; select bank1
  6552  0E98  00C6               	movwf	___ftge@ff1^(0+128)
  6553  0E99  0140               	movlb	0	; select bank0
  6554  0E9A  085F               	movf	_Angle_t+1,w
  6555  0E9B  0141               	movlb	1	; select bank1
  6556  0E9C  00C7               	movwf	(___ftge@ff1+1)^(0+128)
  6557  0E9D  0140               	movlb	0	; select bank0
  6558  0E9E  0860               	movf	_Angle_t+2,w
  6559  0E9F  0141               	movlb	1	; select bank1
  6560  0EA0  00C8               	movwf	(___ftge@ff1+2)^(0+128)
  6561  0EA1  3000               	movlw	0
  6562  0EA2  00C9               	movwf	___ftge@ff2^(0+128)
  6563  0EA3  3020               	movlw	32
  6564  0EA4  00CA               	movwf	(___ftge@ff2+1)^(0+128)
  6565  0EA5  3041               	movlw	65
  6566  0EA6  00CB               	movwf	(___ftge@ff2+2)^(0+128)
  6567  0EA7  318F  2705  318E   	fcall	___ftge
  6568  0EAA  1803               	btfsc	3,0
  6569  0EAB  2EC4               	goto	l351
  6570  0EAC  3000               	movlw	0
  6571  0EAD  0141               	movlb	1	; select bank1
  6572  0EAE  00C6               	movwf	___ftge@ff1^(0+128)
  6573  0EAF  3020               	movlw	32
  6574  0EB0  00C7               	movwf	(___ftge@ff1+1)^(0+128)
  6575  0EB1  30C1               	movlw	193
  6576  0EB2  00C8               	movwf	(___ftge@ff1+2)^(0+128)
  6577  0EB3  0140               	movlb	0	; select bank0
  6578  0EB4  085E               	movf	_Angle_t,w
  6579  0EB5  0141               	movlb	1	; select bank1
  6580  0EB6  00C9               	movwf	___ftge@ff2^(0+128)
  6581  0EB7  0140               	movlb	0	; select bank0
  6582  0EB8  085F               	movf	_Angle_t+1,w
  6583  0EB9  0141               	movlb	1	; select bank1
  6584  0EBA  00CA               	movwf	(___ftge@ff2+1)^(0+128)
  6585  0EBB  0140               	movlb	0	; select bank0
  6586  0EBC  0860               	movf	_Angle_t+2,w
  6587  0EBD  0141               	movlb	1	; select bank1
  6588  0EBE  00CB               	movwf	(___ftge@ff2+2)^(0+128)
  6589  0EBF  318F  2705  318E   	fcall	___ftge
  6590  0EC2  1C03               	btfss	3,0
  6591  0EC3  2EC7               	goto	l2839
  6592  0EC4                     l351:	
  6593                           
  6594                           ;filter.c: 116: {;filter.c: 117: gu8DoorOpened = 1;
  6595  0EC4  0141               	movlb	1	; select bank1
  6596  0EC5  01BF               	clrf	_gu8DoorOpened^(0+128)
  6597  0EC6  0ABF               	incf	_gu8DoorOpened^(0+128),f
  6598  0EC7                     l2839:	
  6599                           
  6600                           ;filter.c: 118: };filter.c: 119: return gu8DoorOpened;
  6601  0EC7  0141               	movlb	1	; select bank1
  6602  0EC8  083F               	movf	_gu8DoorOpened^(0+128),w
  6603  0EC9  0008               	return
  6604  0ECA                     __end_of_CheckDoorOpened:	
  6605                           
  6606                           	psect	text26
  6607  0FBF                     __ptext26:	
  6608 ;; *************** function _CheckDoorClosed *****************
  6609 ;; Defined at:
  6610 ;;		line 122 in file "src/filter.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;		None
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      unsigned char 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0, pclath, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6624 ;;      Params:         0       0       0       0       0       0       0       0
  6625 ;;      Locals:         0       0       0       0       0       0       0       0
  6626 ;;      Temps:          0       0       1       0       0       0       0       0
  6627 ;;      Totals:         0       0       1       0       0       0       0       0
  6628 ;;Total ram usage:        1 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    8
  6631 ;; This function calls:
  6632 ;;		___ftge
  6633 ;; This function is called by:
  6634 ;;		_main
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           
  6639                           ;psect for function _CheckDoorClosed
  6640  0FBF                     _CheckDoorClosed:	
  6641                           
  6642                           ;filter.c: 124: if((Angle_t<= 5)&&(Angle_t >= -5))
  6643                           
  6644                           ;incstack = 0
  6645                           ; Regs used in _CheckDoorClosed: [wreg+status,2+status,0+pclath+cstack]
  6646  0FBF  3000               	movlw	0
  6647  0FC0  0141               	movlb	1	; select bank1
  6648  0FC1  00C6               	movwf	___ftge@ff1^(0+128)
  6649  0FC2  30A0               	movlw	160
  6650  0FC3  00C7               	movwf	(___ftge@ff1+1)^(0+128)
  6651  0FC4  3040               	movlw	64
  6652  0FC5  00C8               	movwf	(___ftge@ff1+2)^(0+128)
  6653  0FC6  0140               	movlb	0	; select bank0
  6654  0FC7  085E               	movf	_Angle_t,w
  6655  0FC8  0141               	movlb	1	; select bank1
  6656  0FC9  00C9               	movwf	___ftge@ff2^(0+128)
  6657  0FCA  0140               	movlb	0	; select bank0
  6658  0FCB  085F               	movf	_Angle_t+1,w
  6659  0FCC  0141               	movlb	1	; select bank1
  6660  0FCD  00CA               	movwf	(___ftge@ff2+1)^(0+128)
  6661  0FCE  0140               	movlb	0	; select bank0
  6662  0FCF  0860               	movf	_Angle_t+2,w
  6663  0FD0  0141               	movlb	1	; select bank1
  6664  0FD1  00CB               	movwf	(___ftge@ff2+2)^(0+128)
  6665  0FD2  318F  2705  318F   	fcall	___ftge
  6666  0FD5  1C03               	btfss	3,0
  6667  0FD6  2FF4               	goto	l2849
  6668  0FD7  0140               	movlb	0	; select bank0
  6669  0FD8  085E               	movf	_Angle_t,w
  6670  0FD9  0141               	movlb	1	; select bank1
  6671  0FDA  00C6               	movwf	___ftge@ff1^(0+128)
  6672  0FDB  0140               	movlb	0	; select bank0
  6673  0FDC  085F               	movf	_Angle_t+1,w
  6674  0FDD  0141               	movlb	1	; select bank1
  6675  0FDE  00C7               	movwf	(___ftge@ff1+1)^(0+128)
  6676  0FDF  0140               	movlb	0	; select bank0
  6677  0FE0  0860               	movf	_Angle_t+2,w
  6678  0FE1  0141               	movlb	1	; select bank1
  6679  0FE2  00C8               	movwf	(___ftge@ff1+2)^(0+128)
  6680  0FE3  3000               	movlw	0
  6681  0FE4  00C9               	movwf	___ftge@ff2^(0+128)
  6682  0FE5  30A0               	movlw	160
  6683  0FE6  00CA               	movwf	(___ftge@ff2+1)^(0+128)
  6684  0FE7  30C0               	movlw	192
  6685  0FE8  00CB               	movwf	(___ftge@ff2+2)^(0+128)
  6686  0FE9  318F  2705  318F   	fcall	___ftge
  6687  0FEC  1C03               	btfss	3,0
  6688  0FED  2FF4               	goto	l2849
  6689                           
  6690                           ;filter.c: 125: {;filter.c: 126: gu8ClosedCnt++;
  6691  0FEE  3001               	movlw	1
  6692  0FEF  0141               	movlb	1	; select bank1
  6693  0FF0  00CF               	movwf	??_CheckDoorClosed^(0+128)
  6694  0FF1  084F               	movf	??_CheckDoorClosed^(0+128),w
  6695  0FF2  07BD               	addwf	_gu8ClosedCnt^(0+128),f
  6696                           
  6697                           ;filter.c: 127: }
  6698  0FF3  2FF7               	goto	l2851
  6699  0FF4                     l2849:	
  6700                           
  6701                           ;filter.c: 128: else;filter.c: 129: {;filter.c: 130: gu8ClosedCnt = 0;
  6702  0FF4  0141               	movlb	1	; select bank1
  6703  0FF5  01BD               	clrf	_gu8ClosedCnt^(0+128)
  6704                           
  6705                           ;filter.c: 131: gu8DoorClosed = 0;
  6706  0FF6  01BE               	clrf	_gu8DoorClosed^(0+128)
  6707  0FF7                     l2851:	
  6708                           
  6709                           ;filter.c: 132: };filter.c: 133: if(gu8ClosedCnt >= 50)
  6710  0FF7  3032               	movlw	50
  6711  0FF8  023D               	subwf	_gu8ClosedCnt^(0+128),w
  6712  0FF9  1C03               	skipc
  6713  0FFA  2FFE               	goto	l2857
  6714                           
  6715                           ;filter.c: 134: {;filter.c: 135: gu8ClosedCnt = 0;
  6716  0FFB  01BD               	clrf	_gu8ClosedCnt^(0+128)
  6717                           
  6718                           ;filter.c: 136: gu8DoorClosed = 1;
  6719  0FFC  01BE               	clrf	_gu8DoorClosed^(0+128)
  6720  0FFD  0ABE               	incf	_gu8DoorClosed^(0+128),f
  6721  0FFE                     l2857:	
  6722                           
  6723                           ;filter.c: 137: };filter.c: 138: return gu8DoorClosed;
  6724  0FFE  083E               	movf	_gu8DoorClosed^(0+128),w
  6725  0FFF  0008               	return
  6726  1000                     __end_of_CheckDoorClosed:	
  6727                           
  6728                           	psect	text27
  6729  0F05                     __ptext27:	
  6730 ;; *************** function ___ftge *****************
  6731 ;; Defined at:
  6732 ;;		line 4 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\ftge.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  ff1             3    0[BANK1 ] float 
  6735 ;;  ff2             3    3[BANK1 ] float 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;		None               void
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6747 ;;      Params:         0       0       6       0       0       0       0       0
  6748 ;;      Locals:         0       0       0       0       0       0       0       0
  6749 ;;      Temps:          0       0       3       0       0       0       0       0
  6750 ;;      Totals:         0       0       9       0       0       0       0       0
  6751 ;;Total ram usage:        9 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    7
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_CheckDoorOpened
  6758 ;;		_CheckDoorClosed
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           
  6763                           ;psect for function ___ftge
  6764  0F05                     ___ftge:	
  6765                           
  6766                           ;incstack = 0
  6767                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6768  0F05  0141               	movlb	1	; select bank1
  6769  0F06  1FC8               	btfss	(___ftge@ff1+2)^(0+128),7
  6770  0F07  2F1C               	goto	l2729
  6771  0F08  0946               	comf	___ftge@ff1^(0+128),w
  6772  0F09  00CC               	movwf	??___ftge^(0+128)
  6773  0F0A  0947               	comf	(___ftge@ff1+1)^(0+128),w
  6774  0F0B  00CD               	movwf	(??___ftge^(0+128)+1)
  6775  0F0C  0948               	comf	(___ftge@ff1+2)^(0+128),w
  6776  0F0D  00CE               	movwf	(??___ftge^(0+128)+2)
  6777  0F0E  0ACC               	incf	??___ftge^(0+128),f
  6778  0F0F  1903               	skipnz
  6779  0F10  0ACD               	incf	(??___ftge^(0+128)+1),f
  6780  0F11  1903               	skipnz
  6781  0F12  0ACE               	incf	(??___ftge^(0+128)+2),f
  6782  0F13  3000               	movlw	0
  6783  0F14  074C               	addwf	??___ftge^(0+128),w
  6784  0F15  00C6               	movwf	___ftge@ff1^(0+128)
  6785  0F16  3000               	movlw	0
  6786  0F17  3D4D               	addwfc	(??___ftge+1)^(0+128),w
  6787  0F18  00C7               	movwf	(___ftge@ff1+1)^(0+128)
  6788  0F19  3080               	movlw	128
  6789  0F1A  3D4E               	addwfc	(??___ftge+2)^(0+128),w
  6790  0F1B  00C8               	movwf	(___ftge@ff1+2)^(0+128)
  6791  0F1C                     l2729:	
  6792  0F1C  1FCB               	btfss	(___ftge@ff2+2)^(0+128),7
  6793  0F1D  2F32               	goto	l2733
  6794  0F1E  0949               	comf	___ftge@ff2^(0+128),w
  6795  0F1F  00CC               	movwf	??___ftge^(0+128)
  6796  0F20  094A               	comf	(___ftge@ff2+1)^(0+128),w
  6797  0F21  00CD               	movwf	(??___ftge^(0+128)+1)
  6798  0F22  094B               	comf	(___ftge@ff2+2)^(0+128),w
  6799  0F23  00CE               	movwf	(??___ftge^(0+128)+2)
  6800  0F24  0ACC               	incf	??___ftge^(0+128),f
  6801  0F25  1903               	skipnz
  6802  0F26  0ACD               	incf	(??___ftge^(0+128)+1),f
  6803  0F27  1903               	skipnz
  6804  0F28  0ACE               	incf	(??___ftge^(0+128)+2),f
  6805  0F29  3000               	movlw	0
  6806  0F2A  074C               	addwf	??___ftge^(0+128),w
  6807  0F2B  00C9               	movwf	___ftge@ff2^(0+128)
  6808  0F2C  3000               	movlw	0
  6809  0F2D  3D4D               	addwfc	(??___ftge+1)^(0+128),w
  6810  0F2E  00CA               	movwf	(___ftge@ff2+1)^(0+128)
  6811  0F2F  3080               	movlw	128
  6812  0F30  3D4E               	addwfc	(??___ftge+2)^(0+128),w
  6813  0F31  00CB               	movwf	(___ftge@ff2+2)^(0+128)
  6814  0F32                     l2733:	
  6815  0F32  3080               	movlw	128
  6816  0F33  06C8               	xorwf	(___ftge@ff1+2)^(0+128),f
  6817  0F34  3080               	movlw	128
  6818  0F35  06CB               	xorwf	(___ftge@ff2+2)^(0+128),f
  6819  0F36  084B               	movf	(___ftge@ff2+2)^(0+128),w
  6820  0F37  0248               	subwf	(___ftge@ff1+2)^(0+128),w
  6821  0F38  1D03               	skipz
  6822  0F39  0008               	return
  6823  0F3A  084A               	movf	(___ftge@ff2+1)^(0+128),w
  6824  0F3B  0247               	subwf	(___ftge@ff1+1)^(0+128),w
  6825  0F3C  1D03               	skipz
  6826  0F3D  0008               	return
  6827  0F3E  0849               	movf	___ftge@ff2^(0+128),w
  6828  0F3F  0246               	subwf	___ftge@ff1^(0+128),w
  6829  0F40  0008               	return
  6830  0F41                     __end_of___ftge:	
  6831                           
  6832                           	psect	intentry
  6833  0004                     __pintentry:	
  6834 ;; *************** function _INTERRUPT_InterruptManager *****************
  6835 ;; Defined at:
  6836 ;;		line 57 in file "src/interrupt_manager.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6850 ;;      Params:         0       0       0       0       0       0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0
  6853 ;;      Totals:         0       0       0       0       0       0       0       0
  6854 ;;Total ram usage:        0 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    6
  6857 ;; This function calls:
  6858 ;;		_EUSART_Receive_ISR
  6859 ;;		_EUSART_Transmit_ISR
  6860 ;;		_TMR0_ISR
  6861 ;;		i1_TMR0_StartTimer
  6862 ;; This function is called by:
  6863 ;;		Interrupt level 1
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867  0004                     _INTERRUPT_InterruptManager:	
  6868                           
  6869                           ;incstack = 0
  6870  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6871                           
  6872                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  6873  0005  3180               	pagesel	$
  6874                           
  6875                           ;interrupt_manager.c: 60: if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  6876  0006  014E               	movlb	14	; select bank14
  6877  0007  1A19               	btfsc	25,4	;volatile
  6878  0008  1E0F               	btfss	15,4	;volatile
  6879  0009  280D               	goto	i1l3047
  6880                           
  6881                           ;interrupt_manager.c: 61: {;interrupt_manager.c: 62: EUSART_Transmit_ISR();
  6882  000A  318D  251B  3180   	fcall	_EUSART_Transmit_ISR
  6883  000D                     i1l3047:	
  6884                           
  6885                           ;interrupt_manager.c: 63: };interrupt_manager.c: 64: if(PIE3bits.RC1IE == 1 && PIR3bits.
      +                          RC1IF == 1)
  6886  000D  014E               	movlb	14	; select bank14
  6887  000E  1A99               	btfsc	25,5	;volatile
  6888  000F  1E8F               	btfss	15,5	;volatile
  6889  0010  2814               	goto	i1l3053
  6890                           
  6891                           ;interrupt_manager.c: 65: {;interrupt_manager.c: 66: EUSART_Receive_ISR();
  6892  0011  318D  2579  3180   	fcall	_EUSART_Receive_ISR
  6893  0014                     i1l3053:	
  6894                           
  6895                           ;interrupt_manager.c: 67: };interrupt_manager.c: 68: if(PIE0bits.TMR0IE == 1 && PIR0bits
      +                          .TMR0IF == 1)
  6896  0014  014E               	movlb	14	; select bank14
  6897  0015  1A96               	btfsc	22,5	;volatile
  6898  0016  1E8C               	btfss	12,5	;volatile
  6899  0017  281B               	goto	i1l3059
  6900                           
  6901                           ;interrupt_manager.c: 69: {;interrupt_manager.c: 70: TMR0_ISR();
  6902  0018  318C  24D3  3180   	fcall	_TMR0_ISR
  6903  001B                     i1l3059:	
  6904                           
  6905                           ;interrupt_manager.c: 71: };interrupt_manager.c: 72: if(IOCBFbits.IOCBF1)
  6906  001B  017E               	movlb	62	; select bank62
  6907  001C  1CCA               	btfss	74,1	;volatile
  6908  001D  2822               	goto	i1l214
  6909                           
  6910                           ;interrupt_manager.c: 73: {;interrupt_manager.c: 74: gu8OperationState |= 0x02;
  6911  001E  0140               	movlb	0	; select bank0
  6912  001F  14E6               	bsf	_gu8OperationState,1
  6913                           
  6914                           ;interrupt_manager.c: 75: IOCBFbits.IOCBF1 = 0;
  6915  0020  017E               	movlb	62	; select bank62
  6916  0021  10CA               	bcf	74,1	;volatile
  6917  0022                     i1l214:	
  6918                           
  6919                           ;interrupt_manager.c: 76: };interrupt_manager.c: 77: if(IOCBFbits.IOCBF2)
  6920  0022  1D4A               	btfss	74,2	;volatile
  6921  0023  2828               	goto	i1l215
  6922                           
  6923                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: gu8OperationState |= 0x01;
  6924  0024  0140               	movlb	0	; select bank0
  6925  0025  1466               	bsf	_gu8OperationState,0
  6926                           
  6927                           ;interrupt_manager.c: 80: IOCBFbits.IOCBF2 = 0;
  6928  0026  017E               	movlb	62	; select bank62
  6929  0027  114A               	bcf	74,2	;volatile
  6930  0028                     i1l215:	
  6931                           
  6932                           ;interrupt_manager.c: 81: };interrupt_manager.c: 82: if(IOCBFbits.IOCBF5)
  6933  0028  1ECA               	btfss	74,5	;volatile
  6934  0029  2834               	goto	i1l3073
  6935                           
  6936                           ;interrupt_manager.c: 83: {;interrupt_manager.c: 84: gu8OperationState |= 0x04;
  6937  002A  0140               	movlb	0	; select bank0
  6938  002B  1566               	bsf	_gu8OperationState,2
  6939                           
  6940                           ;interrupt_manager.c: 85: gu16RstTimCnt = 0;
  6941  002C  0141               	movlb	1	; select bank1
  6942  002D  01BB               	clrf	_gu16RstTimCnt^(0+128)
  6943  002E  01BC               	clrf	(_gu16RstTimCnt+1)^(0+128)
  6944                           
  6945                           ;interrupt_manager.c: 86: TMR0_StartTimer();
  6946  002F  318C  241C  3180   	fcall	i1_TMR0_StartTimer
  6947                           
  6948                           ;interrupt_manager.c: 87: IOCBFbits.IOCBF5 = 0;
  6949  0032  017E               	movlb	62	; select bank62
  6950  0033  12CA               	bcf	74,5	;volatile
  6951  0034                     i1l3073:	
  6952                           
  6953                           ;interrupt_manager.c: 88: };interrupt_manager.c: 89: if(IOCCFbits.IOCCF0)
  6954  0034  1C55               	btfss	85,0	;volatile
  6955  0035  283A               	goto	i1l218
  6956                           
  6957                           ;interrupt_manager.c: 90: {;interrupt_manager.c: 91: gu8OperationState |= 0x08;
  6958  0036  0140               	movlb	0	; select bank0
  6959  0037  15E6               	bsf	_gu8OperationState,3
  6960                           
  6961                           ;interrupt_manager.c: 92: IOCCFbits.IOCCF0 = 0;
  6962  0038  017E               	movlb	62	; select bank62
  6963  0039  1055               	bcf	85,0	;volatile
  6964  003A                     i1l218:	
  6965  003A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6966  003B  0009               	retfie
  6967  003C                     __end_of_INTERRUPT_InterruptManager:	
  6968                           
  6969                           	psect	text29
  6970  0C1C                     __ptext29:	
  6971 ;; *************** function i1_TMR0_StartTimer *****************
  6972 ;; Defined at:
  6973 ;;		line 93 in file "src/tmr0.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;		None
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      void 
  6980 ;; Registers used:
  6981 ;;		None
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6987 ;;      Params:         0       0       0       0       0       0       0       0
  6988 ;;      Locals:         0       0       0       0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0
  6990 ;;      Totals:         0       0       0       0       0       0       0       0
  6991 ;;Total ram usage:        0 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		_INTERRUPT_InterruptManager
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           
  7001                           ;psect for function i1_TMR0_StartTimer
  7002  0C1C                     i1_TMR0_StartTimer:	
  7003                           
  7004                           ;tmr0.c: 96: T0CON0bits.T0EN = 1;
  7005                           
  7006                           ;incstack = 0
  7007                           ; Regs used in i1_TMR0_StartTimer: []
  7008  0C1C  014B               	movlb	11	; select bank11
  7009  0C1D  179E               	bsf	30,7	;volatile
  7010  0C1E  0008               	return
  7011  0C1F                     __end_ofi1_TMR0_StartTimer:	
  7012                           
  7013                           	psect	text30
  7014  0CD3                     __ptext30:	
  7015 ;; *************** function _TMR0_ISR *****************
  7016 ;; Defined at:
  7017 ;;		line 127 in file "src/tmr0.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;		None
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;		None
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1    wreg      void 
  7024 ;; Registers used:
  7025 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7031 ;;      Params:         0       0       0       0       0       0       0       0
  7032 ;;      Locals:         0       0       0       0       0       0       0       0
  7033 ;;      Temps:          0       0       0       0       0       0       0       0
  7034 ;;      Totals:         0       0       0       0       0       0       0       0
  7035 ;;Total ram usage:        0 bytes
  7036 ;; Hardware stack levels used:    1
  7037 ;; Hardware stack levels required when called:    5
  7038 ;; This function calls:
  7039 ;;		_TMR0_Task
  7040 ;; This function is called by:
  7041 ;;		_INTERRUPT_InterruptManager
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           
  7046                           ;psect for function _TMR0_ISR
  7047  0CD3                     _TMR0_ISR:	
  7048                           
  7049                           ;tmr0.c: 130: PIR0bits.TMR0IF = 0;
  7050                           
  7051                           ;incstack = 0
  7052                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7053  0CD3  014E               	movlb	14	; select bank14
  7054  0CD4  128C               	bcf	12,5	;volatile
  7055                           
  7056                           ;tmr0.c: 132: if(gu8OperationState&0x04)
  7057  0CD5  0140               	movlb	0	; select bank0
  7058  0CD6  1D66               	btfss	_gu8OperationState,2
  7059  0CD7  2CDD               	goto	i1l3035
  7060                           
  7061                           ;tmr0.c: 133: {;tmr0.c: 134: gu16RstTimCnt++;
  7062  0CD8  3001               	movlw	1
  7063  0CD9  0141               	movlb	1	; select bank1
  7064  0CDA  07BB               	addwf	_gu16RstTimCnt^(0+128),f
  7065  0CDB  3000               	movlw	0
  7066  0CDC  3DBC               	addwfc	(_gu16RstTimCnt+1)^(0+128),f
  7067  0CDD                     i1l3035:	
  7068                           
  7069                           ;tmr0.c: 135: };tmr0.c: 137: if(gu8DoorState == 0)
  7070  0CDD  0140               	movlb	0	; select bank0
  7071  0CDE  086D               	movf	_gu8DoorState,w
  7072  0CDF  1D03               	btfss	3,2
  7073  0CE0  0008               	return
  7074                           
  7075                           ;tmr0.c: 138: {;tmr0.c: 139: gu16OpenTimCnt++;
  7076  0CE1  3001               	movlw	1
  7077  0CE2  0141               	movlb	1	; select bank1
  7078  0CE3  07B5               	addwf	_gu16OpenTimCnt^(0+128),f
  7079  0CE4  3000               	movlw	0
  7080  0CE5  3DB6               	addwfc	(_gu16OpenTimCnt+1)^(0+128),f
  7081                           
  7082                           ;tmr0.c: 140: TMR0_Task();
  7083  0CE6  3184  2455         	fcall	_TMR0_Task
  7084  0CE8  0008               	return
  7085  0CE9                     __end_of_TMR0_ISR:	
  7086                           
  7087                           	psect	text31
  7088  0455                     __ptext31:	
  7089 ;; *************** function _TMR0_Task *****************
  7090 ;; Defined at:
  7091 ;;		line 150 in file "src/tmr0.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;		None
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;		None
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      void 
  7098 ;; Registers used:
  7099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7105 ;;      Params:         0       0       0       0       0       0       0       0
  7106 ;;      Locals:         0       0       0       0       0       0       0       0
  7107 ;;      Temps:          0       5       0       0       0       0       0       0
  7108 ;;      Totals:         0       5       0       0       0       0       0       0
  7109 ;;Total ram usage:        5 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:    4
  7112 ;; This function calls:
  7113 ;;		_AngleCalcu
  7114 ;;		_Mpu6500GyroAngle
  7115 ;;		___fttol
  7116 ;;		i1_EUSART_Write
  7117 ;; This function is called by:
  7118 ;;		_TMR0_ISR
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           
  7123                           ;psect for function _TMR0_Task
  7124  0455                     _TMR0_Task:	
  7125                           
  7126                           ;tmr0.c: 153: result_gyro = Mpu6500GyroAngle(0x45);
  7127                           
  7128                           ;incstack = 0
  7129                           ; Regs used in _TMR0_Task: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7130  0455  3045               	movlw	69
  7131  0456  3181  2150  3184   	fcall	_Mpu6500GyroAngle
  7132  0459  0140               	movlb	0	; select bank0
  7133  045A  0847               	movf	?_Mpu6500GyroAngle,w
  7134  045B  0141               	movlb	1	; select bank1
  7135  045C  00B0               	movwf	_result_gyro^(0+128)
  7136  045D  0140               	movlb	0	; select bank0
  7137  045E  0848               	movf	?_Mpu6500GyroAngle+1,w
  7138  045F  0141               	movlb	1	; select bank1
  7139  0460  00B1               	movwf	(_result_gyro+1)^(0+128)
  7140  0461  0140               	movlb	0	; select bank0
  7141  0462  0849               	movf	?_Mpu6500GyroAngle+2,w
  7142  0463  0141               	movlb	1	; select bank1
  7143  0464  00B2               	movwf	(_result_gyro+2)^(0+128)
  7144                           
  7145                           ;tmr0.c: 154: AngleCalcu(0,result_gyro,filter_result);
  7146  0465  3000               	movlw	0
  7147  0466  0140               	movlb	0	; select bank0
  7148  0467  00B7               	movwf	AngleCalcu@angle_m
  7149  0468  3000               	movlw	0
  7150  0469  00B8               	movwf	AngleCalcu@angle_m+1
  7151  046A  3000               	movlw	0
  7152  046B  00B9               	movwf	AngleCalcu@angle_m+2
  7153  046C  0141               	movlb	1	; select bank1
  7154  046D  0830               	movf	_result_gyro^(0+128),w
  7155  046E  0140               	movlb	0	; select bank0
  7156  046F  00BA               	movwf	AngleCalcu@gyro_m
  7157  0470  0141               	movlb	1	; select bank1
  7158  0471  0831               	movf	(_result_gyro+1)^(0+128),w
  7159  0472  0140               	movlb	0	; select bank0
  7160  0473  00BB               	movwf	AngleCalcu@gyro_m+1
  7161  0474  0141               	movlb	1	; select bank1
  7162  0475  0832               	movf	(_result_gyro+2)^(0+128),w
  7163  0476  0140               	movlb	0	; select bank0
  7164  0477  00BC               	movwf	AngleCalcu@gyro_m+2
  7165  0478  30C0               	movlw	(low (_filter_result| 0))& (0+255)
  7166  0479  00D1               	movwf	??_TMR0_Task
  7167  047A  0851               	movf	??_TMR0_Task,w
  7168  047B  00BD               	movwf	AngleCalcu@p
  7169  047C  3186  26B4  3184   	fcall	_AngleCalcu
  7170                           
  7171                           ;tmr0.c: 155: sum = filter_result[0];
  7172  047F  0141               	movlb	1	; select bank1
  7173  0480  0840               	movf	_filter_result^(0+128),w
  7174  0481  00F0               	movwf	___fttol@f1
  7175  0482  0841               	movf	(_filter_result+1)^(0+128),w
  7176  0483  00F1               	movwf	___fttol@f1+1
  7177  0484  0842               	movf	(_filter_result+2)^(0+128),w
  7178  0485  00F2               	movwf	___fttol@f1+2
  7179  0486  3184  24E4  3184   	fcall	___fttol
  7180  0489  0873               	movf	?___fttol+3,w
  7181  048A  0140               	movlb	0	; select bank0
  7182  048B  00DD               	movwf	_sum+3
  7183  048C  0872               	movf	?___fttol+2,w
  7184  048D  00DC               	movwf	_sum+2
  7185  048E  0871               	movf	?___fttol+1,w
  7186  048F  00DB               	movwf	_sum+1
  7187  0490  0870               	movf	?___fttol,w
  7188  0491  00DA               	movwf	_sum
  7189                           
  7190                           ;tmr0.c: 156: sum_ = filter_result[1];
  7191  0492  3003               	movlw	3
  7192  0493  3EC0               	addlw	(low (_filter_result| 0))& (0+255)
  7193  0494  0086               	movwf	6
  7194  0495  0187               	clrf	7
  7195  0496  3F40               	moviw [0]fsr1
  7196  0497  00F0               	movwf	___fttol@f1
  7197  0498  3F41               	moviw [1]fsr1
  7198  0499  00F1               	movwf	___fttol@f1+1
  7199  049A  3F42               	moviw [2]fsr1
  7200  049B  00F2               	movwf	___fttol@f1+2
  7201  049C  3184  24E4  3184   	fcall	___fttol
  7202  049F  0873               	movf	?___fttol+3,w
  7203  04A0  0140               	movlb	0	; select bank0
  7204  04A1  00D9               	movwf	_sum_+3
  7205  04A2  0872               	movf	?___fttol+2,w
  7206  04A3  00D8               	movwf	_sum_+2
  7207  04A4  0871               	movf	?___fttol+1,w
  7208  04A5  00D7               	movwf	_sum_+1
  7209  04A6  0870               	movf	?___fttol,w
  7210  04A7  00D6               	movwf	_sum_
  7211                           
  7212                           ;tmr0.c: 157: EUSART_Write(0x55);
  7213  04A8  3055               	movlw	85
  7214  04A9  318D  25BD  3184   	fcall	i1_EUSART_Write
  7215                           
  7216                           ;tmr0.c: 158: EUSART_Write(sum>>8);
  7217  04AC  0140               	movlb	0	; select bank0
  7218  04AD  085A               	movf	_sum,w
  7219  04AE  00D1               	movwf	??_TMR0_Task
  7220  04AF  085B               	movf	_sum+1,w
  7221  04B0  00D2               	movwf	??_TMR0_Task+1
  7222  04B1  085C               	movf	_sum+2,w
  7223  04B2  00D3               	movwf	??_TMR0_Task+2
  7224  04B3  085D               	movf	_sum+3,w
  7225  04B4  00D4               	movwf	??_TMR0_Task+3
  7226  04B5  3008               	movlw	8
  7227  04B6  00D5               	movwf	??_TMR0_Task+4
  7228  04B7                     u262_25:	
  7229  04B7  37D4               	asrf	??_TMR0_Task+3,f
  7230  04B8  0CD3               	rrf	??_TMR0_Task+2,f
  7231  04B9  0CD2               	rrf	??_TMR0_Task+1,f
  7232  04BA  0CD1               	rrf	??_TMR0_Task,f
  7233  04BB  0BD5               	decfsz	??_TMR0_Task+4,f
  7234  04BC  2CB7               	goto	u262_25
  7235  04BD  0851               	movf	??_TMR0_Task,w
  7236  04BE  318D  25BD  3184   	fcall	i1_EUSART_Write
  7237                           
  7238                           ;tmr0.c: 159: EUSART_Write(sum);
  7239  04C1  0140               	movlb	0	; select bank0
  7240  04C2  085A               	movf	_sum,w
  7241  04C3  318D  25BD  3184   	fcall	i1_EUSART_Write
  7242                           
  7243                           ;tmr0.c: 160: EUSART_Write(sum_>>8);
  7244  04C6  0140               	movlb	0	; select bank0
  7245  04C7  0856               	movf	_sum_,w
  7246  04C8  00D1               	movwf	??_TMR0_Task
  7247  04C9  0857               	movf	_sum_+1,w
  7248  04CA  00D2               	movwf	??_TMR0_Task+1
  7249  04CB  0858               	movf	_sum_+2,w
  7250  04CC  00D3               	movwf	??_TMR0_Task+2
  7251  04CD  0859               	movf	_sum_+3,w
  7252  04CE  00D4               	movwf	??_TMR0_Task+3
  7253  04CF  3008               	movlw	8
  7254  04D0  00D5               	movwf	??_TMR0_Task+4
  7255  04D1                     u263_25:	
  7256  04D1  37D4               	asrf	??_TMR0_Task+3,f
  7257  04D2  0CD3               	rrf	??_TMR0_Task+2,f
  7258  04D3  0CD2               	rrf	??_TMR0_Task+1,f
  7259  04D4  0CD1               	rrf	??_TMR0_Task,f
  7260  04D5  0BD5               	decfsz	??_TMR0_Task+4,f
  7261  04D6  2CD1               	goto	u263_25
  7262  04D7  0851               	movf	??_TMR0_Task,w
  7263  04D8  318D  25BD  3184   	fcall	i1_EUSART_Write
  7264                           
  7265                           ;tmr0.c: 161: EUSART_Write(sum_);
  7266  04DB  0140               	movlb	0	; select bank0
  7267  04DC  0856               	movf	_sum_,w
  7268  04DD  318D  25BD  3184   	fcall	i1_EUSART_Write
  7269                           
  7270                           ;tmr0.c: 162: EUSART_Write(0xAA);
  7271  04E0  30AA               	movlw	170
  7272  04E1  318D  25BD         	fcall	i1_EUSART_Write
  7273  04E3  0008               	return
  7274  04E4                     __end_of_TMR0_Task:	
  7275                           
  7276                           	psect	text32
  7277  04E4                     __ptext32:	
  7278 ;; *************** function ___fttol *****************
  7279 ;; Defined at:
  7280 ;;		line 44 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\fttol.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  f1              3    0[COMMON] float 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  lval            4    9[COMMON] unsigned long 
  7285 ;;  exp1            1   13[COMMON] unsigned char 
  7286 ;;  sign1           1    8[COMMON] unsigned char 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  4    0[COMMON] long 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7296 ;;      Params:         4       0       0       0       0       0       0       0
  7297 ;;      Locals:         6       0       0       0       0       0       0       0
  7298 ;;      Temps:          4       0       0       0       0       0       0       0
  7299 ;;      Totals:        14       0       0       0       0       0       0       0
  7300 ;;Total ram usage:       14 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_TMR0_Task
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           
  7310                           ;psect for function ___fttol
  7311  04E4                     ___fttol:	
  7312                           
  7313                           ;incstack = 0
  7314                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7315  04E4  0870               	movf	___fttol@f1,w
  7316  04E5  00F4               	movwf	??___fttol
  7317  04E6  0871               	movf	___fttol@f1+1,w
  7318  04E7  00F5               	movwf	??___fttol+1
  7319  04E8  0872               	movf	___fttol@f1+2,w
  7320  04E9  00F6               	movwf	??___fttol+2
  7321  04EA  1003               	clrc
  7322  04EB  0D75               	rlf	??___fttol+1,w
  7323  04EC  0D76               	rlf	??___fttol+2,w
  7324  04ED  00F7               	movwf	??___fttol+3
  7325  04EE  0877               	movf	??___fttol+3,w
  7326  04EF  00FD               	movwf	___fttol@exp1
  7327  04F0  087D               	movf	___fttol@exp1,w
  7328  04F1  1D03               	btfss	3,2
  7329  04F2  2CFC               	goto	i1l2581
  7330  04F3  3000               	movlw	0
  7331  04F4  00F3               	movwf	?___fttol+3
  7332  04F5  3000               	movlw	0
  7333  04F6  00F2               	movwf	?___fttol+2
  7334  04F7  3000               	movlw	0
  7335  04F8  00F1               	movwf	?___fttol+1
  7336  04F9  3000               	movlw	0
  7337  04FA  00F0               	movwf	?___fttol
  7338  04FB  0008               	return
  7339  04FC                     i1l2581:	
  7340  04FC  0870               	movf	___fttol@f1,w
  7341  04FD  00F4               	movwf	??___fttol
  7342  04FE  0871               	movf	___fttol@f1+1,w
  7343  04FF  00F5               	movwf	??___fttol+1
  7344  0500  0872               	movf	___fttol@f1+2,w
  7345  0501  00F6               	movwf	??___fttol+2
  7346  0502  3017               	movlw	23
  7347  0503                     u252_25:	
  7348  0503  36F6               	lsrf	??___fttol+2,f
  7349  0504  0CF5               	rrf	??___fttol+1,f
  7350  0505  0CF4               	rrf	??___fttol,f
  7351  0506  0B89               	decfsz	9,f
  7352  0507  2D03               	goto	u252_25
  7353  0508  0874               	movf	??___fttol,w
  7354  0509  00F7               	movwf	??___fttol+3
  7355  050A  0877               	movf	??___fttol+3,w
  7356  050B  00F8               	movwf	___fttol@sign1
  7357  050C  17F1               	bsf	___fttol@f1+1,7
  7358  050D  30FF               	movlw	255
  7359  050E  05F0               	andwf	___fttol@f1,f
  7360  050F  30FF               	movlw	255
  7361  0510  05F1               	andwf	___fttol@f1+1,f
  7362  0511  3000               	movlw	0
  7363  0512  05F2               	andwf	___fttol@f1+2,f
  7364  0513  0870               	movf	___fttol@f1,w
  7365  0514  00F9               	movwf	___fttol@lval
  7366  0515  0871               	movf	___fttol@f1+1,w
  7367  0516  00FA               	movwf	___fttol@lval+1
  7368  0517  0872               	movf	___fttol@f1+2,w
  7369  0518  00FB               	movwf	___fttol@lval+2
  7370  0519  01FC               	clrf	___fttol@lval+3
  7371  051A  308E               	movlw	142
  7372  051B  02FD               	subwf	___fttol@exp1,f
  7373  051C  1FFD               	btfss	___fttol@exp1,7
  7374  051D  2D3A               	goto	i1l2601
  7375  051E  087D               	movf	___fttol@exp1,w
  7376  051F  3A80               	xorlw	128
  7377  0520  3E8F               	addlw	143
  7378  0521  1803               	skipnc
  7379  0522  2D2C               	goto	i1l2599
  7380  0523  3000               	movlw	0
  7381  0524  00F3               	movwf	?___fttol+3
  7382  0525  3000               	movlw	0
  7383  0526  00F2               	movwf	?___fttol+2
  7384  0527  3000               	movlw	0
  7385  0528  00F1               	movwf	?___fttol+1
  7386  0529  3000               	movlw	0
  7387  052A  00F0               	movwf	?___fttol
  7388  052B  0008               	return
  7389  052C                     i1l2599:	
  7390  052C  3001               	movlw	1
  7391  052D                     u255_25:	
  7392  052D  36FC               	lsrf	___fttol@lval+3,f
  7393  052E  0CFB               	rrf	___fttol@lval+2,f
  7394  052F  0CFA               	rrf	___fttol@lval+1,f
  7395  0530  0CF9               	rrf	___fttol@lval,f
  7396  0531  0B89               	decfsz	9,f
  7397  0532  2D2D               	goto	u255_25
  7398  0533  3001               	movlw	1
  7399  0534  00F4               	movwf	??___fttol
  7400  0535  0874               	movf	??___fttol,w
  7401  0536  07FD               	addwf	___fttol@exp1,f
  7402  0537  1903               	btfsc	3,2
  7403  0538  2D53               	goto	i1l2609
  7404  0539  2D2C               	goto	i1l2599
  7405  053A                     i1l2601:	
  7406  053A  3018               	movlw	24
  7407  053B  027D               	subwf	___fttol@exp1,w
  7408  053C  1C03               	skipc
  7409  053D  2D50               	goto	i1l783
  7410  053E  3000               	movlw	0
  7411  053F  00F3               	movwf	?___fttol+3
  7412  0540  3000               	movlw	0
  7413  0541  00F2               	movwf	?___fttol+2
  7414  0542  3000               	movlw	0
  7415  0543  00F1               	movwf	?___fttol+1
  7416  0544  3000               	movlw	0
  7417  0545  00F0               	movwf	?___fttol
  7418  0546  0008               	return
  7419  0547                     i1l2607:	
  7420  0547  3001               	movlw	1
  7421  0548                     u258_25:	
  7422  0548  35F9               	lslf	___fttol@lval,f
  7423  0549  0DFA               	rlf	___fttol@lval+1,f
  7424  054A  0DFB               	rlf	___fttol@lval+2,f
  7425  054B  0DFC               	rlf	___fttol@lval+3,f
  7426  054C  0B89               	decfsz	9,f
  7427  054D  2D48               	goto	u258_25
  7428  054E  3001               	movlw	1
  7429  054F  02FD               	subwf	___fttol@exp1,f
  7430  0550                     i1l783:	
  7431  0550  087D               	movf	___fttol@exp1,w
  7432  0551  1D03               	btfss	3,2
  7433  0552  2D47               	goto	i1l2607
  7434  0553                     i1l2609:	
  7435  0553  0878               	movf	___fttol@sign1,w
  7436  0554  1903               	btfsc	3,2
  7437  0555  2D61               	goto	i1l2613
  7438  0556  09F9               	comf	___fttol@lval,f
  7439  0557  09FA               	comf	___fttol@lval+1,f
  7440  0558  09FB               	comf	___fttol@lval+2,f
  7441  0559  09FC               	comf	___fttol@lval+3,f
  7442  055A  0AF9               	incf	___fttol@lval,f
  7443  055B  1903               	skipnz
  7444  055C  0AFA               	incf	___fttol@lval+1,f
  7445  055D  1903               	skipnz
  7446  055E  0AFB               	incf	___fttol@lval+2,f
  7447  055F  1903               	skipnz
  7448  0560  0AFC               	incf	___fttol@lval+3,f
  7449  0561                     i1l2613:	
  7450  0561  087C               	movf	___fttol@lval+3,w
  7451  0562  00F3               	movwf	?___fttol+3
  7452  0563  087B               	movf	___fttol@lval+2,w
  7453  0564  00F2               	movwf	?___fttol+2
  7454  0565  087A               	movf	___fttol@lval+1,w
  7455  0566  00F1               	movwf	?___fttol+1
  7456  0567  0879               	movf	___fttol@lval,w
  7457  0568  00F0               	movwf	?___fttol
  7458  0569  0008               	return
  7459  056A                     __end_of___fttol:	
  7460                           
  7461                           	psect	text33
  7462  0150                     __ptext33:	
  7463 ;; *************** function _Mpu6500GyroAngle *****************
  7464 ;; Defined at:
  7465 ;;		line 233 in file "src/mpu_iic.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  dir             1    wreg     char 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;  dir             1   45[BANK0 ] char 
  7470 ;;  gyro_angle      3   46[BANK0 ] float 
  7471 ;;  gyro_config     1    0        unsigned char 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  3   39[BANK0 ] float 
  7474 ;; Registers used:
  7475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7481 ;;      Params:         0       3       0       0       0       0       0       0
  7482 ;;      Locals:         0       4       0       0       0       0       0       0
  7483 ;;      Temps:          0       3       0       0       0       0       0       0
  7484 ;;      Totals:         0      10       0       0       0       0       0       0
  7485 ;;Total ram usage:       10 bytes
  7486 ;; Hardware stack levels used:    1
  7487 ;; Hardware stack levels required when called:    3
  7488 ;; This function calls:
  7489 ;;		___awtoft
  7490 ;;		___ftadd
  7491 ;;		___ftdiv
  7492 ;;		___ftneg
  7493 ;;		_abs
  7494 ;;		i1_EUSART_Write
  7495 ;;		i1_Get6500Data
  7496 ;; This function is called by:
  7497 ;;		_TMR0_Task
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           
  7502                           ;psect for function _Mpu6500GyroAngle
  7503  0150                     _Mpu6500GyroAngle:	
  7504                           
  7505                           ;incstack = 0
  7506                           ; Regs used in _Mpu6500GyroAngle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7507                           ;Mpu6500GyroAngle@dir stored from wreg
  7508  0150  0140               	movlb	0	; select bank0
  7509  0151  00CD               	movwf	Mpu6500GyroAngle@dir
  7510                           
  7511                           ;mpu_iic.c: 235: float gyro_angle;;mpu_iic.c: 236: uint8_t gyro_config;;mpu_iic.c: 238: 
      +                          New_gyro = Get6500Data(dir);
  7512  0152  084D               	movf	Mpu6500GyroAngle@dir,w
  7513  0153  318D  2558  3181   	fcall	i1_Get6500Data
  7514  0156  0879               	movf	?i1_Get6500Data+1,w
  7515  0157  0140               	movlb	0	; select bank0
  7516  0158  00E4               	movwf	_New_gyro+1
  7517  0159  0878               	movf	?i1_Get6500Data,w
  7518  015A  00E3               	movwf	_New_gyro
  7519                           
  7520                           ;mpu_iic.c: 240: EUSART_Write(0x55);
  7521  015B  3055               	movlw	85
  7522  015C  318D  25BD  3181   	fcall	i1_EUSART_Write
  7523                           
  7524                           ;mpu_iic.c: 241: EUSART_Write(New_gyro >>8);
  7525  015F  0140               	movlb	0	; select bank0
  7526  0160  0864               	movf	_New_gyro+1,w
  7527  0161  318D  25BD  3181   	fcall	i1_EUSART_Write
  7528                           
  7529                           ;mpu_iic.c: 242: EUSART_Write(New_gyro);
  7530  0164  0140               	movlb	0	; select bank0
  7531  0165  0863               	movf	_New_gyro,w
  7532  0166  318D  25BD  3181   	fcall	i1_EUSART_Write
  7533                           
  7534                           ;mpu_iic.c: 243: EUSART_Write(0xAA);
  7535  0169  30AA               	movlw	170
  7536  016A  318D  25BD  3181   	fcall	i1_EUSART_Write
  7537                           
  7538                           ;mpu_iic.c: 244: gyro_angle = (float)New_gyro;
  7539  016D  0140               	movlb	0	; select bank0
  7540  016E  0864               	movf	_New_gyro+1,w
  7541  016F  00F9               	movwf	___awtoft@c+1
  7542  0170  0863               	movf	_New_gyro,w
  7543  0171  00F8               	movwf	___awtoft@c
  7544  0172  318D  2538  3181   	fcall	___awtoft
  7545  0175  0878               	movf	?___awtoft,w
  7546  0176  0140               	movlb	0	; select bank0
  7547  0177  00CE               	movwf	Mpu6500GyroAngle@gyro_angle
  7548  0178  0879               	movf	?___awtoft+1,w
  7549  0179  00CF               	movwf	Mpu6500GyroAngle@gyro_angle+1
  7550  017A  087A               	movf	?___awtoft+2,w
  7551  017B  00D0               	movwf	Mpu6500GyroAngle@gyro_angle+2
  7552                           
  7553                           ;mpu_iic.c: 246: if(abs(New_gyro - Old_gyro) <= 10)
  7554  017C  0141               	movlb	1	; select bank1
  7555  017D  0939               	comf	_Old_gyro^(0+128),w
  7556  017E  0140               	movlb	0	; select bank0
  7557  017F  00CA               	movwf	??_Mpu6500GyroAngle
  7558  0180  0141               	movlb	1	; select bank1
  7559  0181  093A               	comf	(_Old_gyro+1)^(0+128),w
  7560  0182  0140               	movlb	0	; select bank0
  7561  0183  00CB               	movwf	??_Mpu6500GyroAngle+1
  7562  0184  0ACA               	incf	??_Mpu6500GyroAngle,f
  7563  0185  1903               	skipnz
  7564  0186  0ACB               	incf	??_Mpu6500GyroAngle+1,f
  7565  0187  0863               	movf	_New_gyro,w
  7566  0188  074A               	addwf	??_Mpu6500GyroAngle,w
  7567  0189  00F0               	movwf	abs@a
  7568  018A  0864               	movf	_New_gyro+1,w
  7569  018B  3D4B               	addwfc	??_Mpu6500GyroAngle+1,w
  7570  018C  00F1               	movwf	abs@a+1
  7571  018D  318C  2460  3181   	fcall	_abs
  7572  0190  0871               	movf	?_abs+1,w
  7573  0191  3A80               	xorlw	128
  7574  0192  0140               	movlb	0	; select bank0
  7575  0193  00CC               	movwf	??_Mpu6500GyroAngle+2
  7576  0194  3080               	movlw	128
  7577  0195  024C               	subwf	??_Mpu6500GyroAngle+2,w
  7578  0196  1D03               	skipz
  7579  0197  299A               	goto	u245_25
  7580  0198  300B               	movlw	11
  7581  0199  0270               	subwf	?_abs,w
  7582  019A                     u245_25:	
  7583  019A  1803               	skipnc
  7584  019B  29C4               	goto	i1l2547
  7585                           
  7586                           ;mpu_iic.c: 247: {;mpu_iic.c: 248: if(Sam_cnt == 0)
  7587  019C  0140               	movlb	0	; select bank0
  7588  019D  0865               	movf	_Sam_cnt,w
  7589  019E  1D03               	btfss	3,2
  7590  019F  29A4               	goto	i1l2541
  7591                           
  7592                           ;mpu_iic.c: 249: {;mpu_iic.c: 250: Frist_gyro = New_gyro;
  7593  01A0  0864               	movf	_New_gyro+1,w
  7594  01A1  00E2               	movwf	_Frist_gyro+1
  7595  01A2  0863               	movf	_New_gyro,w
  7596  01A3  00E1               	movwf	_Frist_gyro
  7597  01A4                     i1l2541:	
  7598                           
  7599                           ;mpu_iic.c: 251: };mpu_iic.c: 252: Sam_cnt ++;
  7600  01A4  3001               	movlw	1
  7601  01A5  00CA               	movwf	??_Mpu6500GyroAngle
  7602  01A6  084A               	movf	??_Mpu6500GyroAngle,w
  7603  01A7  07E5               	addwf	_Sam_cnt,f
  7604                           
  7605                           ;mpu_iic.c: 253: if(abs(New_gyro - Frist_gyro) > 10)
  7606  01A8  0961               	comf	_Frist_gyro,w
  7607  01A9  00CA               	movwf	??_Mpu6500GyroAngle
  7608  01AA  0962               	comf	_Frist_gyro+1,w
  7609  01AB  00CB               	movwf	??_Mpu6500GyroAngle+1
  7610  01AC  0ACA               	incf	??_Mpu6500GyroAngle,f
  7611  01AD  1903               	skipnz
  7612  01AE  0ACB               	incf	??_Mpu6500GyroAngle+1,f
  7613  01AF  0863               	movf	_New_gyro,w
  7614  01B0  074A               	addwf	??_Mpu6500GyroAngle,w
  7615  01B1  00F0               	movwf	abs@a
  7616  01B2  0864               	movf	_New_gyro+1,w
  7617  01B3  3D4B               	addwfc	??_Mpu6500GyroAngle+1,w
  7618  01B4  00F1               	movwf	abs@a+1
  7619  01B5  318C  2460  3181   	fcall	_abs
  7620  01B8  0871               	movf	?_abs+1,w
  7621  01B9  3A80               	xorlw	128
  7622  01BA  0140               	movlb	0	; select bank0
  7623  01BB  00CC               	movwf	??_Mpu6500GyroAngle+2
  7624  01BC  3080               	movlw	128
  7625  01BD  024C               	subwf	??_Mpu6500GyroAngle+2,w
  7626  01BE  1D03               	skipz
  7627  01BF  29C2               	goto	u247_25
  7628  01C0  300B               	movlw	11
  7629  01C1  0270               	subwf	?_abs,w
  7630  01C2                     u247_25:	
  7631  01C2  1C03               	skipc
  7632  01C3  29C6               	goto	i1l2549
  7633  01C4                     i1l2547:	
  7634                           ;mpu_iic.c: 256: };mpu_iic.c: 257: }
  7635                           
  7636                           ;mpu_iic.c: 254: {;mpu_iic.c: 255: Sam_cnt = 0;
  7637                           
  7638                           
  7639                           ;mpu_iic.c: 258: else;mpu_iic.c: 259: {;mpu_iic.c: 260: Sam_cnt = 0;
  7640  01C4  0140               	movlb	0	; select bank0
  7641  01C5  01E5               	clrf	_Sam_cnt
  7642  01C6                     i1l2549:	
  7643                           
  7644                           ;mpu_iic.c: 261: };mpu_iic.c: 262: Old_gyro = New_gyro;
  7645  01C6  0140               	movlb	0	; select bank0
  7646  01C7  0864               	movf	_New_gyro+1,w
  7647  01C8  0141               	movlb	1	; select bank1
  7648  01C9  00BA               	movwf	(_Old_gyro+1)^(0+128)
  7649  01CA  0140               	movlb	0	; select bank0
  7650  01CB  0863               	movf	_New_gyro,w
  7651  01CC  0141               	movlb	1	; select bank1
  7652  01CD  00B9               	movwf	_Old_gyro^(0+128)
  7653                           
  7654                           ;mpu_iic.c: 263: if(Sam_cnt >= 100)
  7655  01CE  3064               	movlw	100
  7656  01CF  0140               	movlb	0	; select bank0
  7657  01D0  0265               	subwf	_Sam_cnt,w
  7658  01D1  1C03               	skipc
  7659  01D2  29EF               	goto	i1l2559
  7660                           
  7661                           ;mpu_iic.c: 264: {;mpu_iic.c: 265: EUSART_Write(0x5A);
  7662  01D3  305A               	movlw	90
  7663  01D4  318D  25BD  3181   	fcall	i1_EUSART_Write
  7664                           
  7665                           ;mpu_iic.c: 266: EUSART_Write(New_gyro >>8);
  7666  01D7  0140               	movlb	0	; select bank0
  7667  01D8  0864               	movf	_New_gyro+1,w
  7668  01D9  318D  25BD  3181   	fcall	i1_EUSART_Write
  7669                           
  7670                           ;mpu_iic.c: 267: EUSART_Write(New_gyro);
  7671  01DC  0140               	movlb	0	; select bank0
  7672  01DD  0863               	movf	_New_gyro,w
  7673  01DE  318D  25BD  3181   	fcall	i1_EUSART_Write
  7674                           
  7675                           ;mpu_iic.c: 268: EUSART_Write(0xA5);
  7676  01E1  30A5               	movlw	165
  7677  01E2  318D  25BD  3181   	fcall	i1_EUSART_Write
  7678                           
  7679                           ;mpu_iic.c: 269: G_Offset_X = New_gyro;
  7680  01E5  0140               	movlb	0	; select bank0
  7681  01E6  0864               	movf	_New_gyro+1,w
  7682  01E7  0141               	movlb	1	; select bank1
  7683  01E8  00B8               	movwf	(_G_Offset_X+1)^(0+128)
  7684  01E9  0140               	movlb	0	; select bank0
  7685  01EA  0863               	movf	_New_gyro,w
  7686  01EB  0141               	movlb	1	; select bank1
  7687  01EC  00B7               	movwf	_G_Offset_X^(0+128)
  7688                           
  7689                           ;mpu_iic.c: 270: Sam_cnt = 0;
  7690  01ED  0140               	movlb	0	; select bank0
  7691  01EE  01E5               	clrf	_Sam_cnt
  7692  01EF                     i1l2559:	
  7693                           
  7694                           ;mpu_iic.c: 272: };mpu_iic.c: 274: gyro_angle = (gyro_angle - G_Offset_X)/131;
  7695  01EF  3000               	movlw	0
  7696  01F0  00B7               	movwf	___ftdiv@f2
  7697  01F1  3003               	movlw	3
  7698  01F2  00B8               	movwf	___ftdiv@f2+1
  7699  01F3  3043               	movlw	67
  7700  01F4  00B9               	movwf	___ftdiv@f2+2
  7701  01F5  084E               	movf	Mpu6500GyroAngle@gyro_angle,w
  7702  01F6  00AA               	movwf	___ftadd@f1
  7703  01F7  084F               	movf	Mpu6500GyroAngle@gyro_angle+1,w
  7704  01F8  00AB               	movwf	___ftadd@f1+1
  7705  01F9  0850               	movf	Mpu6500GyroAngle@gyro_angle+2,w
  7706  01FA  00AC               	movwf	___ftadd@f1+2
  7707  01FB  0141               	movlb	1	; select bank1
  7708  01FC  0838               	movf	(_G_Offset_X+1)^(0+128),w
  7709  01FD  00F9               	movwf	___awtoft@c+1
  7710  01FE  0837               	movf	_G_Offset_X^(0+128),w
  7711  01FF  00F8               	movwf	___awtoft@c
  7712  0200  318D  2538  3181   	fcall	___awtoft
  7713  0203  0878               	movf	?___awtoft,w
  7714  0204  0140               	movlb	0	; select bank0
  7715  0205  00A0               	movwf	___ftneg@f1
  7716  0206  0879               	movf	?___awtoft+1,w
  7717  0207  00A1               	movwf	___ftneg@f1+1
  7718  0208  087A               	movf	?___awtoft+2,w
  7719  0209  00A2               	movwf	___ftneg@f1+2
  7720  020A  318C  2440  3181   	fcall	___ftneg
  7721  020D  0140               	movlb	0	; select bank0
  7722  020E  0820               	movf	?___ftneg,w
  7723  020F  00AD               	movwf	___ftadd@f2
  7724  0210  0821               	movf	?___ftneg+1,w
  7725  0211  00AE               	movwf	___ftadd@f2+1
  7726  0212  0822               	movf	?___ftneg+2,w
  7727  0213  00AF               	movwf	___ftadd@f2+2
  7728  0214  3180  205A  3181   	fcall	___ftadd
  7729  0217  0140               	movlb	0	; select bank0
  7730  0218  082A               	movf	?___ftadd,w
  7731  0219  00BA               	movwf	___ftdiv@f1
  7732  021A  082B               	movf	?___ftadd+1,w
  7733  021B  00BB               	movwf	___ftdiv@f1+1
  7734  021C  082C               	movf	?___ftadd+2,w
  7735  021D  00BC               	movwf	___ftdiv@f1+2
  7736  021E  3183  23AC         	fcall	___ftdiv
  7737  0220  0140               	movlb	0	; select bank0
  7738  0221  0837               	movf	?___ftdiv,w
  7739  0222  00CE               	movwf	Mpu6500GyroAngle@gyro_angle
  7740  0223  0838               	movf	?___ftdiv+1,w
  7741  0224  00CF               	movwf	Mpu6500GyroAngle@gyro_angle+1
  7742  0225  0839               	movf	?___ftdiv+2,w
  7743  0226  00D0               	movwf	Mpu6500GyroAngle@gyro_angle+2
  7744                           
  7745                           ;mpu_iic.c: 276: return gyro_angle;
  7746  0227  084E               	movf	Mpu6500GyroAngle@gyro_angle,w
  7747  0228  00C7               	movwf	?_Mpu6500GyroAngle
  7748  0229  084F               	movf	Mpu6500GyroAngle@gyro_angle+1,w
  7749  022A  00C8               	movwf	?_Mpu6500GyroAngle+1
  7750  022B  0850               	movf	Mpu6500GyroAngle@gyro_angle+2,w
  7751  022C  00C9               	movwf	?_Mpu6500GyroAngle+2
  7752  022D  0008               	return
  7753  022E                     __end_of_Mpu6500GyroAngle:	
  7754                           
  7755                           	psect	text34
  7756  0D58                     __ptext34:	
  7757 ;; *************** function i1_Get6500Data *****************
  7758 ;; Defined at:
  7759 ;;		line 191 in file "src/mpu_iic.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  REG_Address     1    wreg     unsigned char 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  REG_Address     1   12[COMMON] unsigned char 
  7764 ;;  Get6500Data     1   11[COMMON] unsigned char 
  7765 ;;  Get6500Data     1   10[COMMON] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  2    8[COMMON] int 
  7768 ;; Registers used:
  7769 ;;		wreg, status,2, status,0, pclath, cstack
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7775 ;;      Params:         2       0       0       0       0       0       0       0
  7776 ;;      Locals:         3       0       0       0       0       0       0       0
  7777 ;;      Temps:          0       5       0       0       0       0       0       0
  7778 ;;      Totals:         5       5       0       0       0       0       0       0
  7779 ;;Total ram usage:       10 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    2
  7782 ;; This function calls:
  7783 ;;		i1_Com_Lock_MPU_RD_Reg
  7784 ;; This function is called by:
  7785 ;;		_Mpu6500GyroAngle
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           
  7790                           ;psect for function i1_Get6500Data
  7791  0D58                     i1_Get6500Data:	
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in i1_Get6500Data: [wreg+status,2+status,0+pclath+cstack]
  7795                           ;i1Get6500Data@REG_Address stored from wreg
  7796  0D58  00FC               	movwf	i1Get6500Data@REG_Address
  7797                           
  7798                           ;mpu_iic.c: 193: char H,L;;mpu_iic.c: 194: H=Com_Lock_MPU_RD_Reg(REG_Address);
  7799  0D59  087C               	movf	i1Get6500Data@REG_Address,w
  7800  0D5A  318D  25E3  318D   	fcall	i1_Com_Lock_MPU_RD_Reg
  7801  0D5D  0140               	movlb	0	; select bank0
  7802  0D5E  00A0               	movwf	??i1_Get6500Data
  7803  0D5F  0820               	movf	??i1_Get6500Data,w
  7804  0D60  00FA               	movwf	i1Get6500Data@H
  7805                           
  7806                           ;mpu_iic.c: 195: L=Com_Lock_MPU_RD_Reg(REG_Address+1);
  7807  0D61  087C               	movf	i1Get6500Data@REG_Address,w
  7808  0D62  3E01               	addlw	1
  7809  0D63  318D  25E3         	fcall	i1_Com_Lock_MPU_RD_Reg
  7810  0D65  0140               	movlb	0	; select bank0
  7811  0D66  00A0               	movwf	??i1_Get6500Data
  7812  0D67  0820               	movf	??i1_Get6500Data,w
  7813  0D68  00FB               	movwf	i1Get6500Data@L
  7814                           
  7815                           ;mpu_iic.c: 196: return (H<<8)+L;
  7816  0D69  087B               	movf	i1Get6500Data@L,w
  7817  0D6A  00A0               	movwf	??i1_Get6500Data
  7818  0D6B  01A1               	clrf	??i1_Get6500Data+1
  7819  0D6C  087A               	movf	i1Get6500Data@H,w
  7820  0D6D  00A2               	movwf	??i1_Get6500Data+2
  7821  0D6E  01A3               	clrf	??i1_Get6500Data+3
  7822  0D6F  0822               	movf	??i1_Get6500Data+2,w
  7823  0D70  00A3               	movwf	??i1_Get6500Data+3
  7824  0D71  01A2               	clrf	??i1_Get6500Data+2
  7825  0D72  0820               	movf	??i1_Get6500Data,w
  7826  0D73  0722               	addwf	??i1_Get6500Data+2,w
  7827  0D74  00F8               	movwf	?i1_Get6500Data
  7828  0D75  0821               	movf	??i1_Get6500Data+1,w
  7829  0D76  3D23               	addwfc	??i1_Get6500Data+3,w
  7830  0D77  00F9               	movwf	?i1_Get6500Data+1
  7831  0D78  0008               	return
  7832  0D79                     __end_ofi1_Get6500Data:	
  7833                           
  7834                           	psect	text35
  7835  0DE3                     __ptext35:	
  7836 ;; *************** function i1_Com_Lock_MPU_RD_Reg *****************
  7837 ;; Defined at:
  7838 ;;		line 174 in file "src/mpu_iic.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;  addr            1    wreg     unsigned char 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  addr            1    6[COMMON] unsigned char 
  7843 ;;  Com_Lock_MPU    1    7[COMMON] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      unsigned char 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, pclath, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7853 ;;      Params:         0       0       0       0       0       0       0       0
  7854 ;;      Locals:         2       0       0       0       0       0       0       0
  7855 ;;      Temps:          1       0       0       0       0       0       0       0
  7856 ;;      Totals:         3       0       0       0       0       0       0       0
  7857 ;;Total ram usage:        3 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    1
  7860 ;; This function calls:
  7861 ;;		i1_Com_Lock_IIC_Read_Data
  7862 ;;		i1_Com_Lock_IIC_Start
  7863 ;;		i1_Com_Lock_IIC_Stop
  7864 ;;		i1_Com_Lock_IIC_Write_Data
  7865 ;; This function is called by:
  7866 ;;		i1_Get6500Data
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           
  7871                           ;psect for function i1_Com_Lock_MPU_RD_Reg
  7872  0DE3                     i1_Com_Lock_MPU_RD_Reg:	
  7873                           
  7874                           ;incstack = 0
  7875                           ; Regs used in i1_Com_Lock_MPU_RD_Reg: [wreg+status,2+status,0+pclath+cstack]
  7876                           ;i1Com_Lock_MPU_RD_Reg@addr stored from wreg
  7877  0DE3  00F6               	movwf	i1Com_Lock_MPU_RD_Reg@addr
  7878                           
  7879                           ;mpu_iic.c: 176: uint8_t temp=0;
  7880  0DE4  01F7               	clrf	i1Com_Lock_MPU_RD_Reg@temp
  7881                           
  7882                           ;mpu_iic.c: 177: Com_Lock_IIC_Start();
  7883  0DE5  318C  249C  318D   	fcall	i1_Com_Lock_IIC_Start
  7884                           
  7885                           ;mpu_iic.c: 178: temp = Com_Lock_IIC_Write_Data(0xD0);
  7886  0DE8  30D0               	movlw	208
  7887  0DE9  318F  2741  318D   	fcall	i1_Com_Lock_IIC_Write_Data
  7888  0DEC  00F5               	movwf	??i1_Com_Lock_MPU_RD_Reg
  7889  0DED  0875               	movf	??i1_Com_Lock_MPU_RD_Reg,w
  7890  0DEE  00F7               	movwf	i1Com_Lock_MPU_RD_Reg@temp
  7891                           
  7892                           ;mpu_iic.c: 179: temp = Com_Lock_IIC_Write_Data(addr);
  7893  0DEF  0876               	movf	i1Com_Lock_MPU_RD_Reg@addr,w
  7894  0DF0  318F  2741  318D   	fcall	i1_Com_Lock_IIC_Write_Data
  7895  0DF3  00F5               	movwf	??i1_Com_Lock_MPU_RD_Reg
  7896  0DF4  0875               	movf	??i1_Com_Lock_MPU_RD_Reg,w
  7897  0DF5  00F7               	movwf	i1Com_Lock_MPU_RD_Reg@temp
  7898                           
  7899                           ;mpu_iic.c: 180: Com_Lock_IIC_Start();
  7900  0DF6  318C  249C  318D   	fcall	i1_Com_Lock_IIC_Start
  7901                           
  7902                           ;mpu_iic.c: 181: temp = Com_Lock_IIC_Write_Data(0xD0+1);
  7903  0DF9  30D1               	movlw	209
  7904  0DFA  318F  2741  318D   	fcall	i1_Com_Lock_IIC_Write_Data
  7905  0DFD  00F5               	movwf	??i1_Com_Lock_MPU_RD_Reg
  7906  0DFE  0875               	movf	??i1_Com_Lock_MPU_RD_Reg,w
  7907  0DFF  00F7               	movwf	i1Com_Lock_MPU_RD_Reg@temp
  7908                           
  7909                           ;mpu_iic.c: 182: temp=Com_Lock_IIC_Read_Data(0);
  7910  0E00  3000               	movlw	0
  7911  0E01  318F  277F  318D   	fcall	i1_Com_Lock_IIC_Read_Data
  7912  0E04  00F5               	movwf	??i1_Com_Lock_MPU_RD_Reg
  7913  0E05  0875               	movf	??i1_Com_Lock_MPU_RD_Reg,w
  7914  0E06  00F7               	movwf	i1Com_Lock_MPU_RD_Reg@temp
  7915                           
  7916                           ;mpu_iic.c: 183: Com_Lock_IIC_Stop();
  7917  0E07  318C  247C         	fcall	i1_Com_Lock_IIC_Stop
  7918                           
  7919                           ;mpu_iic.c: 184: return temp;
  7920  0E09  0877               	movf	i1Com_Lock_MPU_RD_Reg@temp,w
  7921  0E0A  0008               	return
  7922  0E0B                     __end_ofi1_Com_Lock_MPU_RD_Reg:	
  7923                           
  7924                           	psect	text36
  7925  0F41                     __ptext36:	
  7926 ;; *************** function i1_Com_Lock_IIC_Write_Data *****************
  7927 ;; Defined at:
  7928 ;;		line 77 in file "src/mpu_iic.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  dat             1    wreg     unsigned char 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;  dat             1    1[COMMON] unsigned char 
  7933 ;;  Com_Lock_IIC    2    3[COMMON] int 
  7934 ;;  Com_Lock_IIC    1    2[COMMON] unsigned char 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      unsigned char 
  7937 ;; Registers used:
  7938 ;;		wreg, status,2, status,0
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7944 ;;      Params:         0       0       0       0       0       0       0       0
  7945 ;;      Locals:         4       0       0       0       0       0       0       0
  7946 ;;      Temps:          1       0       0       0       0       0       0       0
  7947 ;;      Totals:         5       0       0       0       0       0       0       0
  7948 ;;Total ram usage:        5 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		i1_Com_Lock_MPU_RD_Reg
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           
  7958                           ;psect for function i1_Com_Lock_IIC_Write_Data
  7959  0F41                     i1_Com_Lock_IIC_Write_Data:	
  7960                           
  7961                           ;incstack = 0
  7962                           ; Regs used in i1_Com_Lock_IIC_Write_Data: [wreg+status,2+status,0]
  7963                           ;i1Com_Lock_IIC_Write_Data@dat stored from wreg
  7964  0F41  00F1               	movwf	i1Com_Lock_IIC_Write_Data@dat
  7965                           
  7966                           ;mpu_iic.c: 79: int i = 0;
  7967  0F42  01F3               	clrf	i1Com_Lock_IIC_Write_Data@i
  7968  0F43  01F4               	clrf	i1Com_Lock_IIC_Write_Data@i+1
  7969                           
  7970                           ;mpu_iic.c: 80: char retVal;;mpu_iic.c: 81: for(i = 0; i < 8; )
  7971  0F44  01F3               	clrf	i1Com_Lock_IIC_Write_Data@i
  7972  0F45  01F4               	clrf	i1Com_Lock_IIC_Write_Data@i+1
  7973  0F46  0874               	movf	i1Com_Lock_IIC_Write_Data@i+1,w
  7974  0F47  3A80               	xorlw	128
  7975  0F48  00F0               	movwf	??i1_Com_Lock_IIC_Write_Data
  7976  0F49  3080               	movlw	128
  7977  0F4A  0270               	subwf	??i1_Com_Lock_IIC_Write_Data,w
  7978  0F4B  3008               	movlw	8
  7979  0F4C  1903               	btfsc	3,2
  7980  0F4D  0273               	subwf	i1Com_Lock_IIC_Write_Data@i,w
  7981  0F4E  1803               	btfsc	3,0
  7982  0F4F  2F68               	goto	i1l290
  7983  0F50                     i1l289:	
  7984                           
  7985                           ;mpu_iic.c: 82: {;mpu_iic.c: 83: PORTCbits.RC3 = 0;
  7986  0F50  0140               	movlb	0	; select bank0
  7987  0F51  118E               	bcf	14,3	;volatile
  7988                           
  7989                           ;mpu_iic.c: 84: if(dat & 0x80)
  7990  0F52  1FF1               	btfss	i1Com_Lock_IIC_Write_Data@dat,7
  7991  0F53  2F56               	goto	i1l291
  7992                           
  7993                           ;mpu_iic.c: 85: {;mpu_iic.c: 86: PORTCbits.RC4 = 1;
  7994  0F54  160E               	bsf	14,4	;volatile
  7995                           
  7996                           ;mpu_iic.c: 87: }
  7997  0F55  2F57               	goto	i1l2079
  7998  0F56                     i1l291:	
  7999                           
  8000                           ;mpu_iic.c: 88: else;mpu_iic.c: 89: {;mpu_iic.c: 90: PORTCbits.RC4 = 0;
  8001  0F56  120E               	bcf	14,4	;volatile
  8002  0F57                     i1l2079:	
  8003                           
  8004                           ;mpu_iic.c: 91: };mpu_iic.c: 92: dat <<= 1;
  8005  0F57  1003               	clrc
  8006  0F58  0DF1               	rlf	i1Com_Lock_IIC_Write_Data@dat,f
  8007                           
  8008                           ;mpu_iic.c: 93: i++;
  8009  0F59  3001               	movlw	1
  8010  0F5A  07F3               	addwf	i1Com_Lock_IIC_Write_Data@i,f
  8011  0F5B  3000               	movlw	0
  8012  0F5C  3DF4               	addwfc	i1Com_Lock_IIC_Write_Data@i+1,f
  8013                           
  8014                           ;mpu_iic.c: 95: PORTCbits.RC3 = 1;
  8015  0F5D  158E               	bsf	14,3	;volatile
  8016  0F5E  0874               	movf	i1Com_Lock_IIC_Write_Data@i+1,w
  8017  0F5F  3A80               	xorlw	128
  8018  0F60  00F0               	movwf	??i1_Com_Lock_IIC_Write_Data
  8019  0F61  3080               	movlw	128
  8020  0F62  0270               	subwf	??i1_Com_Lock_IIC_Write_Data,w
  8021  0F63  3008               	movlw	8
  8022  0F64  1903               	btfsc	3,2
  8023  0F65  0273               	subwf	i1Com_Lock_IIC_Write_Data@i,w
  8024  0F66  1C03               	skipc
  8025  0F67  2F50               	goto	i1l289
  8026  0F68                     i1l290:	
  8027                           
  8028                           ;mpu_iic.c: 98: };mpu_iic.c: 99: PORTCbits.RC3 = 0;
  8029  0F68  0140               	movlb	0	; select bank0
  8030  0F69  118E               	bcf	14,3	;volatile
  8031                           
  8032                           ;mpu_iic.c: 101: TRISC |= 0x10;
  8033  0F6A  1614               	bsf	20,4	;volatile
  8034                           
  8035                           ;mpu_iic.c: 102: _delay((unsigned long)((4)*(8000000/4000000.0)));
  8036  0F6B  3200               	nop2	;2 cycle nop
  8037  0F6C  3200               	nop2	;2 cycle nop
  8038  0F6D  3200               	nop2	;2 cycle nop
  8039  0F6E  3200               	nop2	;2 cycle nop
  8040                           
  8041                           ;mpu_iic.c: 105: PORTCbits.RC3 = 1;
  8042  0F6F  0140               	movlb	0	; select bank0
  8043  0F70  158E               	bsf	14,3	;volatile
  8044                           
  8045                           ;mpu_iic.c: 106: _delay((unsigned long)((2)*(8000000/4000000.0)));
  8046  0F71  3200               	nop2	;2 cycle nop
  8047  0F72  3200               	nop2	;2 cycle nop
  8048                           
  8049                           ;mpu_iic.c: 107: retVal = PORTCbits.RC4;
  8050  0F73  3000               	movlw	0
  8051  0F74  0140               	movlb	0	; select bank0
  8052  0F75  1A0E               	btfsc	14,4	;volatile
  8053  0F76  3001               	movlw	1
  8054  0F77  00F2               	movwf	i1Com_Lock_IIC_Write_Data@retVal
  8055                           
  8056                           ;mpu_iic.c: 108: PORTCbits.RC3 = 0;
  8057  0F78  118E               	bcf	14,3	;volatile
  8058                           
  8059                           ;mpu_iic.c: 109: TRISC &= 0xEF;
  8060  0F79  30EF               	movlw	239
  8061  0F7A  00F0               	movwf	??i1_Com_Lock_IIC_Write_Data
  8062  0F7B  0870               	movf	??i1_Com_Lock_IIC_Write_Data,w
  8063  0F7C  0594               	andwf	20,f	;volatile
  8064                           
  8065                           ;mpu_iic.c: 110: return retVal;
  8066  0F7D  0872               	movf	i1Com_Lock_IIC_Write_Data@retVal,w
  8067  0F7E  0008               	return
  8068  0F7F                     __end_ofi1_Com_Lock_IIC_Write_Data:	
  8069                           
  8070                           	psect	text37
  8071  0C7C                     __ptext37:	
  8072 ;; *************** function i1_Com_Lock_IIC_Stop *****************
  8073 ;; Defined at:
  8074 ;;		line 60 in file "src/mpu_iic.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		None
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8088 ;;      Params:         0       0       0       0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0       0       0       0
  8091 ;;      Totals:         0       0       0       0       0       0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;;		i1_Com_Lock_MPU_RD_Reg
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           
  8102                           ;psect for function i1_Com_Lock_IIC_Stop
  8103  0C7C                     i1_Com_Lock_IIC_Stop:	
  8104                           
  8105                           ;mpu_iic.c: 62: PORTCbits.RC4 = 0;
  8106                           
  8107                           ;incstack = 0
  8108                           ; Regs used in i1_Com_Lock_IIC_Stop: []
  8109  0C7C  0140               	movlb	0	; select bank0
  8110  0C7D  120E               	bcf	14,4	;volatile
  8111                           
  8112                           ;mpu_iic.c: 63: _delay((unsigned long)((3)*(8000000/4000000.0)));
  8113  0C7E  3200               	nop2	;2 cycle nop
  8114  0C7F  3200               	nop2	;2 cycle nop
  8115  0C80  3200               	nop2	;2 cycle nop
  8116                           
  8117                           ;mpu_iic.c: 64: PORTCbits.RC3 = 1;
  8118  0C81  0140               	movlb	0	; select bank0
  8119  0C82  158E               	bsf	14,3	;volatile
  8120                           
  8121                           ;mpu_iic.c: 65: _delay((unsigned long)((3)*(8000000/4000000.0)));
  8122  0C83  3200               	nop2	;2 cycle nop
  8123  0C84  3200               	nop2	;2 cycle nop
  8124  0C85  3200               	nop2	;2 cycle nop
  8125                           
  8126                           ;mpu_iic.c: 66: PORTCbits.RC4 = 1;
  8127  0C86  0140               	movlb	0	; select bank0
  8128  0C87  160E               	bsf	14,4	;volatile
  8129                           
  8130                           ;mpu_iic.c: 67: _delay((unsigned long)((3)*(8000000/4000000.0)));
  8131  0C88  3200               	nop2	;2 cycle nop
  8132  0C89  3200               	nop2	;2 cycle nop
  8133  0C8A  3200               	nop2	;2 cycle nop
  8134  0C8B  0008               	return
  8135  0C8C                     __end_ofi1_Com_Lock_IIC_Stop:	
  8136                           
  8137                           	psect	text38
  8138  0C9C                     __ptext38:	
  8139 ;; *************** function i1_Com_Lock_IIC_Start *****************
  8140 ;; Defined at:
  8141 ;;		line 40 in file "src/mpu_iic.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;		None
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  1    wreg      void 
  8148 ;; Registers used:
  8149 ;;		None
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8155 ;;      Params:         0       0       0       0       0       0       0       0
  8156 ;;      Locals:         0       0       0       0       0       0       0       0
  8157 ;;      Temps:          0       0       0       0       0       0       0       0
  8158 ;;      Totals:         0       0       0       0       0       0       0       0
  8159 ;;Total ram usage:        0 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		i1_Com_Lock_MPU_RD_Reg
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           
  8169                           ;psect for function i1_Com_Lock_IIC_Start
  8170  0C9C                     i1_Com_Lock_IIC_Start:	
  8171                           
  8172                           ;mpu_iic.c: 42: PORTCbits.RC4 = 1;
  8173                           
  8174                           ;incstack = 0
  8175                           ; Regs used in i1_Com_Lock_IIC_Start: []
  8176  0C9C  0140               	movlb	0	; select bank0
  8177  0C9D  160E               	bsf	14,4	;volatile
  8178                           
  8179                           ;mpu_iic.c: 44: _delay((unsigned long)((2)*(8000000/4000000.0)));
  8180  0C9E  3200               	nop2	;2 cycle nop
  8181  0C9F  3200               	nop2	;2 cycle nop
  8182                           
  8183                           ;mpu_iic.c: 45: PORTCbits.RC3 = 1;
  8184  0CA0  0140               	movlb	0	; select bank0
  8185  0CA1  158E               	bsf	14,3	;volatile
  8186                           
  8187                           ;mpu_iic.c: 47: _delay((unsigned long)((3)*(8000000/4000000.0)));
  8188  0CA2  3200               	nop2	;2 cycle nop
  8189  0CA3  3200               	nop2	;2 cycle nop
  8190  0CA4  3200               	nop2	;2 cycle nop
  8191                           
  8192                           ;mpu_iic.c: 48: PORTCbits.RC4 = 0;
  8193  0CA5  0140               	movlb	0	; select bank0
  8194  0CA6  120E               	bcf	14,4	;volatile
  8195                           
  8196                           ;mpu_iic.c: 49: _delay((unsigned long)((3)*(8000000/4000000.0)));
  8197  0CA7  3200               	nop2	;2 cycle nop
  8198  0CA8  3200               	nop2	;2 cycle nop
  8199  0CA9  3200               	nop2	;2 cycle nop
  8200                           
  8201                           ;mpu_iic.c: 50: PORTCbits.RC3 = 0;
  8202  0CAA  0140               	movlb	0	; select bank0
  8203  0CAB  118E               	bcf	14,3	;volatile
  8204  0CAC  0008               	return
  8205  0CAD                     __end_ofi1_Com_Lock_IIC_Start:	
  8206                           
  8207                           	psect	text39
  8208  0F7F                     __ptext39:	
  8209 ;; *************** function i1_Com_Lock_IIC_Read_Data *****************
  8210 ;; Defined at:
  8211 ;;		line 137 in file "src/mpu_iic.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  ack             1    wreg     unsigned char 
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;  ack             1    1[COMMON] unsigned char 
  8216 ;;  Com_Lock_IIC    2    3[COMMON] int 
  8217 ;;  Com_Lock_IIC    1    2[COMMON] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      unsigned char 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2, status,0
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8227 ;;      Params:         0       0       0       0       0       0       0       0
  8228 ;;      Locals:         4       0       0       0       0       0       0       0
  8229 ;;      Temps:          1       0       0       0       0       0       0       0
  8230 ;;      Totals:         5       0       0       0       0       0       0       0
  8231 ;;Total ram usage:        5 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		i1_Com_Lock_MPU_RD_Reg
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           
  8241                           ;psect for function i1_Com_Lock_IIC_Read_Data
  8242  0F7F                     i1_Com_Lock_IIC_Read_Data:	
  8243                           
  8244                           ;incstack = 0
  8245                           ; Regs used in i1_Com_Lock_IIC_Read_Data: [wreg+status,2+status,0]
  8246                           ;i1Com_Lock_IIC_Read_Data@ack stored from wreg
  8247  0F7F  00F1               	movwf	i1Com_Lock_IIC_Read_Data@ack
  8248                           
  8249                           ;mpu_iic.c: 139: int i = 0;
  8250  0F80  01F3               	clrf	i1Com_Lock_IIC_Read_Data@i
  8251  0F81  01F4               	clrf	i1Com_Lock_IIC_Read_Data@i+1
  8252                           
  8253                           ;mpu_iic.c: 140: char retVal = 0;
  8254  0F82  01F2               	clrf	i1Com_Lock_IIC_Read_Data@retVal
  8255                           
  8256                           ;mpu_iic.c: 141: PORTCbits.RC3 = 0;
  8257  0F83  0140               	movlb	0	; select bank0
  8258  0F84  118E               	bcf	14,3	;volatile
  8259                           
  8260                           ;mpu_iic.c: 142: TRISC |= 0x10;
  8261  0F85  1614               	bsf	20,4	;volatile
  8262                           
  8263                           ;mpu_iic.c: 143: for(i = 0; i < 8; i++)
  8264  0F86  01F3               	clrf	i1Com_Lock_IIC_Read_Data@i
  8265  0F87  01F4               	clrf	i1Com_Lock_IIC_Read_Data@i+1
  8266  0F88  0874               	movf	i1Com_Lock_IIC_Read_Data@i+1,w
  8267  0F89  3A80               	xorlw	128
  8268  0F8A  00F0               	movwf	??i1_Com_Lock_IIC_Read_Data
  8269  0F8B  3080               	movlw	128
  8270  0F8C  0270               	subwf	??i1_Com_Lock_IIC_Read_Data,w
  8271  0F8D  3008               	movlw	8
  8272  0F8E  1903               	btfsc	3,2
  8273  0F8F  0273               	subwf	i1Com_Lock_IIC_Read_Data@i,w
  8274  0F90  1803               	btfsc	3,0
  8275  0F91  2FAA               	goto	i1l2113
  8276  0F92                     i1l299:	
  8277                           
  8278                           ;mpu_iic.c: 144: {;mpu_iic.c: 146: PORTCbits.RC3 = 1;
  8279  0F92  0140               	movlb	0	; select bank0
  8280  0F93  158E               	bsf	14,3	;volatile
  8281                           
  8282                           ;mpu_iic.c: 148: retVal <<= 1;
  8283  0F94  1003               	clrc
  8284  0F95  0DF2               	rlf	i1Com_Lock_IIC_Read_Data@retVal,f
  8285                           
  8286                           ;mpu_iic.c: 149: retVal |= PORTCbits.RC4;
  8287  0F96  0E0E               	swapf	14,w	;volatile
  8288  0F97  3901               	andlw	1
  8289  0F98  00F0               	movwf	??i1_Com_Lock_IIC_Read_Data
  8290  0F99  0870               	movf	??i1_Com_Lock_IIC_Read_Data,w
  8291  0F9A  04F2               	iorwf	i1Com_Lock_IIC_Read_Data@retVal,f
  8292                           
  8293                           ;mpu_iic.c: 150: PORTCbits.RC3 = 0;
  8294  0F9B  118E               	bcf	14,3	;volatile
  8295  0F9C  3001               	movlw	1
  8296  0F9D  07F3               	addwf	i1Com_Lock_IIC_Read_Data@i,f
  8297  0F9E  3000               	movlw	0
  8298  0F9F  3DF4               	addwfc	i1Com_Lock_IIC_Read_Data@i+1,f
  8299  0FA0  0874               	movf	i1Com_Lock_IIC_Read_Data@i+1,w
  8300  0FA1  3A80               	xorlw	128
  8301  0FA2  00F0               	movwf	??i1_Com_Lock_IIC_Read_Data
  8302  0FA3  3080               	movlw	128
  8303  0FA4  0270               	subwf	??i1_Com_Lock_IIC_Read_Data,w
  8304  0FA5  3008               	movlw	8
  8305  0FA6  1903               	btfsc	3,2
  8306  0FA7  0273               	subwf	i1Com_Lock_IIC_Read_Data@i,w
  8307  0FA8  1C03               	skipc
  8308  0FA9  2F92               	goto	i1l299
  8309  0FAA                     i1l2113:	
  8310                           
  8311                           ;mpu_iic.c: 151: };mpu_iic.c: 152: TRISC &= 0xEF;
  8312  0FAA  30EF               	movlw	239
  8313  0FAB  00F0               	movwf	??i1_Com_Lock_IIC_Read_Data
  8314  0FAC  0870               	movf	??i1_Com_Lock_IIC_Read_Data,w
  8315  0FAD  0140               	movlb	0	; select bank0
  8316  0FAE  0594               	andwf	20,f	;volatile
  8317                           
  8318                           ;mpu_iic.c: 154: if(ack)
  8319  0FAF  0871               	movf	i1Com_Lock_IIC_Read_Data@ack,w
  8320  0FB0  1903               	btfsc	3,2
  8321  0FB1  2FB4               	goto	i1l301
  8322                           
  8323                           ;mpu_iic.c: 155: {;mpu_iic.c: 156: PORTCbits.RC4 = 0;
  8324  0FB2  120E               	bcf	14,4	;volatile
  8325                           
  8326                           ;mpu_iic.c: 157: }
  8327  0FB3  2FB5               	goto	i1l302
  8328  0FB4                     i1l301:	
  8329                           
  8330                           ;mpu_iic.c: 159: else;mpu_iic.c: 160: {;mpu_iic.c: 161: PORTCbits.RC4 = 1;
  8331  0FB4  160E               	bsf	14,4	;volatile
  8332  0FB5                     i1l302:	
  8333                           
  8334                           ;mpu_iic.c: 162: };mpu_iic.c: 163: _delay((unsigned long)((2)*(8000000/4000000.0)));
  8335  0FB5  3200               	nop2	;2 cycle nop
  8336  0FB6  3200               	nop2	;2 cycle nop
  8337                           
  8338                           ;mpu_iic.c: 164: PORTCbits.RC3 = 1;
  8339  0FB7  0140               	movlb	0	; select bank0
  8340  0FB8  158E               	bsf	14,3	;volatile
  8341                           
  8342                           ;mpu_iic.c: 165: _delay((unsigned long)((2)*(8000000/4000000.0)));
  8343  0FB9  3200               	nop2	;2 cycle nop
  8344  0FBA  3200               	nop2	;2 cycle nop
  8345                           
  8346                           ;mpu_iic.c: 166: PORTCbits.RC3 = 0;
  8347  0FBB  0140               	movlb	0	; select bank0
  8348  0FBC  118E               	bcf	14,3	;volatile
  8349                           
  8350                           ;mpu_iic.c: 167: return retVal;
  8351  0FBD  0872               	movf	i1Com_Lock_IIC_Read_Data@retVal,w
  8352  0FBE  0008               	return
  8353  0FBF                     __end_ofi1_Com_Lock_IIC_Read_Data:	
  8354                           
  8355                           	psect	text40
  8356  0DBD                     __ptext40:	
  8357 ;; *************** function i1_EUSART_Write *****************
  8358 ;; Defined at:
  8359 ;;		line 144 in file "src/eusart.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  txData          1    wreg     unsigned char 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  txData          1    1[COMMON] unsigned char 
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  1    wreg      void 
  8366 ;; Registers used:
  8367 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8373 ;;      Params:         0       0       0       0       0       0       0       0
  8374 ;;      Locals:         1       0       0       0       0       0       0       0
  8375 ;;      Temps:          1       0       0       0       0       0       0       0
  8376 ;;      Totals:         2       0       0       0       0       0       0       0
  8377 ;;Total ram usage:        2 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_Mpu6500GyroAngle
  8383 ;;		_TMR0_Task
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           
  8388                           ;psect for function i1_EUSART_Write
  8389  0DBD                     i1_EUSART_Write:	
  8390                           
  8391                           ;incstack = 0
  8392                           ; Regs used in i1_EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  8393                           ;i1EUSART_Write@txData stored from wreg
  8394  0DBD  00F1               	movwf	i1EUSART_Write@txData
  8395  0DBE                     i1l2447:	
  8396                           ;eusart.c: 147: {
  8397                           
  8398                           ;eusart.c: 146: while(0 == eusartTxBufferRemaining)
  8399                           
  8400  0DBE  0140               	movlb	0	; select bank0
  8401  0DBF  086C               	movf	_eusartTxBufferRemaining,w	;volatile
  8402  0DC0  1903               	btfsc	3,2
  8403  0DC1  2DBE               	goto	i1l2447
  8404  0DC2                     i1l161:	
  8405                           ;eusart.c: 150: {
  8406                           
  8407                           ;eusart.c: 148: };eusart.c: 149: while(!(TX1STA&0x02))
  8408                           
  8409  0DC2  0142               	movlb	2	; select bank2
  8410  0DC3  1C9E               	btfss	30,1	;volatile
  8411  0DC4  2DC2               	goto	i1l161
  8412                           
  8413                           ;eusart.c: 152: };eusart.c: 153: if(0 == PIE3bits.TX1IE)
  8414  0DC5  014E               	movlb	14	; select bank14
  8415  0DC6  1A19               	btfsc	25,4	;volatile
  8416  0DC7  2DCC               	goto	i1l164
  8417                           
  8418                           ;eusart.c: 154: {;eusart.c: 155: TX1REG = txData;
  8419  0DC8  0871               	movf	i1EUSART_Write@txData,w
  8420  0DC9  0142               	movlb	2	; select bank2
  8421  0DCA  009A               	movwf	26	;volatile
  8422                           
  8423                           ;eusart.c: 156: }
  8424  0DCB  0008               	return
  8425  0DCC                     i1l164:	
  8426                           
  8427                           ;eusart.c: 157: else;eusart.c: 158: {;eusart.c: 159: PIE3bits.TX1IE = 0;
  8428  0DCC  1219               	bcf	25,4	;volatile
  8429                           
  8430                           ;eusart.c: 160: eusartTxBuffer[eusartTxHead++] = txData;
  8431  0DCD  0871               	movf	i1EUSART_Write@txData,w
  8432  0DCE  00F0               	movwf	??i1_EUSART_Write
  8433  0DCF  0140               	movlb	0	; select bank0
  8434  0DD0  086B               	movf	_eusartTxHead,w
  8435  0DD1  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  8436  0DD2  0086               	movwf	6
  8437  0DD3  0187               	clrf	7
  8438  0DD4  0870               	movf	??i1_EUSART_Write,w
  8439  0DD5  0081               	movwf	1
  8440  0DD6  3001               	movlw	1
  8441  0DD7  00F0               	movwf	??i1_EUSART_Write
  8442  0DD8  0870               	movf	??i1_EUSART_Write,w
  8443  0DD9  07EB               	addwf	_eusartTxHead,f
  8444                           
  8445                           ;eusart.c: 161: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  8446  0DDA  3008               	movlw	8
  8447  0DDB  026B               	subwf	_eusartTxHead,w
  8448  0DDC  1803               	btfsc	3,0
  8449                           
  8450                           ;eusart.c: 162: {;eusart.c: 163: eusartTxHead = 0;
  8451  0DDD  01EB               	clrf	_eusartTxHead
  8452                           
  8453                           ;eusart.c: 164: };eusart.c: 165: eusartTxBufferRemaining--;
  8454  0DDE  3001               	movlw	1
  8455  0DDF  02EC               	subwf	_eusartTxBufferRemaining,f	;volatile
  8456                           
  8457                           ;eusart.c: 166: PIE3bits.TX1IE = 1;
  8458  0DE0  014E               	movlb	14	; select bank14
  8459  0DE1  1619               	bsf	25,4	;volatile
  8460  0DE2  0008               	return
  8461  0DE3                     __end_ofi1_EUSART_Write:	
  8462                           
  8463                           	psect	text41
  8464  0C60                     __ptext41:	
  8465 ;; *************** function _abs *****************
  8466 ;; Defined at:
  8467 ;;		line 4 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\abs.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  a               2    0[COMMON] int 
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;		None
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  2    0[COMMON] int 
  8474 ;; Registers used:
  8475 ;;		wreg, status,2, status,0
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8481 ;;      Params:         2       0       0       0       0       0       0       0
  8482 ;;      Locals:         0       0       0       0       0       0       0       0
  8483 ;;      Temps:          2       0       0       0       0       0       0       0
  8484 ;;      Totals:         4       0       0       0       0       0       0       0
  8485 ;;Total ram usage:        4 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; This function calls:
  8488 ;;		Nothing
  8489 ;; This function is called by:
  8490 ;;		_Mpu6500GyroAngle
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           
  8495                           ;psect for function _abs
  8496  0C60                     _abs:	
  8497                           
  8498                           ;incstack = 0
  8499                           ; Regs used in _abs: [wreg+status,2+status,0]
  8500  0C60  1FF1               	btfss	abs@a+1,7
  8501  0C61  0008               	return
  8502  0C62  0970               	comf	abs@a,w
  8503  0C63  00F2               	movwf	??_abs
  8504  0C64  0971               	comf	abs@a+1,w
  8505  0C65  00F3               	movwf	??_abs+1
  8506  0C66  0AF2               	incf	??_abs,f
  8507  0C67  1903               	skipnz
  8508  0C68  0AF3               	incf	??_abs+1,f
  8509  0C69  0872               	movf	??_abs,w
  8510  0C6A  00F0               	movwf	?_abs
  8511  0C6B  0873               	movf	??_abs+1,w
  8512  0C6C  00F1               	movwf	?_abs+1
  8513  0C6D  0008               	return
  8514  0C6E                     __end_of_abs:	
  8515                           
  8516                           	psect	text42
  8517  0C40                     __ptext42:	
  8518 ;; *************** function ___ftneg *****************
  8519 ;; Defined at:
  8520 ;;		line 15 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\ftneg.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  f1              3    0[BANK0 ] float 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  3    0[BANK0 ] float 
  8527 ;; Registers used:
  8528 ;;		wreg
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8534 ;;      Params:         0       3       0       0       0       0       0       0
  8535 ;;      Locals:         0       0       0       0       0       0       0       0
  8536 ;;      Temps:          0       0       0       0       0       0       0       0
  8537 ;;      Totals:         0       3       0       0       0       0       0       0
  8538 ;;Total ram usage:        3 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_Mpu6500GyroAngle
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           
  8548                           ;psect for function ___ftneg
  8549  0C40                     ___ftneg:	
  8550                           
  8551                           ;incstack = 0
  8552                           ; Regs used in ___ftneg: [wreg]
  8553  0C40  0140               	movlb	0	; select bank0
  8554  0C41  0822               	movf	___ftneg@f1+2,w
  8555  0C42  0421               	iorwf	___ftneg@f1+1,w
  8556  0C43  0420               	iorwf	___ftneg@f1,w
  8557  0C44  1903               	skipnz
  8558  0C45  0008               	return
  8559  0C46  3080               	movlw	128
  8560  0C47  06A2               	xorwf	___ftneg@f1+2,f
  8561  0C48  0008               	return
  8562  0C49                     __end_of___ftneg:	
  8563                           
  8564                           	psect	text43
  8565  03AC                     __ptext43:	
  8566 ;; *************** function ___ftdiv *****************
  8567 ;; Defined at:
  8568 ;;		line 56 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\ftdiv.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  f2              3   23[BANK0 ] float 
  8571 ;;  f1              3   26[BANK0 ] float 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;  f3              3   34[BANK0 ] float 
  8574 ;;  sign            1   38[BANK0 ] unsigned char 
  8575 ;;  exp             1   37[BANK0 ] unsigned char 
  8576 ;;  cntr            1   33[BANK0 ] unsigned char 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  3   23[BANK0 ] float 
  8579 ;; Registers used:
  8580 ;;		wreg, status,2, status,0, pclath, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8586 ;;      Params:         0       6       0       0       0       0       0       0
  8587 ;;      Locals:         0       6       0       0       0       0       0       0
  8588 ;;      Temps:          0       4       0       0       0       0       0       0
  8589 ;;      Totals:         0      16       0       0       0       0       0       0
  8590 ;;Total ram usage:       16 bytes
  8591 ;; Hardware stack levels used:    1
  8592 ;; Hardware stack levels required when called:    1
  8593 ;; This function calls:
  8594 ;;		___ftpack
  8595 ;; This function is called by:
  8596 ;;		_Mpu6500GyroAngle
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           
  8601                           ;psect for function ___ftdiv
  8602  03AC                     ___ftdiv:	
  8603                           
  8604                           ;incstack = 0
  8605                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8606  03AC  0140               	movlb	0	; select bank0
  8607  03AD  083A               	movf	___ftdiv@f1,w
  8608  03AE  00BD               	movwf	??___ftdiv
  8609  03AF  083B               	movf	___ftdiv@f1+1,w
  8610  03B0  00BE               	movwf	??___ftdiv+1
  8611  03B1  083C               	movf	___ftdiv@f1+2,w
  8612  03B2  00BF               	movwf	??___ftdiv+2
  8613  03B3  1003               	clrc
  8614  03B4  0D3E               	rlf	??___ftdiv+1,w
  8615  03B5  0D3F               	rlf	??___ftdiv+2,w
  8616  03B6  00C0               	movwf	??___ftdiv+3
  8617  03B7  0840               	movf	??___ftdiv+3,w
  8618  03B8  00C5               	movwf	___ftdiv@exp
  8619  03B9  0845               	movf	___ftdiv@exp,w
  8620  03BA  1D03               	btfss	3,2
  8621  03BB  2BC3               	goto	i1l2351
  8622  03BC  3000               	movlw	0
  8623  03BD  00B7               	movwf	?___ftdiv
  8624  03BE  3000               	movlw	0
  8625  03BF  00B8               	movwf	?___ftdiv+1
  8626  03C0  3000               	movlw	0
  8627  03C1  00B9               	movwf	?___ftdiv+2
  8628  03C2  0008               	return
  8629  03C3                     i1l2351:	
  8630  03C3  0837               	movf	___ftdiv@f2,w
  8631  03C4  00BD               	movwf	??___ftdiv
  8632  03C5  0838               	movf	___ftdiv@f2+1,w
  8633  03C6  00BE               	movwf	??___ftdiv+1
  8634  03C7  0839               	movf	___ftdiv@f2+2,w
  8635  03C8  00BF               	movwf	??___ftdiv+2
  8636  03C9  1003               	clrc
  8637  03CA  0D3E               	rlf	??___ftdiv+1,w
  8638  03CB  0D3F               	rlf	??___ftdiv+2,w
  8639  03CC  00C0               	movwf	??___ftdiv+3
  8640  03CD  0840               	movf	??___ftdiv+3,w
  8641  03CE  00C6               	movwf	___ftdiv@sign
  8642  03CF  0846               	movf	___ftdiv@sign,w
  8643  03D0  1D03               	btfss	3,2
  8644  03D1  2BD9               	goto	i1l2357
  8645  03D2  3000               	movlw	0
  8646  03D3  00B7               	movwf	?___ftdiv
  8647  03D4  3000               	movlw	0
  8648  03D5  00B8               	movwf	?___ftdiv+1
  8649  03D6  3000               	movlw	0
  8650  03D7  00B9               	movwf	?___ftdiv+2
  8651  03D8  0008               	return
  8652  03D9                     i1l2357:	
  8653  03D9  3000               	movlw	0
  8654  03DA  00C2               	movwf	___ftdiv@f3
  8655  03DB  3000               	movlw	0
  8656  03DC  00C3               	movwf	___ftdiv@f3+1
  8657  03DD  3000               	movlw	0
  8658  03DE  00C4               	movwf	___ftdiv@f3+2
  8659  03DF  3089               	movlw	137
  8660  03E0  0746               	addwf	___ftdiv@sign,w
  8661  03E1  00BD               	movwf	??___ftdiv
  8662  03E2  083D               	movf	??___ftdiv,w
  8663  03E3  02C5               	subwf	___ftdiv@exp,f
  8664  03E4  083A               	movf	___ftdiv@f1,w
  8665  03E5  00BD               	movwf	??___ftdiv
  8666  03E6  083B               	movf	___ftdiv@f1+1,w
  8667  03E7  00BE               	movwf	??___ftdiv+1
  8668  03E8  083C               	movf	___ftdiv@f1+2,w
  8669  03E9  00BF               	movwf	??___ftdiv+2
  8670  03EA  3010               	movlw	16
  8671  03EB                     u217_25:	
  8672  03EB  36BF               	lsrf	??___ftdiv+2,f
  8673  03EC  0CBE               	rrf	??___ftdiv+1,f
  8674  03ED  0CBD               	rrf	??___ftdiv,f
  8675  03EE  0B89               	decfsz	9,f
  8676  03EF  2BEB               	goto	u217_25
  8677  03F0  083D               	movf	??___ftdiv,w
  8678  03F1  00C0               	movwf	??___ftdiv+3
  8679  03F2  0840               	movf	??___ftdiv+3,w
  8680  03F3  00C6               	movwf	___ftdiv@sign
  8681  03F4  0837               	movf	___ftdiv@f2,w
  8682  03F5  00BD               	movwf	??___ftdiv
  8683  03F6  0838               	movf	___ftdiv@f2+1,w
  8684  03F7  00BE               	movwf	??___ftdiv+1
  8685  03F8  0839               	movf	___ftdiv@f2+2,w
  8686  03F9  00BF               	movwf	??___ftdiv+2
  8687  03FA  3010               	movlw	16
  8688  03FB                     u218_25:	
  8689  03FB  36BF               	lsrf	??___ftdiv+2,f
  8690  03FC  0CBE               	rrf	??___ftdiv+1,f
  8691  03FD  0CBD               	rrf	??___ftdiv,f
  8692  03FE  0B89               	decfsz	9,f
  8693  03FF  2BFB               	goto	u218_25
  8694  0400  083D               	movf	??___ftdiv,w
  8695  0401  00C0               	movwf	??___ftdiv+3
  8696  0402  0840               	movf	??___ftdiv+3,w
  8697  0403  06C6               	xorwf	___ftdiv@sign,f
  8698  0404  3080               	movlw	128
  8699  0405  00BD               	movwf	??___ftdiv
  8700  0406  083D               	movf	??___ftdiv,w
  8701  0407  05C6               	andwf	___ftdiv@sign,f
  8702  0408  17BB               	bsf	___ftdiv@f1+1,7
  8703  0409  30FF               	movlw	255
  8704  040A  05BA               	andwf	___ftdiv@f1,f
  8705  040B  30FF               	movlw	255
  8706  040C  05BB               	andwf	___ftdiv@f1+1,f
  8707  040D  3000               	movlw	0
  8708  040E  05BC               	andwf	___ftdiv@f1+2,f
  8709  040F  17B8               	bsf	___ftdiv@f2+1,7
  8710  0410  30FF               	movlw	255
  8711  0411  05B7               	andwf	___ftdiv@f2,f
  8712  0412  30FF               	movlw	255
  8713  0413  05B8               	andwf	___ftdiv@f2+1,f
  8714  0414  3000               	movlw	0
  8715  0415  05B9               	andwf	___ftdiv@f2+2,f
  8716  0416  3018               	movlw	24
  8717  0417  00BD               	movwf	??___ftdiv
  8718  0418  083D               	movf	??___ftdiv,w
  8719  0419  00C1               	movwf	___ftdiv@cntr
  8720  041A                     i1l2371:	
  8721  041A  3001               	movlw	1
  8722  041B                     u219_25:	
  8723  041B  35C2               	lslf	___ftdiv@f3,f
  8724  041C  0DC3               	rlf	___ftdiv@f3+1,f
  8725  041D  0DC4               	rlf	___ftdiv@f3+2,f
  8726  041E  0B89               	decfsz	9,f
  8727  041F  2C1B               	goto	u219_25
  8728  0420  0839               	movf	___ftdiv@f2+2,w
  8729  0421  023C               	subwf	___ftdiv@f1+2,w
  8730  0422  1D03               	skipz
  8731  0423  2C2A               	goto	u220_25
  8732  0424  0838               	movf	___ftdiv@f2+1,w
  8733  0425  023B               	subwf	___ftdiv@f1+1,w
  8734  0426  1D03               	skipz
  8735  0427  2C2A               	goto	u220_25
  8736  0428  0837               	movf	___ftdiv@f2,w
  8737  0429  023A               	subwf	___ftdiv@f1,w
  8738  042A                     u220_25:	
  8739  042A  1C03               	skipc
  8740  042B  2C33               	goto	i1l2379
  8741  042C  0837               	movf	___ftdiv@f2,w
  8742  042D  02BA               	subwf	___ftdiv@f1,f
  8743  042E  0838               	movf	___ftdiv@f2+1,w
  8744  042F  3BBB               	subwfb	___ftdiv@f1+1,f
  8745  0430  0839               	movf	___ftdiv@f2+2,w
  8746  0431  3BBC               	subwfb	___ftdiv@f1+2,f
  8747  0432  1442               	bsf	___ftdiv@f3,0
  8748  0433                     i1l2379:	
  8749  0433  3001               	movlw	1
  8750  0434                     u221_25:	
  8751  0434  35BA               	lslf	___ftdiv@f1,f
  8752  0435  0DBB               	rlf	___ftdiv@f1+1,f
  8753  0436  0DBC               	rlf	___ftdiv@f1+2,f
  8754  0437  0B89               	decfsz	9,f
  8755  0438  2C34               	goto	u221_25
  8756  0439  3001               	movlw	1
  8757  043A  02C1               	subwf	___ftdiv@cntr,f
  8758  043B  1D03               	btfss	3,2
  8759  043C  2C1A               	goto	i1l2371
  8760  043D  0842               	movf	___ftdiv@f3,w
  8761  043E  00F0               	movwf	___ftpack@arg
  8762  043F  0843               	movf	___ftdiv@f3+1,w
  8763  0440  00F1               	movwf	___ftpack@arg+1
  8764  0441  0844               	movf	___ftdiv@f3+2,w
  8765  0442  00F2               	movwf	___ftpack@arg+2
  8766  0443  0845               	movf	___ftdiv@exp,w
  8767  0444  00BD               	movwf	??___ftdiv
  8768  0445  083D               	movf	??___ftdiv,w
  8769  0446  00F3               	movwf	___ftpack@exp
  8770  0447  0846               	movf	___ftdiv@sign,w
  8771  0448  00BE               	movwf	??___ftdiv+1
  8772  0449  083E               	movf	??___ftdiv+1,w
  8773  044A  00F4               	movwf	___ftpack@sign
  8774  044B  3186  2650         	fcall	___ftpack
  8775  044D  0870               	movf	?___ftpack,w
  8776  044E  0140               	movlb	0	; select bank0
  8777  044F  00B7               	movwf	?___ftdiv
  8778  0450  0871               	movf	?___ftpack+1,w
  8779  0451  00B8               	movwf	?___ftdiv+1
  8780  0452  0872               	movf	?___ftpack+2,w
  8781  0453  00B9               	movwf	?___ftdiv+2
  8782  0454  0008               	return
  8783  0455                     __end_of___ftdiv:	
  8784                           
  8785                           	psect	text44
  8786  0D38                     __ptext44:	
  8787 ;; *************** function ___awtoft *****************
  8788 ;; Defined at:
  8789 ;;		line 32 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\awtoft.c"
  8790 ;; Parameters:    Size  Location     Type
  8791 ;;  c               2    8[COMMON] int 
  8792 ;; Auto vars:     Size  Location     Type
  8793 ;;  sign            1   13[COMMON] unsigned char 
  8794 ;; Return value:  Size  Location     Type
  8795 ;;                  3    8[COMMON] float 
  8796 ;; Registers used:
  8797 ;;		wreg, status,2, status,0, pclath, cstack
  8798 ;; Tracked objects:
  8799 ;;		On entry : 0/0
  8800 ;;		On exit  : 0/0
  8801 ;;		Unchanged: 0/0
  8802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8803 ;;      Params:         3       0       0       0       0       0       0       0
  8804 ;;      Locals:         1       0       0       0       0       0       0       0
  8805 ;;      Temps:          2       0       0       0       0       0       0       0
  8806 ;;      Totals:         6       0       0       0       0       0       0       0
  8807 ;;Total ram usage:        6 bytes
  8808 ;; Hardware stack levels used:    1
  8809 ;; Hardware stack levels required when called:    1
  8810 ;; This function calls:
  8811 ;;		___ftpack
  8812 ;; This function is called by:
  8813 ;;		_Mpu6500GyroAngle
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           
  8818                           ;psect for function ___awtoft
  8819  0D38                     ___awtoft:	
  8820                           
  8821                           ;incstack = 0
  8822                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8823  0D38  01FD               	clrf	___awtoft@sign
  8824  0D39  1FF9               	btfss	___awtoft@c+1,7
  8825  0D3A  2D42               	goto	i1l2271
  8826  0D3B  09F8               	comf	___awtoft@c,f
  8827  0D3C  09F9               	comf	___awtoft@c+1,f
  8828  0D3D  0AF8               	incf	___awtoft@c,f
  8829  0D3E  1903               	skipnz
  8830  0D3F  0AF9               	incf	___awtoft@c+1,f
  8831  0D40  01FD               	clrf	___awtoft@sign
  8832  0D41  0AFD               	incf	___awtoft@sign,f
  8833  0D42                     i1l2271:	
  8834  0D42  0878               	movf	___awtoft@c,w
  8835  0D43  00F0               	movwf	___ftpack@arg
  8836  0D44  0879               	movf	___awtoft@c+1,w
  8837  0D45  00F1               	movwf	___ftpack@arg+1
  8838  0D46  01F2               	clrf	___ftpack@arg+2
  8839  0D47  308E               	movlw	142
  8840  0D48  00FB               	movwf	??___awtoft
  8841  0D49  087B               	movf	??___awtoft,w
  8842  0D4A  00F3               	movwf	___ftpack@exp
  8843  0D4B  087D               	movf	___awtoft@sign,w
  8844  0D4C  00FC               	movwf	??___awtoft+1
  8845  0D4D  087C               	movf	??___awtoft+1,w
  8846  0D4E  00F4               	movwf	___ftpack@sign
  8847  0D4F  3186  2650         	fcall	___ftpack
  8848  0D51  0870               	movf	?___ftpack,w
  8849  0D52  00F8               	movwf	?___awtoft
  8850  0D53  0871               	movf	?___ftpack+1,w
  8851  0D54  00F9               	movwf	?___awtoft+1
  8852  0D55  0872               	movf	?___ftpack+2,w
  8853  0D56  00FA               	movwf	?___awtoft+2
  8854  0D57  0008               	return
  8855  0D58                     __end_of___awtoft:	
  8856                           
  8857                           	psect	text45
  8858  06B4                     __ptext45:	
  8859 ;; *************** function _AngleCalcu *****************
  8860 ;; Defined at:
  8861 ;;		line 91 in file "src/filter.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  angle_m         3   23[BANK0 ] float 
  8864 ;;  gyro_m          3   26[BANK0 ] float 
  8865 ;;  p               1   29[BANK0 ] PTR float 
  8866 ;;		 -> filter_result(6), 
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1    wreg      void 
  8871 ;; Registers used:
  8872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8878 ;;      Params:         0       7       0       0       0       0       0       0
  8879 ;;      Locals:         0       0       0       0       0       0       0       0
  8880 ;;      Temps:          0       0       0       0       0       0       0       0
  8881 ;;      Totals:         0       7       0       0       0       0       0       0
  8882 ;;Total ram usage:        7 bytes
  8883 ;; Hardware stack levels used:    1
  8884 ;; Hardware stack levels required when called:    2
  8885 ;; This function calls:
  8886 ;;		___ftadd
  8887 ;;		___ftmul
  8888 ;;		i1___ftge
  8889 ;; This function is called by:
  8890 ;;		_TMR0_Task
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           
  8895                           ;psect for function _AngleCalcu
  8896  06B4                     _AngleCalcu:	
  8897                           
  8898                           ;filter.c: 99: if((gyro_m >= 0.1)||(gyro_m <= -0.1))
  8899                           
  8900                           ;incstack = 0
  8901                           ; Regs used in _AngleCalcu: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8902  06B4  0140               	movlb	0	; select bank0
  8903  06B5  083A               	movf	AngleCalcu@gyro_m,w
  8904  06B6  00F0               	movwf	i1___ftge@ff1
  8905  06B7  083B               	movf	AngleCalcu@gyro_m+1,w
  8906  06B8  00F1               	movwf	i1___ftge@ff1+1
  8907  06B9  083C               	movf	AngleCalcu@gyro_m+2,w
  8908  06BA  00F2               	movwf	i1___ftge@ff1+2
  8909  06BB  30CD               	movlw	205
  8910  06BC  00F3               	movwf	i1___ftge@ff2
  8911  06BD  30CC               	movlw	204
  8912  06BE  00F4               	movwf	i1___ftge@ff2+1
  8913  06BF  303D               	movlw	61
  8914  06C0  00F5               	movwf	i1___ftge@ff2+2
  8915  06C1  318E  26CA  3186   	fcall	i1___ftge
  8916  06C4  1803               	btfsc	3,0
  8917  06C5  2ED8               	goto	i1l2569
  8918  06C6  30CD               	movlw	205
  8919  06C7  00F0               	movwf	i1___ftge@ff1
  8920  06C8  30CC               	movlw	204
  8921  06C9  00F1               	movwf	i1___ftge@ff1+1
  8922  06CA  30BD               	movlw	189
  8923  06CB  00F2               	movwf	i1___ftge@ff1+2
  8924  06CC  0140               	movlb	0	; select bank0
  8925  06CD  083A               	movf	AngleCalcu@gyro_m,w
  8926  06CE  00F3               	movwf	i1___ftge@ff2
  8927  06CF  083B               	movf	AngleCalcu@gyro_m+1,w
  8928  06D0  00F4               	movwf	i1___ftge@ff2+1
  8929  06D1  083C               	movf	AngleCalcu@gyro_m+2,w
  8930  06D2  00F5               	movwf	i1___ftge@ff2+2
  8931  06D3  318E  26CA  3186   	fcall	i1___ftge
  8932  06D6  1C03               	btfss	3,0
  8933  06D7  2EFE               	goto	i1l2571
  8934  06D8                     i1l2569:	
  8935                           
  8936                           ;filter.c: 100: {;filter.c: 101: Angle_t = Angle_t + + gyro_m*0.01;
  8937  06D8  0140               	movlb	0	; select bank0
  8938  06D9  085E               	movf	_Angle_t,w
  8939  06DA  00AA               	movwf	___ftadd@f1
  8940  06DB  085F               	movf	_Angle_t+1,w
  8941  06DC  00AB               	movwf	___ftadd@f1+1
  8942  06DD  0860               	movf	_Angle_t+2,w
  8943  06DE  00AC               	movwf	___ftadd@f1+2
  8944  06DF  30D7               	movlw	215
  8945  06E0  00F8               	movwf	___ftmul@f1
  8946  06E1  3023               	movlw	35
  8947  06E2  00F9               	movwf	___ftmul@f1+1
  8948  06E3  303C               	movlw	60
  8949  06E4  00FA               	movwf	___ftmul@f1+2
  8950  06E5  083A               	movf	AngleCalcu@gyro_m,w
  8951  06E6  00FB               	movwf	___ftmul@f2
  8952  06E7  083B               	movf	AngleCalcu@gyro_m+1,w
  8953  06E8  00FC               	movwf	___ftmul@f2+1
  8954  06E9  083C               	movf	AngleCalcu@gyro_m+2,w
  8955  06EA  00FD               	movwf	___ftmul@f2+2
  8956  06EB  3182  22F9  3186   	fcall	___ftmul
  8957  06EE  0878               	movf	?___ftmul,w
  8958  06EF  0140               	movlb	0	; select bank0
  8959  06F0  00AD               	movwf	___ftadd@f2
  8960  06F1  0879               	movf	?___ftmul+1,w
  8961  06F2  00AE               	movwf	___ftadd@f2+1
  8962  06F3  087A               	movf	?___ftmul+2,w
  8963  06F4  00AF               	movwf	___ftadd@f2+2
  8964  06F5  3180  205A         	fcall	___ftadd
  8965  06F7  0140               	movlb	0	; select bank0
  8966  06F8  082A               	movf	?___ftadd,w
  8967  06F9  00DE               	movwf	_Angle_t
  8968  06FA  082B               	movf	?___ftadd+1,w
  8969  06FB  00DF               	movwf	_Angle_t+1
  8970  06FC  082C               	movf	?___ftadd+2,w
  8971  06FD  00E0               	movwf	_Angle_t+2
  8972  06FE                     i1l2571:	
  8973                           
  8974                           ;filter.c: 102: };filter.c: 103: p[0] = Angle_t;
  8975  06FE  0140               	movlb	0	; select bank0
  8976  06FF  083D               	movf	AngleCalcu@p,w
  8977  0700  0086               	movwf	6
  8978  0701  0187               	clrf	7
  8979  0702  085E               	movf	_Angle_t,w
  8980  0703  3FC0               	movwi [0]fsr1
  8981  0704  085F               	movf	_Angle_t+1,w
  8982  0705  3FC1               	movwi [1]fsr1
  8983  0706  0860               	movf	_Angle_t+2,w
  8984  0707  3FC2               	movwi [2]fsr1
  8985                           
  8986                           ;filter.c: 104: p[1] = gyro_m;
  8987  0708  083D               	movf	AngleCalcu@p,w
  8988  0709  3E03               	addlw	3
  8989  070A  0086               	movwf	6
  8990  070B  0187               	clrf	7
  8991  070C  083A               	movf	AngleCalcu@gyro_m,w
  8992  070D  3FC0               	movwi [0]fsr1
  8993  070E  083B               	movf	AngleCalcu@gyro_m+1,w
  8994  070F  3FC1               	movwi [1]fsr1
  8995  0710  083C               	movf	AngleCalcu@gyro_m+2,w
  8996  0711  3FC2               	movwi [2]fsr1
  8997  0712  0008               	return
  8998  0713                     __end_of_AngleCalcu:	
  8999                           
  9000                           	psect	text46
  9001  0ECA                     __ptext46:	
  9002 ;; *************** function i1___ftge *****************
  9003 ;; Defined at:
  9004 ;;		line 4 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\ftge.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  ff1             3    0[COMMON] float 
  9007 ;;  ff2             3    3[COMMON] float 
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;		None
  9010 ;; Return value:  Size  Location     Type
  9011 ;;		None               void
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9019 ;;      Params:         6       0       0       0       0       0       0       0
  9020 ;;      Locals:         0       0       0       0       0       0       0       0
  9021 ;;      Temps:          3       0       0       0       0       0       0       0
  9022 ;;      Totals:         9       0       0       0       0       0       0       0
  9023 ;;Total ram usage:        9 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_AngleCalcu
  9029 ;; This function uses a non-reentrant model
  9030 ;;
  9031                           
  9032                           
  9033                           ;psect for function i1___ftge
  9034  0ECA                     i1___ftge:	
  9035                           
  9036                           ;incstack = 0
  9037                           ; Regs used in i1___ftge: [wreg+status,2+status,0]
  9038  0ECA  1FF2               	btfss	i1___ftge@ff1+2,7
  9039  0ECB  2EE0               	goto	i1l2473
  9040  0ECC  0970               	comf	i1___ftge@ff1,w
  9041  0ECD  00F6               	movwf	??i1___ftge
  9042  0ECE  0971               	comf	i1___ftge@ff1+1,w
  9043  0ECF  00F7               	movwf	??i1___ftge+1
  9044  0ED0  0972               	comf	i1___ftge@ff1+2,w
  9045  0ED1  00F8               	movwf	??i1___ftge+2
  9046  0ED2  0AF6               	incf	??i1___ftge,f
  9047  0ED3  1903               	skipnz
  9048  0ED4  0AF7               	incf	??i1___ftge+1,f
  9049  0ED5  1903               	skipnz
  9050  0ED6  0AF8               	incf	??i1___ftge+2,f
  9051  0ED7  3000               	movlw	0
  9052  0ED8  0776               	addwf	??i1___ftge,w
  9053  0ED9  00F0               	movwf	i1___ftge@ff1
  9054  0EDA  3000               	movlw	0
  9055  0EDB  3D77               	addwfc	??i1___ftge+1,w
  9056  0EDC  00F1               	movwf	i1___ftge@ff1+1
  9057  0EDD  3080               	movlw	128
  9058  0EDE  3D78               	addwfc	??i1___ftge+2,w
  9059  0EDF  00F2               	movwf	i1___ftge@ff1+2
  9060  0EE0                     i1l2473:	
  9061  0EE0  1FF5               	btfss	i1___ftge@ff2+2,7
  9062  0EE1  2EF6               	goto	i1l2477
  9063  0EE2  0973               	comf	i1___ftge@ff2,w
  9064  0EE3  00F6               	movwf	??i1___ftge
  9065  0EE4  0974               	comf	i1___ftge@ff2+1,w
  9066  0EE5  00F7               	movwf	??i1___ftge+1
  9067  0EE6  0975               	comf	i1___ftge@ff2+2,w
  9068  0EE7  00F8               	movwf	??i1___ftge+2
  9069  0EE8  0AF6               	incf	??i1___ftge,f
  9070  0EE9  1903               	skipnz
  9071  0EEA  0AF7               	incf	??i1___ftge+1,f
  9072  0EEB  1903               	skipnz
  9073  0EEC  0AF8               	incf	??i1___ftge+2,f
  9074  0EED  3000               	movlw	0
  9075  0EEE  0776               	addwf	??i1___ftge,w
  9076  0EEF  00F3               	movwf	i1___ftge@ff2
  9077  0EF0  3000               	movlw	0
  9078  0EF1  3D77               	addwfc	??i1___ftge+1,w
  9079  0EF2  00F4               	movwf	i1___ftge@ff2+1
  9080  0EF3  3080               	movlw	128
  9081  0EF4  3D78               	addwfc	??i1___ftge+2,w
  9082  0EF5  00F5               	movwf	i1___ftge@ff2+2
  9083  0EF6                     i1l2477:	
  9084  0EF6  3080               	movlw	128
  9085  0EF7  06F2               	xorwf	i1___ftge@ff1+2,f
  9086  0EF8  3080               	movlw	128
  9087  0EF9  06F5               	xorwf	i1___ftge@ff2+2,f
  9088  0EFA  0875               	movf	i1___ftge@ff2+2,w
  9089  0EFB  0272               	subwf	i1___ftge@ff1+2,w
  9090  0EFC  1D03               	skipz
  9091  0EFD  0008               	return
  9092  0EFE  0874               	movf	i1___ftge@ff2+1,w
  9093  0EFF  0271               	subwf	i1___ftge@ff1+1,w
  9094  0F00  1D03               	skipz
  9095  0F01  0008               	return
  9096  0F02  0873               	movf	i1___ftge@ff2,w
  9097  0F03  0270               	subwf	i1___ftge@ff1,w
  9098  0F04  0008               	return
  9099  0F05                     __end_ofi1___ftge:	
  9100                           
  9101                           	psect	text47
  9102  02F9                     __ptext47:	
  9103 ;; *************** function ___ftmul *****************
  9104 ;; Defined at:
  9105 ;;		line 62 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\ftmul.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  f1              3    8[COMMON] float 
  9108 ;;  f2              3   11[COMMON] float 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;  f3_as_produc    3    5[BANK0 ] unsigned um
  9111 ;;  sign            1    9[BANK0 ] unsigned char 
  9112 ;;  cntr            1    8[BANK0 ] unsigned char 
  9113 ;;  exp             1    4[BANK0 ] unsigned char 
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  3    8[COMMON] float 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, pclath, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9123 ;;      Params:         6       0       0       0       0       0       0       0
  9124 ;;      Locals:         0       6       0       0       0       0       0       0
  9125 ;;      Temps:          0       4       0       0       0       0       0       0
  9126 ;;      Totals:         6      10       0       0       0       0       0       0
  9127 ;;Total ram usage:       16 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    1
  9130 ;; This function calls:
  9131 ;;		___ftpack
  9132 ;; This function is called by:
  9133 ;;		_AngleCalcu
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           
  9138                           ;psect for function ___ftmul
  9139  02F9                     ___ftmul:	
  9140                           
  9141                           ;incstack = 0
  9142                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9143  02F9  0878               	movf	___ftmul@f1,w
  9144  02FA  0140               	movlb	0	; select bank0
  9145  02FB  00A0               	movwf	??___ftmul
  9146  02FC  0879               	movf	___ftmul@f1+1,w
  9147  02FD  00A1               	movwf	??___ftmul+1
  9148  02FE  087A               	movf	___ftmul@f1+2,w
  9149  02FF  00A2               	movwf	??___ftmul+2
  9150  0300  1003               	clrc
  9151  0301  0D21               	rlf	??___ftmul+1,w
  9152  0302  0D22               	rlf	??___ftmul+2,w
  9153  0303  00A3               	movwf	??___ftmul+3
  9154  0304  0823               	movf	??___ftmul+3,w
  9155  0305  00A4               	movwf	___ftmul@exp
  9156  0306  0824               	movf	___ftmul@exp,w
  9157  0307  1D03               	btfss	3,2
  9158  0308  2B10               	goto	i1l2393
  9159  0309  3000               	movlw	0
  9160  030A  00F8               	movwf	?___ftmul
  9161  030B  3000               	movlw	0
  9162  030C  00F9               	movwf	?___ftmul+1
  9163  030D  3000               	movlw	0
  9164  030E  00FA               	movwf	?___ftmul+2
  9165  030F  0008               	return
  9166  0310                     i1l2393:	
  9167  0310  087B               	movf	___ftmul@f2,w
  9168  0311  00A0               	movwf	??___ftmul
  9169  0312  087C               	movf	___ftmul@f2+1,w
  9170  0313  00A1               	movwf	??___ftmul+1
  9171  0314  087D               	movf	___ftmul@f2+2,w
  9172  0315  00A2               	movwf	??___ftmul+2
  9173  0316  1003               	clrc
  9174  0317  0D21               	rlf	??___ftmul+1,w
  9175  0318  0D22               	rlf	??___ftmul+2,w
  9176  0319  00A3               	movwf	??___ftmul+3
  9177  031A  0823               	movf	??___ftmul+3,w
  9178  031B  00A9               	movwf	___ftmul@sign
  9179  031C  0829               	movf	___ftmul@sign,w
  9180  031D  1D03               	btfss	3,2
  9181  031E  2B26               	goto	i1l2399
  9182  031F  3000               	movlw	0
  9183  0320  00F8               	movwf	?___ftmul
  9184  0321  3000               	movlw	0
  9185  0322  00F9               	movwf	?___ftmul+1
  9186  0323  3000               	movlw	0
  9187  0324  00FA               	movwf	?___ftmul+2
  9188  0325  0008               	return
  9189  0326                     i1l2399:	
  9190  0326  0829               	movf	___ftmul@sign,w
  9191  0327  3E7B               	addlw	123
  9192  0328  00A0               	movwf	??___ftmul
  9193  0329  0820               	movf	??___ftmul,w
  9194  032A  07A4               	addwf	___ftmul@exp,f
  9195  032B  0878               	movf	___ftmul@f1,w
  9196  032C  00A0               	movwf	??___ftmul
  9197  032D  0879               	movf	___ftmul@f1+1,w
  9198  032E  00A1               	movwf	??___ftmul+1
  9199  032F  087A               	movf	___ftmul@f1+2,w
  9200  0330  00A2               	movwf	??___ftmul+2
  9201  0331  3010               	movlw	16
  9202  0332                     u225_25:	
  9203  0332  36A2               	lsrf	??___ftmul+2,f
  9204  0333  0CA1               	rrf	??___ftmul+1,f
  9205  0334  0CA0               	rrf	??___ftmul,f
  9206  0335  0B89               	decfsz	9,f
  9207  0336  2B32               	goto	u225_25
  9208  0337  0820               	movf	??___ftmul,w
  9209  0338  00A3               	movwf	??___ftmul+3
  9210  0339  0823               	movf	??___ftmul+3,w
  9211  033A  00A9               	movwf	___ftmul@sign
  9212  033B  087B               	movf	___ftmul@f2,w
  9213  033C  00A0               	movwf	??___ftmul
  9214  033D  087C               	movf	___ftmul@f2+1,w
  9215  033E  00A1               	movwf	??___ftmul+1
  9216  033F  087D               	movf	___ftmul@f2+2,w
  9217  0340  00A2               	movwf	??___ftmul+2
  9218  0341  3010               	movlw	16
  9219  0342                     u226_25:	
  9220  0342  36A2               	lsrf	??___ftmul+2,f
  9221  0343  0CA1               	rrf	??___ftmul+1,f
  9222  0344  0CA0               	rrf	??___ftmul,f
  9223  0345  0B89               	decfsz	9,f
  9224  0346  2B42               	goto	u226_25
  9225  0347  0820               	movf	??___ftmul,w
  9226  0348  00A3               	movwf	??___ftmul+3
  9227  0349  0823               	movf	??___ftmul+3,w
  9228  034A  06A9               	xorwf	___ftmul@sign,f
  9229  034B  3080               	movlw	128
  9230  034C  00A0               	movwf	??___ftmul
  9231  034D  0820               	movf	??___ftmul,w
  9232  034E  05A9               	andwf	___ftmul@sign,f
  9233  034F  17F9               	bsf	___ftmul@f1+1,7
  9234  0350  17FC               	bsf	___ftmul@f2+1,7
  9235  0351  30FF               	movlw	255
  9236  0352  05FB               	andwf	___ftmul@f2,f
  9237  0353  30FF               	movlw	255
  9238  0354  05FC               	andwf	___ftmul@f2+1,f
  9239  0355  3000               	movlw	0
  9240  0356  05FD               	andwf	___ftmul@f2+2,f
  9241  0357  3000               	movlw	0
  9242  0358  00A5               	movwf	___ftmul@f3_as_product
  9243  0359  3000               	movlw	0
  9244  035A  00A6               	movwf	___ftmul@f3_as_product+1
  9245  035B  3000               	movlw	0
  9246  035C  00A7               	movwf	___ftmul@f3_as_product+2
  9247  035D  3007               	movlw	7
  9248  035E  00A0               	movwf	??___ftmul
  9249  035F  0820               	movf	??___ftmul,w
  9250  0360  00A8               	movwf	___ftmul@cntr
  9251  0361                     i1l2411:	
  9252  0361  1C78               	btfss	___ftmul@f1,0
  9253  0362  2B69               	goto	i1l2415
  9254  0363  087B               	movf	___ftmul@f2,w
  9255  0364  07A5               	addwf	___ftmul@f3_as_product,f
  9256  0365  087C               	movf	___ftmul@f2+1,w
  9257  0366  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  9258  0367  087D               	movf	___ftmul@f2+2,w
  9259  0368  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  9260  0369                     i1l2415:	
  9261  0369  3001               	movlw	1
  9262  036A                     u228_25:	
  9263  036A  36FA               	lsrf	___ftmul@f1+2,f
  9264  036B  0CF9               	rrf	___ftmul@f1+1,f
  9265  036C  0CF8               	rrf	___ftmul@f1,f
  9266  036D  0B89               	decfsz	9,f
  9267  036E  2B6A               	goto	u228_25
  9268  036F  3001               	movlw	1
  9269  0370                     u229_25:	
  9270  0370  35FB               	lslf	___ftmul@f2,f
  9271  0371  0DFC               	rlf	___ftmul@f2+1,f
  9272  0372  0DFD               	rlf	___ftmul@f2+2,f
  9273  0373  0B89               	decfsz	9,f
  9274  0374  2B70               	goto	u229_25
  9275  0375  3001               	movlw	1
  9276  0376  02A8               	subwf	___ftmul@cntr,f
  9277  0377  1D03               	btfss	3,2
  9278  0378  2B61               	goto	i1l2411
  9279  0379  3009               	movlw	9
  9280  037A  00A0               	movwf	??___ftmul
  9281  037B  0820               	movf	??___ftmul,w
  9282  037C  00A8               	movwf	___ftmul@cntr
  9283  037D                     i1l2423:	
  9284  037D  1C78               	btfss	___ftmul@f1,0
  9285  037E  2B85               	goto	i1l2427
  9286  037F  087B               	movf	___ftmul@f2,w
  9287  0380  07A5               	addwf	___ftmul@f3_as_product,f
  9288  0381  087C               	movf	___ftmul@f2+1,w
  9289  0382  3DA6               	addwfc	___ftmul@f3_as_product+1,f
  9290  0383  087D               	movf	___ftmul@f2+2,w
  9291  0384  3DA7               	addwfc	___ftmul@f3_as_product+2,f
  9292  0385                     i1l2427:	
  9293  0385  3001               	movlw	1
  9294  0386                     u232_25:	
  9295  0386  36FA               	lsrf	___ftmul@f1+2,f
  9296  0387  0CF9               	rrf	___ftmul@f1+1,f
  9297  0388  0CF8               	rrf	___ftmul@f1,f
  9298  0389  0B89               	decfsz	9,f
  9299  038A  2B86               	goto	u232_25
  9300  038B  3001               	movlw	1
  9301  038C                     u233_25:	
  9302  038C  36A7               	lsrf	___ftmul@f3_as_product+2,f
  9303  038D  0CA6               	rrf	___ftmul@f3_as_product+1,f
  9304  038E  0CA5               	rrf	___ftmul@f3_as_product,f
  9305  038F  0B89               	decfsz	9,f
  9306  0390  2B8C               	goto	u233_25
  9307  0391  3001               	movlw	1
  9308  0392  02A8               	subwf	___ftmul@cntr,f
  9309  0393  1D03               	btfss	3,2
  9310  0394  2B7D               	goto	i1l2423
  9311  0395  0825               	movf	___ftmul@f3_as_product,w
  9312  0396  00F0               	movwf	___ftpack@arg
  9313  0397  0826               	movf	___ftmul@f3_as_product+1,w
  9314  0398  00F1               	movwf	___ftpack@arg+1
  9315  0399  0827               	movf	___ftmul@f3_as_product+2,w
  9316  039A  00F2               	movwf	___ftpack@arg+2
  9317  039B  0824               	movf	___ftmul@exp,w
  9318  039C  00A0               	movwf	??___ftmul
  9319  039D  0820               	movf	??___ftmul,w
  9320  039E  00F3               	movwf	___ftpack@exp
  9321  039F  0829               	movf	___ftmul@sign,w
  9322  03A0  00A1               	movwf	??___ftmul+1
  9323  03A1  0821               	movf	??___ftmul+1,w
  9324  03A2  00F4               	movwf	___ftpack@sign
  9325  03A3  3186  2650         	fcall	___ftpack
  9326  03A5  0870               	movf	?___ftpack,w
  9327  03A6  00F8               	movwf	?___ftmul
  9328  03A7  0871               	movf	?___ftpack+1,w
  9329  03A8  00F9               	movwf	?___ftmul+1
  9330  03A9  0872               	movf	?___ftpack+2,w
  9331  03AA  00FA               	movwf	?___ftmul+2
  9332  03AB  0008               	return
  9333  03AC                     __end_of___ftmul:	
  9334                           
  9335                           	psect	text48
  9336  005A                     __ptext48:	
  9337 ;; *************** function ___ftadd *****************
  9338 ;; Defined at:
  9339 ;;		line 86 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\ftadd.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;  f1              3   10[BANK0 ] float 
  9342 ;;  f2              3   13[BANK0 ] float 
  9343 ;; Auto vars:     Size  Location     Type
  9344 ;;  exp1            1   22[BANK0 ] unsigned char 
  9345 ;;  exp2            1   21[BANK0 ] unsigned char 
  9346 ;;  sign            1   20[BANK0 ] unsigned char 
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  3   10[BANK0 ] float 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2, status,0, pclath, cstack
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9356 ;;      Params:         0       6       0       0       0       0       0       0
  9357 ;;      Locals:         0       3       0       0       0       0       0       0
  9358 ;;      Temps:          0       4       0       0       0       0       0       0
  9359 ;;      Totals:         0      13       0       0       0       0       0       0
  9360 ;;Total ram usage:       13 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    1
  9363 ;; This function calls:
  9364 ;;		___ftpack
  9365 ;; This function is called by:
  9366 ;;		_Mpu6500GyroAngle
  9367 ;;		_AngleCalcu
  9368 ;; This function uses a non-reentrant model
  9369 ;;
  9370                           
  9371                           
  9372                           ;psect for function ___ftadd
  9373  005A                     ___ftadd:	
  9374                           
  9375                           ;incstack = 0
  9376                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9377  005A  0140               	movlb	0	; select bank0
  9378  005B  082A               	movf	___ftadd@f1,w
  9379  005C  00B0               	movwf	??___ftadd
  9380  005D  082B               	movf	___ftadd@f1+1,w
  9381  005E  00B1               	movwf	??___ftadd+1
  9382  005F  082C               	movf	___ftadd@f1+2,w
  9383  0060  00B2               	movwf	??___ftadd+2
  9384  0061  1003               	clrc
  9385  0062  0D31               	rlf	??___ftadd+1,w
  9386  0063  0D32               	rlf	??___ftadd+2,w
  9387  0064  00B3               	movwf	??___ftadd+3
  9388  0065  0833               	movf	??___ftadd+3,w
  9389  0066  00B6               	movwf	___ftadd@exp1
  9390  0067  082D               	movf	___ftadd@f2,w
  9391  0068  00B0               	movwf	??___ftadd
  9392  0069  082E               	movf	___ftadd@f2+1,w
  9393  006A  00B1               	movwf	??___ftadd+1
  9394  006B  082F               	movf	___ftadd@f2+2,w
  9395  006C  00B2               	movwf	??___ftadd+2
  9396  006D  1003               	clrc
  9397  006E  0D31               	rlf	??___ftadd+1,w
  9398  006F  0D32               	rlf	??___ftadd+2,w
  9399  0070  00B3               	movwf	??___ftadd+3
  9400  0071  0833               	movf	??___ftadd+3,w
  9401  0072  00B5               	movwf	___ftadd@exp2
  9402  0073  0836               	movf	___ftadd@exp1,w
  9403  0074  1903               	btfsc	3,2
  9404  0075  2882               	goto	i1l2281
  9405  0076  0835               	movf	___ftadd@exp2,w
  9406  0077  0236               	subwf	___ftadd@exp1,w
  9407  0078  1803               	skipnc
  9408  0079  2889               	goto	i1l2285
  9409  007A  0336               	decf	___ftadd@exp1,w
  9410  007B  3AFF               	xorlw	255
  9411  007C  0735               	addwf	___ftadd@exp2,w
  9412  007D  00B0               	movwf	??___ftadd
  9413  007E  3019               	movlw	25
  9414  007F  0230               	subwf	??___ftadd,w
  9415  0080  1C03               	skipc
  9416  0081  2889               	goto	i1l2285
  9417  0082                     i1l2281:	
  9418  0082  082D               	movf	___ftadd@f2,w
  9419  0083  00AA               	movwf	?___ftadd
  9420  0084  082E               	movf	___ftadd@f2+1,w
  9421  0085  00AB               	movwf	?___ftadd+1
  9422  0086  082F               	movf	___ftadd@f2+2,w
  9423  0087  00AC               	movwf	?___ftadd+2
  9424  0088  0008               	return
  9425  0089                     i1l2285:	
  9426  0089  0835               	movf	___ftadd@exp2,w
  9427  008A  1903               	btfsc	3,2
  9428  008B  0008               	return
  9429  008C  0836               	movf	___ftadd@exp1,w
  9430  008D  0235               	subwf	___ftadd@exp2,w
  9431  008E  1803               	skipnc
  9432  008F  2898               	goto	i1l2291
  9433  0090  0335               	decf	___ftadd@exp2,w
  9434  0091  3AFF               	xorlw	255
  9435  0092  0736               	addwf	___ftadd@exp1,w
  9436  0093  00B0               	movwf	??___ftadd
  9437  0094  3019               	movlw	25
  9438  0095  0230               	subwf	??___ftadd,w
  9439  0096  1803               	btfsc	3,0
  9440  0097  0008               	return
  9441  0098                     i1l2291:	
  9442  0098  3006               	movlw	6
  9443  0099  00B0               	movwf	??___ftadd
  9444  009A  0830               	movf	??___ftadd,w
  9445  009B  00B4               	movwf	___ftadd@sign
  9446  009C  1BAC               	btfsc	___ftadd@f1+2,7
  9447  009D  17B4               	bsf	___ftadd@sign,7
  9448  009E  1BAF               	btfsc	___ftadd@f2+2,7
  9449  009F  1734               	bsf	___ftadd@sign,6
  9450  00A0  17AB               	bsf	___ftadd@f1+1,7
  9451  00A1  30FF               	movlw	255
  9452  00A2  05AA               	andwf	___ftadd@f1,f
  9453  00A3  30FF               	movlw	255
  9454  00A4  05AB               	andwf	___ftadd@f1+1,f
  9455  00A5  3000               	movlw	0
  9456  00A6  05AC               	andwf	___ftadd@f1+2,f
  9457  00A7  17AE               	bsf	___ftadd@f2+1,7
  9458  00A8  30FF               	movlw	255
  9459  00A9  05AD               	andwf	___ftadd@f2,f
  9460  00AA  30FF               	movlw	255
  9461  00AB  05AE               	andwf	___ftadd@f2+1,f
  9462  00AC  3000               	movlw	0
  9463  00AD  05AF               	andwf	___ftadd@f2+2,f
  9464  00AE  0835               	movf	___ftadd@exp2,w
  9465  00AF  0236               	subwf	___ftadd@exp1,w
  9466  00B0  1803               	skipnc
  9467  00B1  28D4               	goto	i1l2313
  9468  00B2                     i1l2303:	
  9469  00B2  3001               	movlw	1
  9470  00B3                     u201_25:	
  9471  00B3  35AD               	lslf	___ftadd@f2,f
  9472  00B4  0DAE               	rlf	___ftadd@f2+1,f
  9473  00B5  0DAF               	rlf	___ftadd@f2+2,f
  9474  00B6  0B89               	decfsz	9,f
  9475  00B7  28B3               	goto	u201_25
  9476  00B8  3001               	movlw	1
  9477  00B9  02B5               	subwf	___ftadd@exp2,f
  9478  00BA  0835               	movf	___ftadd@exp2,w
  9479  00BB  0636               	xorwf	___ftadd@exp1,w
  9480  00BC  1903               	skipnz
  9481  00BD  28CF               	goto	i1l2311
  9482  00BE  3001               	movlw	1
  9483  00BF  02B4               	subwf	___ftadd@sign,f
  9484  00C0  0834               	movf	___ftadd@sign,w
  9485  00C1  3907               	andlw	7
  9486  00C2  1903               	btfsc	3,2
  9487  00C3  28CF               	goto	i1l2311
  9488  00C4  28B2               	goto	i1l2303
  9489  00C5                     i1l2309:	
  9490  00C5  3001               	movlw	1
  9491  00C6                     u204_25:	
  9492  00C6  36AC               	lsrf	___ftadd@f1+2,f
  9493  00C7  0CAB               	rrf	___ftadd@f1+1,f
  9494  00C8  0CAA               	rrf	___ftadd@f1,f
  9495  00C9  0B89               	decfsz	9,f
  9496  00CA  28C6               	goto	u204_25
  9497  00CB  3001               	movlw	1
  9498  00CC  00B0               	movwf	??___ftadd
  9499  00CD  0830               	movf	??___ftadd,w
  9500  00CE  07B6               	addwf	___ftadd@exp1,f
  9501  00CF                     i1l2311:	
  9502  00CF  0836               	movf	___ftadd@exp1,w
  9503  00D0  0635               	xorwf	___ftadd@exp2,w
  9504  00D1  1903               	btfsc	3,2
  9505  00D2  28F9               	goto	i1l723
  9506  00D3  28C5               	goto	i1l2309
  9507  00D4                     i1l2313:	
  9508  00D4  0836               	movf	___ftadd@exp1,w
  9509  00D5  0235               	subwf	___ftadd@exp2,w
  9510  00D6  1803               	skipnc
  9511  00D7  28F9               	goto	i1l723
  9512  00D8                     i1l2315:	
  9513  00D8  3001               	movlw	1
  9514  00D9                     u207_25:	
  9515  00D9  35AA               	lslf	___ftadd@f1,f
  9516  00DA  0DAB               	rlf	___ftadd@f1+1,f
  9517  00DB  0DAC               	rlf	___ftadd@f1+2,f
  9518  00DC  0B89               	decfsz	9,f
  9519  00DD  28D9               	goto	u207_25
  9520  00DE  3001               	movlw	1
  9521  00DF  02B6               	subwf	___ftadd@exp1,f
  9522  00E0  0835               	movf	___ftadd@exp2,w
  9523  00E1  0636               	xorwf	___ftadd@exp1,w
  9524  00E2  1903               	skipnz
  9525  00E3  28F5               	goto	i1l2323
  9526  00E4  3001               	movlw	1
  9527  00E5  02B4               	subwf	___ftadd@sign,f
  9528  00E6  0834               	movf	___ftadd@sign,w
  9529  00E7  3907               	andlw	7
  9530  00E8  1903               	btfsc	3,2
  9531  00E9  28F5               	goto	i1l2323
  9532  00EA  28D8               	goto	i1l2315
  9533  00EB                     i1l2321:	
  9534  00EB  3001               	movlw	1
  9535  00EC                     u210_25:	
  9536  00EC  36AF               	lsrf	___ftadd@f2+2,f
  9537  00ED  0CAE               	rrf	___ftadd@f2+1,f
  9538  00EE  0CAD               	rrf	___ftadd@f2,f
  9539  00EF  0B89               	decfsz	9,f
  9540  00F0  28EC               	goto	u210_25
  9541  00F1  3001               	movlw	1
  9542  00F2  00B0               	movwf	??___ftadd
  9543  00F3  0830               	movf	??___ftadd,w
  9544  00F4  07B5               	addwf	___ftadd@exp2,f
  9545  00F5                     i1l2323:	
  9546  00F5  0836               	movf	___ftadd@exp1,w
  9547  00F6  0635               	xorwf	___ftadd@exp2,w
  9548  00F7  1D03               	skipz
  9549  00F8  28EB               	goto	i1l2321
  9550  00F9                     i1l723:	
  9551  00F9  1FB4               	btfss	___ftadd@sign,7
  9552  00FA  290B               	goto	i1l2327
  9553  00FB  30FF               	movlw	255
  9554  00FC  06AA               	xorwf	___ftadd@f1,f
  9555  00FD  30FF               	movlw	255
  9556  00FE  06AB               	xorwf	___ftadd@f1+1,f
  9557  00FF  30FF               	movlw	255
  9558  0100  06AC               	xorwf	___ftadd@f1+2,f
  9559  0101  3001               	movlw	1
  9560  0102  07AA               	addwf	___ftadd@f1,f
  9561  0103  3000               	movlw	0
  9562  0104  1803               	skipnc
  9563  0105  3001               	movlw	1
  9564  0106  07AB               	addwf	___ftadd@f1+1,f
  9565  0107  3000               	movlw	0
  9566  0108  1803               	skipnc
  9567  0109  3001               	movlw	1
  9568  010A  07AC               	addwf	___ftadd@f1+2,f
  9569  010B                     i1l2327:	
  9570  010B  1F34               	btfss	___ftadd@sign,6
  9571  010C  291D               	goto	i1l2331
  9572  010D  30FF               	movlw	255
  9573  010E  06AD               	xorwf	___ftadd@f2,f
  9574  010F  30FF               	movlw	255
  9575  0110  06AE               	xorwf	___ftadd@f2+1,f
  9576  0111  30FF               	movlw	255
  9577  0112  06AF               	xorwf	___ftadd@f2+2,f
  9578  0113  3001               	movlw	1
  9579  0114  07AD               	addwf	___ftadd@f2,f
  9580  0115  3000               	movlw	0
  9581  0116  1803               	skipnc
  9582  0117  3001               	movlw	1
  9583  0118  07AE               	addwf	___ftadd@f2+1,f
  9584  0119  3000               	movlw	0
  9585  011A  1803               	skipnc
  9586  011B  3001               	movlw	1
  9587  011C  07AF               	addwf	___ftadd@f2+2,f
  9588  011D                     i1l2331:	
  9589  011D  01B4               	clrf	___ftadd@sign
  9590  011E  082A               	movf	___ftadd@f1,w
  9591  011F  07AD               	addwf	___ftadd@f2,f
  9592  0120  082B               	movf	___ftadd@f1+1,w
  9593  0121  3DAE               	addwfc	___ftadd@f2+1,f
  9594  0122  082C               	movf	___ftadd@f1+2,w
  9595  0123  3DAF               	addwfc	___ftadd@f2+2,f
  9596  0124  1FAF               	btfss	___ftadd@f2+2,7
  9597  0125  2938               	goto	i1l2341
  9598  0126  30FF               	movlw	255
  9599  0127  06AD               	xorwf	___ftadd@f2,f
  9600  0128  30FF               	movlw	255
  9601  0129  06AE               	xorwf	___ftadd@f2+1,f
  9602  012A  30FF               	movlw	255
  9603  012B  06AF               	xorwf	___ftadd@f2+2,f
  9604  012C  3001               	movlw	1
  9605  012D  07AD               	addwf	___ftadd@f2,f
  9606  012E  3000               	movlw	0
  9607  012F  1803               	skipnc
  9608  0130  3001               	movlw	1
  9609  0131  07AE               	addwf	___ftadd@f2+1,f
  9610  0132  3000               	movlw	0
  9611  0133  1803               	skipnc
  9612  0134  3001               	movlw	1
  9613  0135  07AF               	addwf	___ftadd@f2+2,f
  9614  0136  01B4               	clrf	___ftadd@sign
  9615  0137  0AB4               	incf	___ftadd@sign,f
  9616  0138                     i1l2341:	
  9617  0138  082D               	movf	___ftadd@f2,w
  9618  0139  00F0               	movwf	___ftpack@arg
  9619  013A  082E               	movf	___ftadd@f2+1,w
  9620  013B  00F1               	movwf	___ftpack@arg+1
  9621  013C  082F               	movf	___ftadd@f2+2,w
  9622  013D  00F2               	movwf	___ftpack@arg+2
  9623  013E  0836               	movf	___ftadd@exp1,w
  9624  013F  00B0               	movwf	??___ftadd
  9625  0140  0830               	movf	??___ftadd,w
  9626  0141  00F3               	movwf	___ftpack@exp
  9627  0142  0834               	movf	___ftadd@sign,w
  9628  0143  00B1               	movwf	??___ftadd+1
  9629  0144  0831               	movf	??___ftadd+1,w
  9630  0145  00F4               	movwf	___ftpack@sign
  9631  0146  3186  2650         	fcall	___ftpack
  9632  0148  0870               	movf	?___ftpack,w
  9633  0149  0140               	movlb	0	; select bank0
  9634  014A  00AA               	movwf	?___ftadd
  9635  014B  0871               	movf	?___ftpack+1,w
  9636  014C  00AB               	movwf	?___ftadd+1
  9637  014D  0872               	movf	?___ftpack+2,w
  9638  014E  00AC               	movwf	?___ftadd+2
  9639  014F  0008               	return
  9640  0150                     __end_of___ftadd:	
  9641                           
  9642                           	psect	text49
  9643  0650                     __ptext49:	
  9644 ;; *************** function ___ftpack *****************
  9645 ;; Defined at:
  9646 ;;		line 62 in file "E:\Microchip\xc8\v2.00\pic\sources\c90\common\float.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  arg             3    0[COMMON] unsigned um
  9649 ;;  exp             1    3[COMMON] unsigned char 
  9650 ;;  sign            1    4[COMMON] unsigned char 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;		None
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  3    0[COMMON] float 
  9655 ;; Registers used:
  9656 ;;		wreg, status,2, status,0
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9662 ;;      Params:         5       0       0       0       0       0       0       0
  9663 ;;      Locals:         0       0       0       0       0       0       0       0
  9664 ;;      Temps:          3       0       0       0       0       0       0       0
  9665 ;;      Totals:         8       0       0       0       0       0       0       0
  9666 ;;Total ram usage:        8 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		___awtoft
  9672 ;;		___ftadd
  9673 ;;		___ftdiv
  9674 ;;		___ftmul
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function ___ftpack
  9680  0650                     ___ftpack:	
  9681                           
  9682                           ;incstack = 0
  9683                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9684  0650  0873               	movf	___ftpack@exp,w
  9685  0651  1903               	btfsc	3,2
  9686  0652  2E58               	goto	i1l2145
  9687  0653  0872               	movf	___ftpack@arg+2,w
  9688  0654  0471               	iorwf	___ftpack@arg+1,w
  9689  0655  0470               	iorwf	___ftpack@arg,w
  9690  0656  1D03               	skipz
  9691  0657  2E69               	goto	i1l2151
  9692  0658                     i1l2145:	
  9693  0658  3000               	movlw	0
  9694  0659  00F0               	movwf	?___ftpack
  9695  065A  3000               	movlw	0
  9696  065B  00F1               	movwf	?___ftpack+1
  9697  065C  3000               	movlw	0
  9698  065D  00F2               	movwf	?___ftpack+2
  9699  065E  0008               	return
  9700  065F                     i1l2149:	
  9701  065F  3001               	movlw	1
  9702  0660  00F5               	movwf	??___ftpack
  9703  0661  0875               	movf	??___ftpack,w
  9704  0662  07F3               	addwf	___ftpack@exp,f
  9705  0663  3001               	movlw	1
  9706  0664                     u166_25:	
  9707  0664  36F2               	lsrf	___ftpack@arg+2,f
  9708  0665  0CF1               	rrf	___ftpack@arg+1,f
  9709  0666  0CF0               	rrf	___ftpack@arg,f
  9710  0667  0B89               	decfsz	9,f
  9711  0668  2E64               	goto	u166_25
  9712  0669                     i1l2151:	
  9713  0669  30FE               	movlw	254
  9714  066A  0572               	andwf	___ftpack@arg+2,w
  9715  066B  1903               	btfsc	3,2
  9716  066C  2E82               	goto	i1l692
  9717  066D  2E5F               	goto	i1l2149
  9718  066E                     i1l2153:	
  9719  066E  3001               	movlw	1
  9720  066F  00F5               	movwf	??___ftpack
  9721  0670  0875               	movf	??___ftpack,w
  9722  0671  07F3               	addwf	___ftpack@exp,f
  9723  0672  3001               	movlw	1
  9724  0673  07F0               	addwf	___ftpack@arg,f
  9725  0674  3000               	movlw	0
  9726  0675  1803               	skipnc
  9727  0676  3001               	movlw	1
  9728  0677  07F1               	addwf	___ftpack@arg+1,f
  9729  0678  3000               	movlw	0
  9730  0679  1803               	skipnc
  9731  067A  3001               	movlw	1
  9732  067B  07F2               	addwf	___ftpack@arg+2,f
  9733  067C  3001               	movlw	1
  9734  067D                     u168_25:	
  9735  067D  36F2               	lsrf	___ftpack@arg+2,f
  9736  067E  0CF1               	rrf	___ftpack@arg+1,f
  9737  067F  0CF0               	rrf	___ftpack@arg,f
  9738  0680  0B89               	decfsz	9,f
  9739  0681  2E7D               	goto	u168_25
  9740  0682                     i1l692:	
  9741  0682  30FF               	movlw	255
  9742  0683  0572               	andwf	___ftpack@arg+2,w
  9743  0684  1903               	btfsc	3,2
  9744  0685  2E8F               	goto	i1l2161
  9745  0686  2E6E               	goto	i1l2153
  9746  0687                     i1l2159:	
  9747  0687  3001               	movlw	1
  9748  0688  02F3               	subwf	___ftpack@exp,f
  9749  0689  3001               	movlw	1
  9750  068A                     u170_25:	
  9751  068A  35F0               	lslf	___ftpack@arg,f
  9752  068B  0DF1               	rlf	___ftpack@arg+1,f
  9753  068C  0DF2               	rlf	___ftpack@arg+2,f
  9754  068D  0B89               	decfsz	9,f
  9755  068E  2E8A               	goto	u170_25
  9756  068F                     i1l2161:	
  9757  068F  1BF1               	btfsc	___ftpack@arg+1,7
  9758  0690  2E95               	goto	i1l699
  9759  0691  3002               	movlw	2
  9760  0692  0273               	subwf	___ftpack@exp,w
  9761  0693  1803               	skipnc
  9762  0694  2E87               	goto	i1l2159
  9763  0695                     i1l699:	
  9764  0695  1873               	btfsc	___ftpack@exp,0
  9765  0696  2E9D               	goto	i1l700
  9766  0697  30FF               	movlw	255
  9767  0698  05F0               	andwf	___ftpack@arg,f
  9768  0699  307F               	movlw	127
  9769  069A  05F1               	andwf	___ftpack@arg+1,f
  9770  069B  30FF               	movlw	255
  9771  069C  05F2               	andwf	___ftpack@arg+2,f
  9772  069D                     i1l700:	
  9773  069D  1003               	clrc
  9774  069E  0CF3               	rrf	___ftpack@exp,f
  9775  069F  0873               	movf	___ftpack@exp,w
  9776  06A0  00F5               	movwf	??___ftpack
  9777  06A1  01F6               	clrf	??___ftpack+1
  9778  06A2  01F7               	clrf	??___ftpack+2
  9779  06A3  3010               	movlw	16
  9780  06A4                     u174_25:	
  9781  06A4  35F5               	lslf	??___ftpack,f
  9782  06A5  0DF6               	rlf	??___ftpack+1,f
  9783  06A6  0DF7               	rlf	??___ftpack+2,f
  9784  06A7  0B89               	decfsz	9,f
  9785  06A8  2EA4               	goto	u174_25
  9786  06A9  0875               	movf	??___ftpack,w
  9787  06AA  04F0               	iorwf	___ftpack@arg,f
  9788  06AB  0876               	movf	??___ftpack+1,w
  9789  06AC  04F1               	iorwf	___ftpack@arg+1,f
  9790  06AD  0877               	movf	??___ftpack+2,w
  9791  06AE  04F2               	iorwf	___ftpack@arg+2,f
  9792  06AF  0874               	movf	___ftpack@sign,w
  9793  06B0  1903               	btfsc	3,2
  9794  06B1  0008               	return
  9795  06B2  17F2               	bsf	___ftpack@arg+2,7
  9796  06B3  0008               	return
  9797  06B4                     __end_of___ftpack:	
  9798                           
  9799                           	psect	text50
  9800  0D1B                     __ptext50:	
  9801 ;; *************** function _EUSART_Transmit_ISR *****************
  9802 ;; Defined at:
  9803 ;;		line 171 in file "src/eusart.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;		None
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;		None
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      void 
  9810 ;; Registers used:
  9811 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9812 ;; Tracked objects:
  9813 ;;		On entry : 0/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9817 ;;      Params:         0       0       0       0       0       0       0       0
  9818 ;;      Locals:         0       0       0       0       0       0       0       0
  9819 ;;      Temps:          1       0       0       0       0       0       0       0
  9820 ;;      Totals:         1       0       0       0       0       0       0       0
  9821 ;;Total ram usage:        1 bytes
  9822 ;; Hardware stack levels used:    1
  9823 ;; This function calls:
  9824 ;;		Nothing
  9825 ;; This function is called by:
  9826 ;;		_INTERRUPT_InterruptManager
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           
  9831                           ;psect for function _EUSART_Transmit_ISR
  9832  0D1B                     _EUSART_Transmit_ISR:	
  9833                           
  9834                           ;eusart.c: 175: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  9835                           
  9836                           ;incstack = 0
  9837                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  9838  0D1B  3008               	movlw	8
  9839  0D1C  0140               	movlb	0	; select bank0
  9840  0D1D  026C               	subwf	_eusartTxBufferRemaining,w	;volatile
  9841  0D1E  1803               	skipnc
  9842  0D1F  2D35               	goto	i1l170
  9843                           
  9844                           ;eusart.c: 176: {;eusart.c: 177: TX1REG = eusartTxBuffer[eusartTxTail++];
  9845  0D20  086A               	movf	_eusartTxTail,w
  9846  0D21  3EA8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  9847  0D22  0086               	movwf	6
  9848  0D23  0187               	clrf	7
  9849  0D24  0801               	movf	1,w
  9850  0D25  0142               	movlb	2	; select bank2
  9851  0D26  009A               	movwf	26	;volatile
  9852  0D27  3001               	movlw	1
  9853  0D28  00F0               	movwf	??_EUSART_Transmit_ISR
  9854  0D29  0870               	movf	??_EUSART_Transmit_ISR,w
  9855  0D2A  0140               	movlb	0	; select bank0
  9856  0D2B  07EA               	addwf	_eusartTxTail,f
  9857                           
  9858                           ;eusart.c: 178: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  9859  0D2C  3008               	movlw	8
  9860  0D2D  026A               	subwf	_eusartTxTail,w
  9861  0D2E  1803               	btfsc	3,0
  9862                           
  9863                           ;eusart.c: 179: {;eusart.c: 180: eusartTxTail = 0;
  9864  0D2F  01EA               	clrf	_eusartTxTail
  9865                           
  9866                           ;eusart.c: 181: };eusart.c: 182: eusartTxBufferRemaining++;
  9867  0D30  3001               	movlw	1
  9868  0D31  00F0               	movwf	??_EUSART_Transmit_ISR
  9869  0D32  0870               	movf	??_EUSART_Transmit_ISR,w
  9870  0D33  07EC               	addwf	_eusartTxBufferRemaining,f	;volatile
  9871                           
  9872                           ;eusart.c: 183: }
  9873  0D34  0008               	return
  9874  0D35                     i1l170:	
  9875                           
  9876                           ;eusart.c: 184: else;eusart.c: 185: {;eusart.c: 186: PIE3bits.TX1IE = 0;
  9877  0D35  014E               	movlb	14	; select bank14
  9878  0D36  1219               	bcf	25,4	;volatile
  9879  0D37  0008               	return
  9880  0D38                     __end_of_EUSART_Transmit_ISR:	
  9881                           
  9882                           	psect	text51
  9883  0D79                     __ptext51:	
  9884 ;; *************** function _EUSART_Receive_ISR *****************
  9885 ;; Defined at:
  9886 ;;		line 190 in file "src/eusart.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;		None
  9889 ;; Auto vars:     Size  Location     Type
  9890 ;;  dumread         1    1[COMMON] unsigned char 
  9891 ;; Return value:  Size  Location     Type
  9892 ;;                  1    wreg      void 
  9893 ;; Registers used:
  9894 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9895 ;; Tracked objects:
  9896 ;;		On entry : 0/0
  9897 ;;		On exit  : 0/0
  9898 ;;		Unchanged: 0/0
  9899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9900 ;;      Params:         0       0       0       0       0       0       0       0
  9901 ;;      Locals:         1       0       0       0       0       0       0       0
  9902 ;;      Temps:          1       0       0       0       0       0       0       0
  9903 ;;      Totals:         2       0       0       0       0       0       0       0
  9904 ;;Total ram usage:        2 bytes
  9905 ;; Hardware stack levels used:    1
  9906 ;; This function calls:
  9907 ;;		Nothing
  9908 ;; This function is called by:
  9909 ;;		_INTERRUPT_InterruptManager
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           
  9914                           ;psect for function _EUSART_Receive_ISR
  9915  0D79                     _EUSART_Receive_ISR:	
  9916                           
  9917                           ;eusart.c: 192: uint8_t dumread;;eusart.c: 193: if(1 == RC1STAbits.OERR)
  9918                           
  9919                           ;incstack = 0
  9920                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  9921  0D79  0142               	movlb	2	; select bank2
  9922  0D7A  1C9D               	btfss	29,1	;volatile
  9923  0D7B  2D7E               	goto	i1l176
  9924                           
  9925                           ;eusart.c: 194: {;eusart.c: 197: RC1STAbits.SPEN = 0;
  9926  0D7C  139D               	bcf	29,7	;volatile
  9927                           
  9928                           ;eusart.c: 198: RC1STAbits.SPEN = 1;
  9929  0D7D  179D               	bsf	29,7	;volatile
  9930  0D7E                     i1l176:	
  9931                           
  9932                           ;eusart.c: 199: };eusart.c: 202: if(BAUD1CON&0x02)
  9933  0D7E  1C9F               	btfss	31,1	;volatile
  9934  0D7F  2D85               	goto	i1l2809
  9935                           
  9936                           ;eusart.c: 203: {;eusart.c: 204: dumread = RC1REG;
  9937  0D80  0819               	movf	25,w	;volatile
  9938  0D81  00F0               	movwf	??_EUSART_Receive_ISR
  9939  0D82  0870               	movf	??_EUSART_Receive_ISR,w
  9940  0D83  00F1               	movwf	EUSART_Receive_ISR@dumread
  9941                           
  9942                           ;eusart.c: 205: }
  9943  0D84  0008               	return
  9944  0D85                     i1l2809:	
  9945                           
  9946                           ;eusart.c: 206: else;eusart.c: 207: {;eusart.c: 208: eusartRxBuffer[eusartRxHead++] = RC
      +                          1REG;
  9947  0D85  0819               	movf	25,w	;volatile
  9948  0D86  00F0               	movwf	??_EUSART_Receive_ISR
  9949  0D87  0140               	movlb	0	; select bank0
  9950  0D88  0869               	movf	_eusartRxHead,w
  9951  0D89  3EA0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  9952  0D8A  0086               	movwf	6
  9953  0D8B  0187               	clrf	7
  9954  0D8C  0870               	movf	??_EUSART_Receive_ISR,w
  9955  0D8D  0081               	movwf	1
  9956  0D8E  3001               	movlw	1
  9957  0D8F  00F0               	movwf	??_EUSART_Receive_ISR
  9958  0D90  0870               	movf	??_EUSART_Receive_ISR,w
  9959  0D91  07E9               	addwf	_eusartRxHead,f
  9960                           
  9961                           ;eusart.c: 209: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  9962  0D92  3008               	movlw	8
  9963  0D93  0269               	subwf	_eusartRxHead,w
  9964  0D94  1803               	btfsc	3,0
  9965                           
  9966                           ;eusart.c: 210: {;eusart.c: 211: eusartRxHead = 0;
  9967  0D95  01E9               	clrf	_eusartRxHead
  9968                           
  9969                           ;eusart.c: 212: };eusart.c: 213: eusartRxCount++;
  9970  0D96  3001               	movlw	1
  9971  0D97  00F0               	movwf	??_EUSART_Receive_ISR
  9972  0D98  0870               	movf	??_EUSART_Receive_ISR,w
  9973  0D99  07E7               	addwf	_eusartRxCount,f	;volatile
  9974  0D9A  0008               	return
  9975  0D9B                     __end_of_EUSART_Receive_ISR:	
  9976  007E                     btemp	set	126	;btemp
  9977  007E                     int$flags	set	126
  9978  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         60
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      78
    BANK1            80     30      69
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    AngleCalcu@p	PTR float  size(1) Largest target is 6
		 -> filter_result(BANK1[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_Task->___fttol
    _Mpu6500GyroAngle->___awtoft
    i1_Get6500Data->i1_Com_Lock_MPU_RD_Reg
    i1_Com_Lock_MPU_RD_Reg->i1_Com_Lock_IIC_Read_Data
    i1_Com_Lock_MPU_RD_Reg->i1_Com_Lock_IIC_Write_Data
    ___ftneg->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _AngleCalcu->___ftmul
    ___ftmul->___ftpack
    ___ftadd->___awtoft
    ___ftadd->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR0_ISR->_TMR0_Task
    _TMR0_Task->_Mpu6500GyroAngle
    _Mpu6500GyroAngle->___ftdiv
    ___ftdiv->___ftadd
    _AngleCalcu->___ftadd
    ___ftadd->___ftmul

Critical Paths under _main in BANK1

    _SYSTEM_Initialize->_Init_MPU6500
    _Init_MPU6500->_Read_Offset
    _Read_Offset->_Get6500Data
    _Get6500Data->_Com_Lock_MPU_RD_Reg
    _Com_Lock_MPU_RD_Reg->_Com_Lock_IIC_Read_Data
    _Com_Lock_MPU_RD_Reg->_Com_Lock_IIC_Write_Data
    _Com_Lock_MPU_Write_Command->_Com_Lock_IIC_Write_Data
    _CheckDoorOpened->___ftge
    _CheckDoorClosed->___ftge

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3355
                                             29 BANK1      1     1      0
                    _CheckDoorClosed
                    _CheckDoorOpened
                         _ClearAngle
               _EUSART_Enable_WakeUp
                       _EUSART_Write
                         _ReadRstPIN
                    _ReadTouchKeyPIN
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
                     _TMR0_StopTimer
 ---------------------------------------------------------------------------------
 (1) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1711
                  _EUSART_Initialize
                       _Init_MPU6500
                   _Interrupt_Enable
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Interrupt_Enable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_MPU6500                                         2     2      0    1711
                                             27 BANK1      2     2      0
                _Com_Lock_MPU_RD_Reg
         _Com_Lock_MPU_Write_Command
                        _Read_Offset
 ---------------------------------------------------------------------------------
 (3) _Read_Offset                                          9     9      0     890
                                             18 BANK1      9     9      0
                       _EUSART_Write
                        _Get6500Data
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     428
                                              0 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 (4) _Get6500Data                                         10     8      2     326
                                              8 BANK1     10     8      2
                _Com_Lock_MPU_RD_Reg
 ---------------------------------------------------------------------------------
 (5) _Com_Lock_MPU_RD_Reg                                  3     3      0     236
                                              5 BANK1      3     3      0
             _Com_Lock_IIC_Read_Data
                 _Com_Lock_IIC_Start
                  _Com_Lock_IIC_Stop
            _Com_Lock_IIC_Write_Data
 ---------------------------------------------------------------------------------
 (6) _Com_Lock_IIC_Read_Data                               5     5      0      94
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      44
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Com_Lock_MPU_Write_Command                           2     1      1     585
                                              5 BANK1      2     1      1
                 _Com_Lock_IIC_Start
                  _Com_Lock_IIC_Stop
            _Com_Lock_IIC_Write_Data
 ---------------------------------------------------------------------------------
 (6) _Com_Lock_IIC_Write_Data                              5     5      0      93
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (6) _Com_Lock_IIC_Stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Com_Lock_IIC_Start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadTouchKeyPIN                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadRstPIN                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Enable_WakeUp                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearAngle                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckDoorOpened                                      0     0      0     800
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _CheckDoorClosed                                      1     1      0     800
                                              9 BANK1      1     1      0
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     800
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   15557
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
                  i1_TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (8) i1_TMR0_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0   15556
                          _TMR0_Task
 ---------------------------------------------------------------------------------
 (9) _TMR0_Task                                            5     5      0   15556
                                             49 BANK0      5     5      0
                         _AngleCalcu
                   _Mpu6500GyroAngle
                            ___fttol
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (10) ___fttol                                            14    10      4     380
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (10) _Mpu6500GyroAngle                                   11     8      3    8776
                                             39 BANK0     10     7      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                                _abs
                     i1_EUSART_Write
                      i1_Get6500Data
 ---------------------------------------------------------------------------------
 (11) i1_Get6500Data                                      10     8      2     326
                                              8 COMMON     5     3      2
                                              0 BANK0      5     5      0
              i1_Com_Lock_MPU_RD_Reg
 ---------------------------------------------------------------------------------
 (12) i1_Com_Lock_MPU_RD_Reg                               3     3      0     236
                                              5 COMMON     3     3      0
           i1_Com_Lock_IIC_Read_Data
               i1_Com_Lock_IIC_Start
                i1_Com_Lock_IIC_Stop
          i1_Com_Lock_IIC_Write_Data
 ---------------------------------------------------------------------------------
 (13) i1_Com_Lock_IIC_Write_Data                           5     5      0      93
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) i1_Com_Lock_IIC_Stop                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_Com_Lock_IIC_Start                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i1_Com_Lock_IIC_Read_Data                            5     5      0      94
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (10) i1_EUSART_Write                                      2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _abs                                                 4     2      2     194
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) ___ftneg                                             3     0      3     109
                                              0 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftdiv                                            16    10      6    2478
                                             23 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___awtoft                                            6     3      3    2289
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) _AngleCalcu                                          7     0      7    6356
                                             23 BANK0      7     0      7
                            ___ftadd
                            ___ftmul
                           i1___ftge
 ---------------------------------------------------------------------------------
 (11) i1___ftge                                            9     3      6     240
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            16    10      6    2524
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ftadd                                            13     7      6    3268
                                             10 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (12) ___ftpack                                            8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckDoorClosed
     ___ftge
   _CheckDoorOpened
     ___ftge
   _ClearAngle
   _EUSART_Enable_WakeUp
   _EUSART_Write
   _ReadRstPIN
   _ReadTouchKeyPIN
   _SYSTEM_Initialize
     _EUSART_Initialize
     _Init_MPU6500
       _Com_Lock_MPU_RD_Reg
         _Com_Lock_IIC_Read_Data
         _Com_Lock_IIC_Start
         _Com_Lock_IIC_Stop
         _Com_Lock_IIC_Write_Data
       _Com_Lock_MPU_Write_Command
         _Com_Lock_IIC_Start
         _Com_Lock_IIC_Stop
         _Com_Lock_IIC_Write_Data
       _Read_Offset
         _EUSART_Write
         _Get6500Data
           _Com_Lock_MPU_RD_Reg
             _Com_Lock_IIC_Read_Data
             _Com_Lock_IIC_Start
             _Com_Lock_IIC_Stop
             _Com_Lock_IIC_Write_Data
         ___aldiv
     _Interrupt_Enable
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
   _TMR0_StartTimer
   _TMR0_StopTimer

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR0_ISR
     _TMR0_Task
       _AngleCalcu
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___ftpack
         i1___ftge
       _Mpu6500GyroAngle
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         _abs
         i1_EUSART_Write
         i1_Get6500Data
           i1_Com_Lock_MPU_RD_Reg
             i1_Com_Lock_IIC_Read_Data
             i1_Com_Lock_IIC_Start
             i1_Com_Lock_IIC_Stop
             i1_Com_Lock_IIC_Write_Data
       ___fttol
       i1_EUSART_Write
   i1_TMR0_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A1       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     36      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1E      45       8       86.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A1      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jan 18 11:18:48 2019

                   ??i1_EUSART_Write 0070                   ??_Interrupt_Enable 00C6  
         i1Com_Lock_IIC_Write_Data@i 0073                          __CFG_CP$OFF 0000  
   __size_of_Com_Lock_IIC_Write_Data 004A                 i1_Com_Lock_IIC_Start 0C9C  
                       ___ftadd@exp1 0036                         ___ftadd@exp2 0035  
                        __CFG_LVP$ON 0000                         ___ftadd@sign 0034  
                                l103 0C74                                  l301 0752  
                                l302 0754                                  l161 0E11  
                                l164 0E1C                                  l351 0EC4  
                                l290 07D8                                  l291 07C2  
                                l560 057B                                  l289 07BA  
                                l299 0728                        _filter_result 00C0  
                       i1___ftge@ff1 0070                         i1___ftge@ff2 0073  
         Com_Lock_IIC_Write_Data@dat 00C7                                  _abs 0C60  
                                _sum 005A              __size_of_PMD_Initialize 0008  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                      __CFG_BBEN$OFF 0000                     AngleCalcu@gyro_m 003A  
                      ?_Init_MPU6500 0070                         __CFG_ZCD$OFF 0000  
                       ___ftdiv@cntr 0041                         ___ftdiv@sign 0046  
                               ?_abs 0070                                 l2025 07C4  
                               l3021 02E1                                 l3015 02D7  
                               l2241 059C                                 l2233 058C  
                               l3025 02E9                                 l2059 0745  
                               l2251 05CA                                 l2243 05AA  
                               l3019 02DB                                 l3029 02EC  
                               l2255 05D5                                 l2513 0618  
                               l2195 0E0D                                 l2259 05E3  
                               l2507 05FA                                 l2733 0F32  
                               l2729 0F1C                                 l2851 0FF7  
                               l2765 0C36                                 l2781 0C78  
                               l2941 0232                                 l2839 0EC7  
                               l2857 0FFE                                 l2849 0FF4  
                               l2785 0C7A                                 l2953 024E  
                               l2971 027A                                 l2965 0267  
                               l2949 0245                                 l2993 02AB  
                               l2995 02B1                                 l2987 029C  
                               _LATA 0018                                 _LATB 0019  
                               _LATC 001A                                 u3237 0765  
                               u3247 07A0                                 u1845 059F  
                               u1865 05AB                                 u1875 05BF  
                               _PMD0 0796                                 u1885 05CB  
                               _PMD1 0797                                 _PMD2 0798  
                               _PMD3 0799                                 _PMD4 079A  
                               _PMD5 079B                                 _WPUA 1F39  
                               _WPUB 1F44                                 _WPUC 1F4F  
                               _WPUE 1F65                        __CFG_FCMEN$ON 0000  
                               abs@a 0070                                 _main 022E  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                         _AngleCalcu 06B4                      _TMR0_StartTimer 0C25  
                         _ClearAngle 0C49                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 _sum_ 0056  
                               btemp 007E                        __CFG_BOREN$ON 0000  
          __size_of_Mpu6500GyroAngle 00DE                                 start 003C  
              __end_ofi1_Get6500Data 0D79                    AngleCalcu@angle_m 0037  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 0028                         ___ftmul@sign 0029  
        __end_of_Com_Lock_MPU_RD_Reg 0E64                         ___fttol@exp1 007D  
                              ??_abs 0072                        ??_Read_Offset 00D8  
                       ___fttol@lval 0079              __end_of_TMR0_Initialize 0C60  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 000A  
              ?i1_Com_Lock_IIC_Start 0070        __end_of_OSCILLATOR_Initialize 07FE  
                    __end_of___aldiv 05EC                                _ADACT 009F  
                              ?_main 0070                      __end_of___ftadd 0150  
                    __end_of___ftdiv 0455                      __end_of___ftneg 0C49  
                    __end_of___ftmul 03AC                      __end_of___fttol 056A  
                              i1l301 0FB4                                i1l302 0FB5  
                              i1l214 0022                                i1l215 0028  
                              i1l161 0DC2                                i1l170 0D35  
                              i1l218 003A                                i1l164 0DCC  
                              i1l176 0D7E                                i1l290 0F68  
                              i1l291 0F56                                i1l700 069D  
                              i1l289 0F50                                i1l723 00F9  
                              i1l299 0F92                                i1l692 0682  
                              i1l783 0550                                i1l699 0695  
                              _OSCEN 0891                                _TMR0H 059D  
                              _TMR0L 059C                                _PORTA 000C  
                              _PORTC 000E                      _gu8OldDoorState 00E4  
                              _TRISA 0012                                _TRISB 0013  
                              _TRISC 0014                     __end_of_TMR0_ISR 0CE9  
                      __CFG_WRTB$OFF 0000                        __CFG_WRTC$OFF 0000  
                     ??_Init_MPU6500 00E1                   __size_of_TMR0_Task 008F  
                      ___awtoft@sign 007D                 _EUSART_Enable_WakeUp 0C1F  
   __end_ofi1_Com_Lock_IIC_Read_Data 0FBF                        ___ftpack@sign 0074  
                   __end_ofi1___ftge 0F05                         Get6500Data@H 00D5  
                       Get6500Data@L 00D6                         _gu8ClosedCnt 00BD  
                              status 0003                                wtemp0 007E  
              i1_Com_Lock_MPU_RD_Reg 0DE3                         _gu8DoorState 006D  
        ?_Com_Lock_MPU_Write_Command 00CB                      __initialization 003E  
        ??i1_Com_Lock_IIC_Write_Data 0070                         __end_of_main 02F9  
                         _ReadRstPIN 0C31                           _Frist_gyro 0061  
                     __CFG_SAFEN$OFF 0000                    _Com_Lock_IIC_Stop 0C8C  
                     ??_EUSART_Write 00C6          ?_INTERRUPT_InterruptManager 0070  
                 ?_Com_Lock_IIC_Stop 0070                               ??_main 00E3  
                      ___fttol@sign1 0078        Com_Lock_IIC_Write_Data@retVal 00C8  
     Com_Lock_MPU_Write_Command@data 00CB                  __end_of_Read_Offset 0650  
                ??_Com_Lock_IIC_Stop 00C6                ?_EUSART_Enable_WakeUp 0070  
            __end_of_TMR0_StartTimer 0C28                               _ADCON0 009D  
                             _ADCON1 009E                               _ADRESH 009C  
                             _ADRESL 009B             __size_of_ReadTouchKeyPIN 000E  
                   __end_of___awtoft 0D58                               _ANSELA 1F38  
                             _ANSELB 1F43                               _ANSELC 1F4E  
                   __end_of___ftpack 06B4                   __CFG_RSTOSC$HFINT1 0000  
                             _T0CON0 059E                               _T0CON1 059F  
                             _RC1REG 0119                               _RC1STA 011D  
                             i1l2113 0FAA                               i1l2151 0669  
                             i1l2311 00CF                               i1l2303 00B2  
                             i1l2161 068F                               i1l2153 066E  
                             i1l2145 0658                               i1l2321 00EB  
                             i1l2313 00D4                               _ODCONA 1F3A  
                             _ODCONB 1F45                               i1l2331 011D  
                             i1l2323 00F5                               i1l2315 00D8  
                             i1l2411 0361                               i1l3035 0CDD  
                             _ODCONC 1F50                               _RC6PPS 1F26  
                             i1l2149 065F                               i1l2341 0138  
                             i1l2309 00C5                               i1l3053 0014  
                             i1l2159 0687                               i1l2327 010B  
                             i1l2423 037D                               i1l2415 0369  
                             i1l2271 0D42                               i1l2351 03C3  
                             i1l2079 0F57                               i1l3047 000D  
                             i1l2281 0082                               i1l2601 053A  
                             i1l3073 0034                               i1l2291 0098  
                             i1l2427 0385                               i1l2371 041A  
                             i1l3059 001B                               u201_25 00B3  
                             i1l2285 0089                               i1l2357 03D9  
                             i1l2541 01A4                               i1l2613 0561  
                             i1l2447 0DBE                               i1l2607 0547  
                             i1l2393 0310                               i1l2473 0EE0  
                             i1l2609 0553                               i1l2571 06FE  
                             i1l2379 0433                               i1l2547 01C4  
                             u210_25 00EC                               i1l2477 0EF6  
                             i1l2549 01C6                               i1l2581 04FC  
                             i1l2399 0326                               i1l2559 01EF  
                             i1l2809 0D85                               i1l2569 06D8  
                             i1l2599 052C                               u204_25 00C6  
                             u220_25 042A                               u221_25 0434  
                             u207_25 00D9                               u232_25 0386  
                             u233_25 038C                               u225_25 0332  
                             u217_25 03EB                               u170_25 068A  
                             u226_25 0342                               u218_25 03FB  
                             _FVRCON 090C                               u219_25 041B  
                             u228_25 036A                               u252_25 0503  
                             u229_25 0370                               u245_25 019A  
                             u174_25 06A4                               u166_25 0664  
                             u262_25 04B7                               u247_25 01C2  
                             u255_25 052D                               u263_25 04D1  
                             u168_25 067D                               u258_25 0548  
                             _OSCFRQ 0893                               _TX1REG 011A  
                    _CheckDoorClosed 0FBF                               _TX1STA 011E  
                     i1Get6500Data@H 007A                       i1Get6500Data@L 007B  
                        ?_AngleCalcu 0037                          ?_ClearAngle 0070  
                    _CheckDoorOpened 0E95                       __CFG_PWRTE$OFF 0000  
          __end_of_Com_Lock_IIC_Stop 0C9C                               ___ftge 0F05  
                  __end_of_TMR0_Task 04E4                            ??___aldiv 00CE  
                          ??___ftadd 0030                       __CFG_STVREN$ON 0000  
                          ??___ftdiv 003D                            ??___ftneg 007E  
                          ??___ftmul 0020                            ??___fttol 0074  
            _Com_Lock_IIC_Write_Data 07AA               ??i1_Com_Lock_IIC_Start 0070  
                _EUSART_Transmit_ISR 0D1B                     ?_TMR0_Initialize 0070  
       i1Com_Lock_IIC_Write_Data@dat 0071                ___ftmul@f3_as_product 0025  
                     _PMD_Initialize 0C38            i1_Com_Lock_IIC_Write_Data 0F41  
                      _gu8DoorClosed 00BE                 ?_EUSART_Transmit_ISR 0070  
                      _gu8DoorOpened 00BF                    _SYSTEM_Initialize 0CBE  
            __end_of__initialization 0056               ?i1_Com_Lock_MPU_RD_Reg 0070  
           i1_Com_Lock_IIC_Read_Data 0F7F                           ___ftadd@f1 002A  
                         ___ftadd@f2 002D                           ___ftge@ff1 00C6  
                         ___ftge@ff2 00C9                   ?_SYSTEM_Initialize 0070  
                   _Mpu6500GyroAngle 0150                           ___ftdiv@f1 003A  
                         ___ftdiv@f2 0037                           ___ftdiv@f3 0042  
                       ?_Get6500Data 00CE                           ___ftneg@f1 0020  
                         ___awtoft@c 0078                           ___ftmul@f1 0078  
                         ___ftmul@f2 007B                           ___fttol@f1 0070  
                     __pcstackCOMMON 0070                         __pidataBANK0 07FE  
                       __pidataBANK1 07FF                 __end_of_Init_MPU6500 07AA  
                ??_SYSTEM_Initialize 00E3                          ?_ReadRstPIN 0070  
                          ?_TMR0_ISR 0070         __size_ofi1_Com_Lock_IIC_Stop 0010  
                        _Read_Offset 05EC               __end_of_PMD_Initialize 0C40  
      Com_Lock_MPU_Write_Command@reg 00CC                            ?i1___ftge 0070  
                 _Com_Lock_IIC_Start 0CAD                  __size_of_AngleCalcu 005F  
                __size_of_ClearAngle 000A            __size_of_Interrupt_Enable 0003  
             ??_EUSART_Enable_WakeUp 00C6      i1Com_Lock_IIC_Write_Data@retVal 0072  
            __end_of_CheckDoorClosed 1000             ??_Com_Lock_IIC_Read_Data 00C6  
                ?_Com_Lock_IIC_Start 0070  __size_of_Com_Lock_MPU_Write_Command 0016  
                   ?_TMR0_StartTimer 0070            __end_of_SYSTEM_Initialize 0CD3  
              ??_EUSART_Transmit_ISR 0070              __end_of_CheckDoorOpened 0ECA  
                         __pbssBANK0 0056                           __pbssBANK1 00A0  
               __end_of_EUSART_Write 0E36          __size_of_EUSART_Receive_ISR 0022  
                  ??_ReadTouchKeyPIN 00C6            ??_Com_Lock_IIC_Write_Data 00C6  
                         __pmaintext 022E                 ??_Com_Lock_IIC_Start 00C6  
         __size_of_Com_Lock_IIC_Stop 0010                              ?___ftge 00C6  
            __size_of_TMR0_StopTimer 0003                           ??_TMR0_ISR 007E  
                         __pintentry 0004                            ?___awtoft 0078  
                          ?___ftpack 0070                           ??i1___ftge 0076  
                    ?_PMD_Initialize 0070                        _eusartRxCount 0067  
                  _gu8OperationState 0066                              _SP1BRGH 011C  
                            _SP1BRGL 011B                              _OSCCON1 088D  
                            _OSCCON3 088F                              _OSCSTAT 0890  
                            _OSCTUNE 0892                  __size_of_ReadRstPIN 0007  
                            _Angle_t 005E                              _Sam_cnt 0065  
                            ___aldiv 056A                      __size_of___ftge 003C  
                            ___ftadd 005A                              ___ftdiv 03AC  
                            ___ftneg 0C40                              ___ftmul 02F9  
                            ___fttol 04E4            Com_Lock_IIC_Read_Data@ack 00C7  
                Mpu6500GyroAngle@dir 004D                           ??___awtoft 007B  
                         ??___ftpack 0075           Mpu6500GyroAngle@gyro_angle 004E  
                            __ptext1 0C28                              __ptext2 0C25  
                            __ptext3 0CBE                              __ptext4 0C53  
                            __ptext5 0C38                              __ptext6 0E64  
                            __ptext7 07F4                              __ptext8 0C22  
                            __ptext9 075F                      __CFG_WRTAPP$OFF 0000  
              _OSCILLATOR_Initialize 07F4         __size_of_Com_Lock_MPU_RD_Reg 002E  
                       __size_of_abs 000E              __size_ofi1_EUSART_Write 0026  
                   ___aldiv@dividend 00CA             ??_PIN_MANAGER_Initialize 00C6  
                    __CFG_WRTSAF$OFF 0000                            _IOCBFbits 1F4A  
                          _IOCCFbits 1F55               __size_ofi1_Get6500Data 0021  
                          _IOCBNbits 1F49                            _IOCCNbits 1F54  
                   ?_CheckDoorClosed 0070      __size_of_Com_Lock_IIC_Read_Data 004C  
         __size_of_SYSTEM_Initialize 0015                              clrloop0 0C2C  
                   ?_CheckDoorOpened 0070                 end_of_initialization 0056  
                       ??_AngleCalcu 007E                         ??_ClearAngle 00C6  
              __size_of_Init_MPU6500 004B                    _EUSART_Initialize 0CFF  
                 ?_EUSART_Initialize 0070                 __size_of_Get6500Data 0022  
                   ___aldiv@quotient 00D1                __CFG_WDTCPS$WDTCPS_13 0000  
                ??_EUSART_Initialize 00C6                            _TMR0_Task 0455  
                          _PORTBbits 000D                            _PORTCbits 000E  
           __end_of_Mpu6500GyroAngle 022E                     _Interrupt_Enable 0C22  
                 __end_of_AngleCalcu 0713                   __end_of_ClearAngle 0C53  
               __CFG_WDTCCS$LFINTOSC 0000           ??i1_Com_Lock_IIC_Read_Data 0070  
       Com_Lock_IIC_Read_Data@retVal 00C8                __size_of_EUSART_Write 002B  
            ??i1_Com_Lock_MPU_RD_Reg 0075                         _Init_MPU6500 075F  
                   __CFG_FEXTOSC$OFF 0000                  i1_Com_Lock_IIC_Stop 0C7C  
        i1Com_Lock_IIC_Read_Data@ack 0071            __end_of_EUSART_Initialize 0D1B  
                        ___ftdiv@exp 0045                        i1_Get6500Data 0D58  
                        ___ftmul@exp 0024                       _TMR0_StopTimer 0C28  
             _Com_Lock_IIC_Read_Data 0713                         ??_ReadRstPIN 00C6  
               ?i1_Com_Lock_IIC_Stop 0070                       __end_of___ftge 0F41  
                       ?_Read_Offset 0070                         _EUSART_Write 0E0B  
                  __size_of_TMR0_ISR 0016                           ?_TMR0_Task 0070  
      __size_ofi1_Com_Lock_IIC_Start 0011               ?_OSCILLATOR_Initialize 0070  
                  __size_ofi1___ftge 003B                  start_initialization 003E  
           __size_of_TMR0_Initialize 000D      __size_of_PIN_MANAGER_Initialize 0031  
                        __end_of_abs 0C6E                      _ReadTouchKeyPIN 0C6E  
           i1Get6500Data@REG_Address 007C                   __end_of_ReadRstPIN 0C38  
             __end_of_TMR0_StopTimer 0C2B                       ?i1_Get6500Data 0078  
                   __CFG_LPBOREN$OFF 0000                     ??_PMD_Initialize 00C6  
                           ??___ftge 00CC                ??i1_Com_Lock_IIC_Stop 0070  
                        __pdataBANK0 006D                          __pdataBANK1 00E4  
          EUSART_Receive_ISR@dumread 0071                       i1_EUSART_Write 0DBD  
                  __size_of___awtoft 0020                    __size_of___ftpack 0064  
        __end_of_EUSART_Transmit_ISR 0D38                            ___latbits 0001  
                      __pcstackBANK0 0020                        __pcstackBANK1 00C6  
      __size_of_EUSART_Enable_WakeUp 0003              Com_Lock_MPU_RD_Reg@addr 00CC  
                  i1_TMR0_StartTimer 0C1C           __end_of_EUSART_Receive_ISR 0D9B  
            Com_Lock_MPU_RD_Reg@temp 00CD           __size_of_EUSART_Initialize 001C  
                 ?i1_TMR0_StartTimer 0070                _TMR0_InterruptHandler 00B3  
                Read_Offset@G_Temp_X 00DC                            __pnvBANK0 006C  
                _Com_Lock_MPU_RD_Reg 0E36             __size_of_TMR0_StartTimer 0003  
                    ?_TMR0_StopTimer 0070               _PIN_MANAGER_Initialize 0E64  
       ??_Com_Lock_MPU_Write_Command 00CC                  ??i1_TMR0_StartTimer 0070  
          i1Com_Lock_MPU_RD_Reg@addr 0076          __size_of_Com_Lock_IIC_Start 0011  
                           ?___aldiv 00C6            i1Com_Lock_MPU_RD_Reg@temp 0077  
                           ?___ftadd 002A                             ?___ftdiv 0037  
                           ?___ftneg 0020                             ?___ftmul 0078  
                           ?___fttol 0070                         _eusartRxHead 0069  
                       _eusartTxHead 006B                         _eusartRxTail 0068  
                   __CFG_PPS1WAY$OFF 0000                         _eusartTxTail 006A  
             __end_ofi1_EUSART_Write 0DE3         ??_INTERRUPT_InterruptManager 007E  
                        ??_TMR0_Task 0051              __end_of_ReadTouchKeyPIN 0C7C  
            _eusartTxBufferRemaining 006C                             _BAUD1CON 011F  
               ?_Com_Lock_MPU_RD_Reg 0070                     __CFG_WDTE$SWDTEN 0000  
          __end_ofi1_TMR0_StartTimer 0C1F              Com_Lock_IIC_Read_Data@i 00C9  
               i1EUSART_Write@txData 0071                       _eusartRxBuffer 00A0  
                    ___aldiv@divisor 00C6                    ??_TMR0_Initialize 00C6  
                     _eusartTxBuffer 00A8                      ___aldiv@counter 00CF  
           ?_Com_Lock_IIC_Write_Data 0070                      ??i1_Get6500Data 0020  
                          clear_ram0 0C2B                             _PIE0bits 0716  
                           _PIE3bits 0719             __end_of_Interrupt_Enable 0C25  
          i1Com_Lock_IIC_Read_Data@i 0073  __size_of_INTERRUPT_InterruptManager 0038  
                           _PIR0bits 070C                             _PIR3bits 070F  
                  __CFG_BBSIZE$BB512 0000                             _TMR0_ISR 0CD3  
                     _gu16OpenTimCnt 00B5                      ?i1_EUSART_Write 0070  
                           i1___ftge 0ECA                           _ADCON0bits 009D  
               __size_of_Read_Offset 0064                         _RX1DTPPSbits 1ECB  
              ??_Com_Lock_MPU_RD_Reg 00CB                    ?_Mpu6500GyroAngle 0047  
                 ??_Mpu6500GyroAngle 004A       __size_ofi1_Com_Lock_MPU_RD_Reg 0028  
      __end_ofi1_Com_Lock_MPU_RD_Reg 0E0B                          AngleCalcu@p 003D  
                           _Old_gyro 00B9             __size_of_CheckDoorClosed 0041  
                           _New_gyro 0063              ?_Com_Lock_IIC_Read_Data 0070  
                      ??_Get6500Data 00D0             __size_of_CheckDoorOpened 0035  
            ??_OSCILLATOR_Initialize 00C6                    ??_TMR0_StartTimer 00C6  
                   __size_of___aldiv 0082                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftneg 0009  
                   __size_of___ftmul 00B3                     __size_of___fttol 0086  
                           ___awtoft 0D38                             ___ftpack 0650  
                   ?_ReadTouchKeyPIN 0070                           _T0CON0bits 059E  
                           __ptext10 05EC                             __ptext11 056A  
                           __ptext20 0CFF                             __ptext12 0D9B  
         __size_ofi1_TMR0_StartTimer 0003                             __ptext21 0C6E  
                           __ptext13 0E36                             __ptext30 0CD3  
                           __ptext22 0C31                             __ptext14 0713  
                           __ptext31 0455                             __ptext23 0C1F  
                           __ptext15 0E0B                             __ptext40 0DBD  
                           __ptext32 04E4                             __ptext24 0C49  
                           __ptext16 0CE9                             __ptext41 0C60  
                           __ptext33 0150                             __ptext25 0E95  
                           __ptext17 07AA                             __ptext50 0D1B  
                           __ptext42 0C40                             __ptext34 0D58  
                           __ptext26 0FBF                             __ptext18 0C8C  
                           __ptext51 0D79                             __ptext43 03AC  
                           __ptext35 0DE3                             __ptext27 0F05  
                           __ptext19 0CAD                             __ptext44 0D38  
                           __ptext36 0F41                             __ptext45 06B4  
                           __ptext37 0C7C                             __ptext29 0C1C  
                           __ptext46 0ECA                             __ptext38 0C9C  
                           __ptext47 02F9                             __ptext39 0F7F  
                           __ptext48 005A                             __ptext49 0650  
    __end_of_Com_Lock_IIC_Write_Data 07F4         __end_ofi1_Com_Lock_IIC_Start 0CAD  
     __end_of_Com_Lock_IIC_Read_Data 075F                        __size_of_main 00CB  
               __CFG_WDTCWS$WDTCWS_7 0000   __end_of_Com_Lock_MPU_Write_Command 0CFF  
         _Com_Lock_MPU_Write_Command 0CE9               Get6500Data@REG_Address 00D7  
  __size_ofi1_Com_Lock_IIC_Read_Data 0040   __size_ofi1_Com_Lock_IIC_Write_Data 003E  
          ?i1_Com_Lock_IIC_Read_Data 0070                           _RC1STAbits 011D  
         ?i1_Com_Lock_IIC_Write_Data 0070       i1Com_Lock_IIC_Read_Data@retVal 0072  
                           int$flags 007E                  __end_of_Get6500Data 0DBD  
 __end_of_INTERRUPT_InterruptManager 003C           _INTERRUPT_InterruptManager 0004  
                         _INTCONbits 000B                        _gu16RstTimCnt 00BB  
                           intlevel1 0000                     ??_TMR0_StopTimer 00C6  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
        __end_ofi1_Com_Lock_IIC_Stop 0C8C         __end_of_EUSART_Enable_WakeUp 0C22  
  __end_ofi1_Com_Lock_IIC_Write_Data 0F7F                   _EUSART_Receive_ISR 0D79  
                  ??_CheckDoorClosed 00CF                    ??_CheckDoorOpened 00CF  
                ?_EUSART_Receive_ISR 0070             Com_Lock_IIC_Write_Data@i 00C9  
                    _TMR0_Initialize 0C53                          _result_gyro 00B0  
                       ___aldiv@sign 00D0                   EUSART_Write@txData 00C7  
       __size_of_EUSART_Transmit_ISR 001D       __end_of_PIN_MANAGER_Initialize 0E95  
               ??_EUSART_Receive_ISR 0070                       Read_Offset@cnt 00E0  
         __end_of_Com_Lock_IIC_Start 0CBE                          _Get6500Data 0D9B  
                  ?_Interrupt_Enable 0070                           _G_Offset_X 00B7  
