
# 1 "src/filter.c"

# 13 "../../../../../Microchip/xc8/v2.00/pic/include/c90\stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef __int24 int24_t;

# 36
typedef signed long int int32_t;

# 52
typedef unsigned char uint8_t;

# 58
typedef unsigned int uint16_t;

# 65
typedef __uint24 uint24_t;

# 72
typedef unsigned long int uint32_t;

# 88
typedef signed char int_least8_t;

# 96
typedef signed int int_least16_t;

# 109
typedef __int24 int_least24_t;

# 118
typedef signed long int int_least32_t;

# 136
typedef unsigned char uint_least8_t;

# 143
typedef unsigned int uint_least16_t;

# 154
typedef __uint24 uint_least24_t;

# 162
typedef unsigned long int uint_least32_t;

# 181
typedef signed char int_fast8_t;

# 188
typedef signed int int_fast16_t;

# 200
typedef __int24 int_fast24_t;

# 208
typedef signed long int int_fast32_t;

# 224
typedef unsigned char uint_fast8_t;

# 230
typedef unsigned int uint_fast16_t;

# 240
typedef __uint24 uint_fast24_t;

# 247
typedef unsigned long int uint_fast32_t;

# 268
typedef int32_t intmax_t;

# 282
typedef uint32_t uintmax_t;

# 289
typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 21 "src/../inc/filter.h"
extern void AngleCalcu(float angle_m,float gyro_m,float *p);
void ClearAngle(void);
uint8_t CheckDoorOpened(void);
uint8_t CheckDoorClosed(void);

# 11 "src/filter.c"
static float Angle_t = 0;
static uint8_t gu8DoorOpened = 0;
static uint8_t gu8DoorClosed = 0;
static uint8_t gu8ClosedCnt = 0;

# 91
void AngleCalcu(float angle_m,float gyro_m,float *p)
{

# 99
if((gyro_m >= 0.1)||(gyro_m <= -0.1))
{
Angle_t = Angle_t + + gyro_m*0.01;
}
p[0] = Angle_t;
p[1] = gyro_m;
}

void ClearAngle(void)
{
Angle_t = 0;
gu8DoorOpened = 0;
}

uint8_t CheckDoorOpened(void)
{
if((Angle_t>= 10)||(Angle_t <= -10))
{
gu8DoorOpened = 1;
}
return gu8DoorOpened;
}

uint8_t CheckDoorClosed(void)
{
if((Angle_t<= 5)&&(Angle_t >= -5))
{
gu8ClosedCnt++;
}
else
{
gu8ClosedCnt = 0;
gu8DoorClosed = 0;
}
if(gu8ClosedCnt >= 50)
{
gu8ClosedCnt = 0;
gu8DoorClosed = 1;
}
return gu8DoorClosed;

}
