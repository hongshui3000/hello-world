Version 3.2 HI-TECH Software Intermediate Code
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;filter.h: 21: extern void AngleCalcu(float angle_m,float gyro_m,float *p);
[; ;filter.h: 22: void ClearAngle(void);
[; ;filter.h: 23: uint8_t CheckDoorOpened(void);
[; ;filter.h: 24: uint8_t CheckDoorClosed(void);
"11 src/filter.c
[v _Angle_t `f ~T0 @X0 1 s ]
[i _Angle_t
-> -> 0 `i `f
]
[; ;filter.c: 11: static float Angle_t = 0;
"12
[v _gu8DoorOpened `uc ~T0 @X0 1 s ]
[i _gu8DoorOpened
-> -> 0 `i `uc
]
[; ;filter.c: 12: static uint8_t gu8DoorOpened = 0;
"13
[v _gu8DoorClosed `uc ~T0 @X0 1 s ]
[i _gu8DoorClosed
-> -> 0 `i `uc
]
[; ;filter.c: 13: static uint8_t gu8DoorClosed = 0;
"14
[v _gu8ClosedCnt `uc ~T0 @X0 1 s ]
[i _gu8ClosedCnt
-> -> 0 `i `uc
]
[; ;filter.c: 14: static uint8_t gu8ClosedCnt = 0;
"91
[v _AngleCalcu `(v ~T0 @X0 1 ef3`f`f`*f ]
"92
{
[; ;filter.c: 91: void AngleCalcu(float angle_m,float gyro_m,float *p)
[; ;filter.c: 92: {
[e :U _AngleCalcu ]
"91
[v _angle_m `f ~T0 @X0 1 r1 ]
[v _gyro_m `f ~T0 @X0 1 r2 ]
[v _p `*f ~T0 @X0 1 r3 ]
"92
[f ]
[; ;filter.c: 99: if((gyro_m >= 0.1)||(gyro_m <= -0.1))
"99
[e $ ! || >= -> _gyro_m `d .0.1 <= -> _gyro_m `d -U .0.1 2  ]
[; ;filter.c: 100: {
"100
{
[; ;filter.c: 101: Angle_t = Angle_t + + gyro_m*0.01;
"101
[e = _Angle_t -> + -> _Angle_t `d * -> _gyro_m `d .0.01 `f ]
"102
}
[e :U 2 ]
[; ;filter.c: 102: }
[; ;filter.c: 103: p[0] = Angle_t;
"103
[e = *U + _p * -> -> 0 `i `x -> -> # *U _p `i `x _Angle_t ]
[; ;filter.c: 104: p[1] = gyro_m;
"104
[e = *U + _p * -> -> 1 `i `x -> -> # *U _p `i `x _gyro_m ]
[; ;filter.c: 105: }
"105
[e :UE 1 ]
}
"107
[v _ClearAngle `(v ~T0 @X0 1 ef ]
"108
{
[; ;filter.c: 107: void ClearAngle(void)
[; ;filter.c: 108: {
[e :U _ClearAngle ]
[f ]
[; ;filter.c: 109: Angle_t = 0;
"109
[e = _Angle_t -> -> 0 `i `f ]
[; ;filter.c: 110: gu8DoorOpened = 0;
"110
[e = _gu8DoorOpened -> -> 0 `i `uc ]
[; ;filter.c: 111: }
"111
[e :UE 3 ]
}
"113
[v _CheckDoorOpened `(uc ~T0 @X0 1 ef ]
"114
{
[; ;filter.c: 113: uint8_t CheckDoorOpened(void)
[; ;filter.c: 114: {
[e :U _CheckDoorOpened ]
[f ]
[; ;filter.c: 115: if((Angle_t>= 10)||(Angle_t <= -10))
"115
[e $ ! || >= _Angle_t -> -> 10 `i `f <= _Angle_t -> -U -> 10 `i `f 5  ]
[; ;filter.c: 116: {
"116
{
[; ;filter.c: 117: gu8DoorOpened = 1;
"117
[e = _gu8DoorOpened -> -> 1 `i `uc ]
"118
}
[e :U 5 ]
[; ;filter.c: 118: }
[; ;filter.c: 119: return gu8DoorOpened;
"119
[e ) _gu8DoorOpened ]
[e $UE 4  ]
[; ;filter.c: 120: }
"120
[e :UE 4 ]
}
"122
[v _CheckDoorClosed `(uc ~T0 @X0 1 ef ]
"123
{
[; ;filter.c: 122: uint8_t CheckDoorClosed(void)
[; ;filter.c: 123: {
[e :U _CheckDoorClosed ]
[f ]
[; ;filter.c: 124: if((Angle_t<= 5)&&(Angle_t >= -5))
"124
[e $ ! && <= _Angle_t -> -> 5 `i `f >= _Angle_t -> -U -> 5 `i `f 7  ]
[; ;filter.c: 125: {
"125
{
[; ;filter.c: 126: gu8ClosedCnt++;
"126
[e ++ _gu8ClosedCnt -> -> 1 `i `uc ]
"127
}
[; ;filter.c: 127: }
[e $U 8  ]
"128
[e :U 7 ]
[; ;filter.c: 128: else
[; ;filter.c: 129: {
"129
{
[; ;filter.c: 130: gu8ClosedCnt = 0;
"130
[e = _gu8ClosedCnt -> -> 0 `i `uc ]
[; ;filter.c: 131: gu8DoorClosed = 0;
"131
[e = _gu8DoorClosed -> -> 0 `i `uc ]
"132
}
[e :U 8 ]
[; ;filter.c: 132: }
[; ;filter.c: 133: if(gu8ClosedCnt >= 50)
"133
[e $ ! >= -> _gu8ClosedCnt `i -> 50 `i 9  ]
[; ;filter.c: 134: {
"134
{
[; ;filter.c: 135: gu8ClosedCnt = 0;
"135
[e = _gu8ClosedCnt -> -> 0 `i `uc ]
[; ;filter.c: 136: gu8DoorClosed = 1;
"136
[e = _gu8DoorClosed -> -> 1 `i `uc ]
"137
}
[e :U 9 ]
[; ;filter.c: 137: }
[; ;filter.c: 138: return gu8DoorClosed;
"138
[e ) _gu8DoorClosed ]
[e $UE 6  ]
[; ;filter.c: 140: }
"140
[e :UE 6 ]
}
